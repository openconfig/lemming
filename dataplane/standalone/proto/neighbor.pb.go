// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: dataplane/standalone/proto/neighbor.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NeighborEntryAttr int32

const (
	NeighborEntryAttr_NEIGHBOR_ENTRY_ATTR_UNSPECIFIED        NeighborEntryAttr = 0
	NeighborEntryAttr_NEIGHBOR_ENTRY_ATTR_DST_MAC_ADDRESS    NeighborEntryAttr = 1
	NeighborEntryAttr_NEIGHBOR_ENTRY_ATTR_PACKET_ACTION      NeighborEntryAttr = 2
	NeighborEntryAttr_NEIGHBOR_ENTRY_ATTR_USER_TRAP_ID       NeighborEntryAttr = 3
	NeighborEntryAttr_NEIGHBOR_ENTRY_ATTR_NO_HOST_ROUTE      NeighborEntryAttr = 4
	NeighborEntryAttr_NEIGHBOR_ENTRY_ATTR_META_DATA          NeighborEntryAttr = 5
	NeighborEntryAttr_NEIGHBOR_ENTRY_ATTR_COUNTER_ID         NeighborEntryAttr = 6
	NeighborEntryAttr_NEIGHBOR_ENTRY_ATTR_ENCAP_INDEX        NeighborEntryAttr = 7
	NeighborEntryAttr_NEIGHBOR_ENTRY_ATTR_ENCAP_IMPOSE_INDEX NeighborEntryAttr = 8
	NeighborEntryAttr_NEIGHBOR_ENTRY_ATTR_IS_LOCAL           NeighborEntryAttr = 9
	NeighborEntryAttr_NEIGHBOR_ENTRY_ATTR_IP_ADDR_FAMILY     NeighborEntryAttr = 10
)

// Enum value maps for NeighborEntryAttr.
var (
	NeighborEntryAttr_name = map[int32]string{
		0:  "NEIGHBOR_ENTRY_ATTR_UNSPECIFIED",
		1:  "NEIGHBOR_ENTRY_ATTR_DST_MAC_ADDRESS",
		2:  "NEIGHBOR_ENTRY_ATTR_PACKET_ACTION",
		3:  "NEIGHBOR_ENTRY_ATTR_USER_TRAP_ID",
		4:  "NEIGHBOR_ENTRY_ATTR_NO_HOST_ROUTE",
		5:  "NEIGHBOR_ENTRY_ATTR_META_DATA",
		6:  "NEIGHBOR_ENTRY_ATTR_COUNTER_ID",
		7:  "NEIGHBOR_ENTRY_ATTR_ENCAP_INDEX",
		8:  "NEIGHBOR_ENTRY_ATTR_ENCAP_IMPOSE_INDEX",
		9:  "NEIGHBOR_ENTRY_ATTR_IS_LOCAL",
		10: "NEIGHBOR_ENTRY_ATTR_IP_ADDR_FAMILY",
	}
	NeighborEntryAttr_value = map[string]int32{
		"NEIGHBOR_ENTRY_ATTR_UNSPECIFIED":        0,
		"NEIGHBOR_ENTRY_ATTR_DST_MAC_ADDRESS":    1,
		"NEIGHBOR_ENTRY_ATTR_PACKET_ACTION":      2,
		"NEIGHBOR_ENTRY_ATTR_USER_TRAP_ID":       3,
		"NEIGHBOR_ENTRY_ATTR_NO_HOST_ROUTE":      4,
		"NEIGHBOR_ENTRY_ATTR_META_DATA":          5,
		"NEIGHBOR_ENTRY_ATTR_COUNTER_ID":         6,
		"NEIGHBOR_ENTRY_ATTR_ENCAP_INDEX":        7,
		"NEIGHBOR_ENTRY_ATTR_ENCAP_IMPOSE_INDEX": 8,
		"NEIGHBOR_ENTRY_ATTR_IS_LOCAL":           9,
		"NEIGHBOR_ENTRY_ATTR_IP_ADDR_FAMILY":     10,
	}
)

func (x NeighborEntryAttr) Enum() *NeighborEntryAttr {
	p := new(NeighborEntryAttr)
	*p = x
	return p
}

func (x NeighborEntryAttr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NeighborEntryAttr) Descriptor() protoreflect.EnumDescriptor {
	return file_dataplane_standalone_proto_neighbor_proto_enumTypes[0].Descriptor()
}

func (NeighborEntryAttr) Type() protoreflect.EnumType {
	return &file_dataplane_standalone_proto_neighbor_proto_enumTypes[0]
}

func (x NeighborEntryAttr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NeighborEntryAttr.Descriptor instead.
func (NeighborEntryAttr) EnumDescriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_neighbor_proto_rawDescGZIP(), []int{0}
}

type CreateNeighborEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry            *NeighborEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	DstMacAddress    []byte         `protobuf:"bytes,2,opt,name=dst_mac_address,json=dstMacAddress,proto3,oneof" json:"dst_mac_address,omitempty"`
	PacketAction     *PacketAction  `protobuf:"varint,3,opt,name=packet_action,json=packetAction,proto3,enum=lemming.dataplane.sai.PacketAction,oneof" json:"packet_action,omitempty"`
	UserTrapId       *uint64        `protobuf:"varint,4,opt,name=user_trap_id,json=userTrapId,proto3,oneof" json:"user_trap_id,omitempty"`
	NoHostRoute      *bool          `protobuf:"varint,5,opt,name=no_host_route,json=noHostRoute,proto3,oneof" json:"no_host_route,omitempty"`
	MetaData         *uint32        `protobuf:"varint,6,opt,name=meta_data,json=metaData,proto3,oneof" json:"meta_data,omitempty"`
	CounterId        *uint64        `protobuf:"varint,7,opt,name=counter_id,json=counterId,proto3,oneof" json:"counter_id,omitempty"`
	EncapIndex       *uint32        `protobuf:"varint,8,opt,name=encap_index,json=encapIndex,proto3,oneof" json:"encap_index,omitempty"`
	EncapImposeIndex *bool          `protobuf:"varint,9,opt,name=encap_impose_index,json=encapImposeIndex,proto3,oneof" json:"encap_impose_index,omitempty"`
	IsLocal          *bool          `protobuf:"varint,10,opt,name=is_local,json=isLocal,proto3,oneof" json:"is_local,omitempty"`
}

func (x *CreateNeighborEntryRequest) Reset() {
	*x = CreateNeighborEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_neighbor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNeighborEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNeighborEntryRequest) ProtoMessage() {}

func (x *CreateNeighborEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_neighbor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNeighborEntryRequest.ProtoReflect.Descriptor instead.
func (*CreateNeighborEntryRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_neighbor_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNeighborEntryRequest) GetEntry() *NeighborEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *CreateNeighborEntryRequest) GetDstMacAddress() []byte {
	if x != nil {
		return x.DstMacAddress
	}
	return nil
}

func (x *CreateNeighborEntryRequest) GetPacketAction() PacketAction {
	if x != nil && x.PacketAction != nil {
		return *x.PacketAction
	}
	return PacketAction_PACKET_ACTION_UNSPECIFIED
}

func (x *CreateNeighborEntryRequest) GetUserTrapId() uint64 {
	if x != nil && x.UserTrapId != nil {
		return *x.UserTrapId
	}
	return 0
}

func (x *CreateNeighborEntryRequest) GetNoHostRoute() bool {
	if x != nil && x.NoHostRoute != nil {
		return *x.NoHostRoute
	}
	return false
}

func (x *CreateNeighborEntryRequest) GetMetaData() uint32 {
	if x != nil && x.MetaData != nil {
		return *x.MetaData
	}
	return 0
}

func (x *CreateNeighborEntryRequest) GetCounterId() uint64 {
	if x != nil && x.CounterId != nil {
		return *x.CounterId
	}
	return 0
}

func (x *CreateNeighborEntryRequest) GetEncapIndex() uint32 {
	if x != nil && x.EncapIndex != nil {
		return *x.EncapIndex
	}
	return 0
}

func (x *CreateNeighborEntryRequest) GetEncapImposeIndex() bool {
	if x != nil && x.EncapImposeIndex != nil {
		return *x.EncapImposeIndex
	}
	return false
}

func (x *CreateNeighborEntryRequest) GetIsLocal() bool {
	if x != nil && x.IsLocal != nil {
		return *x.IsLocal
	}
	return false
}

type CreateNeighborEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateNeighborEntryResponse) Reset() {
	*x = CreateNeighborEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_neighbor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNeighborEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNeighborEntryResponse) ProtoMessage() {}

func (x *CreateNeighborEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_neighbor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNeighborEntryResponse.ProtoReflect.Descriptor instead.
func (*CreateNeighborEntryResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_neighbor_proto_rawDescGZIP(), []int{1}
}

type RemoveNeighborEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry *NeighborEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *RemoveNeighborEntryRequest) Reset() {
	*x = RemoveNeighborEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_neighbor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveNeighborEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNeighborEntryRequest) ProtoMessage() {}

func (x *RemoveNeighborEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_neighbor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNeighborEntryRequest.ProtoReflect.Descriptor instead.
func (*RemoveNeighborEntryRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_neighbor_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveNeighborEntryRequest) GetEntry() *NeighborEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type RemoveNeighborEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveNeighborEntryResponse) Reset() {
	*x = RemoveNeighborEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_neighbor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveNeighborEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNeighborEntryResponse) ProtoMessage() {}

func (x *RemoveNeighborEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_neighbor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNeighborEntryResponse.ProtoReflect.Descriptor instead.
func (*RemoveNeighborEntryResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_neighbor_proto_rawDescGZIP(), []int{3}
}

type SetNeighborEntryAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry            *NeighborEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	DstMacAddress    []byte         `protobuf:"bytes,2,opt,name=dst_mac_address,json=dstMacAddress,proto3,oneof" json:"dst_mac_address,omitempty"`
	PacketAction     *PacketAction  `protobuf:"varint,3,opt,name=packet_action,json=packetAction,proto3,enum=lemming.dataplane.sai.PacketAction,oneof" json:"packet_action,omitempty"`
	UserTrapId       *uint64        `protobuf:"varint,4,opt,name=user_trap_id,json=userTrapId,proto3,oneof" json:"user_trap_id,omitempty"`
	NoHostRoute      *bool          `protobuf:"varint,5,opt,name=no_host_route,json=noHostRoute,proto3,oneof" json:"no_host_route,omitempty"`
	MetaData         *uint32        `protobuf:"varint,6,opt,name=meta_data,json=metaData,proto3,oneof" json:"meta_data,omitempty"`
	CounterId        *uint64        `protobuf:"varint,7,opt,name=counter_id,json=counterId,proto3,oneof" json:"counter_id,omitempty"`
	EncapIndex       *uint32        `protobuf:"varint,8,opt,name=encap_index,json=encapIndex,proto3,oneof" json:"encap_index,omitempty"`
	EncapImposeIndex *bool          `protobuf:"varint,9,opt,name=encap_impose_index,json=encapImposeIndex,proto3,oneof" json:"encap_impose_index,omitempty"`
	IsLocal          *bool          `protobuf:"varint,10,opt,name=is_local,json=isLocal,proto3,oneof" json:"is_local,omitempty"`
}

func (x *SetNeighborEntryAttributeRequest) Reset() {
	*x = SetNeighborEntryAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_neighbor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNeighborEntryAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNeighborEntryAttributeRequest) ProtoMessage() {}

func (x *SetNeighborEntryAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_neighbor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNeighborEntryAttributeRequest.ProtoReflect.Descriptor instead.
func (*SetNeighborEntryAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_neighbor_proto_rawDescGZIP(), []int{4}
}

func (x *SetNeighborEntryAttributeRequest) GetEntry() *NeighborEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *SetNeighborEntryAttributeRequest) GetDstMacAddress() []byte {
	if x != nil {
		return x.DstMacAddress
	}
	return nil
}

func (x *SetNeighborEntryAttributeRequest) GetPacketAction() PacketAction {
	if x != nil && x.PacketAction != nil {
		return *x.PacketAction
	}
	return PacketAction_PACKET_ACTION_UNSPECIFIED
}

func (x *SetNeighborEntryAttributeRequest) GetUserTrapId() uint64 {
	if x != nil && x.UserTrapId != nil {
		return *x.UserTrapId
	}
	return 0
}

func (x *SetNeighborEntryAttributeRequest) GetNoHostRoute() bool {
	if x != nil && x.NoHostRoute != nil {
		return *x.NoHostRoute
	}
	return false
}

func (x *SetNeighborEntryAttributeRequest) GetMetaData() uint32 {
	if x != nil && x.MetaData != nil {
		return *x.MetaData
	}
	return 0
}

func (x *SetNeighborEntryAttributeRequest) GetCounterId() uint64 {
	if x != nil && x.CounterId != nil {
		return *x.CounterId
	}
	return 0
}

func (x *SetNeighborEntryAttributeRequest) GetEncapIndex() uint32 {
	if x != nil && x.EncapIndex != nil {
		return *x.EncapIndex
	}
	return 0
}

func (x *SetNeighborEntryAttributeRequest) GetEncapImposeIndex() bool {
	if x != nil && x.EncapImposeIndex != nil {
		return *x.EncapImposeIndex
	}
	return false
}

func (x *SetNeighborEntryAttributeRequest) GetIsLocal() bool {
	if x != nil && x.IsLocal != nil {
		return *x.IsLocal
	}
	return false
}

type SetNeighborEntryAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetNeighborEntryAttributeResponse) Reset() {
	*x = SetNeighborEntryAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_neighbor_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNeighborEntryAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNeighborEntryAttributeResponse) ProtoMessage() {}

func (x *SetNeighborEntryAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_neighbor_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNeighborEntryAttributeResponse.ProtoReflect.Descriptor instead.
func (*SetNeighborEntryAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_neighbor_proto_rawDescGZIP(), []int{5}
}

type GetNeighborEntryAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry    *NeighborEntry      `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	AttrType []NeighborEntryAttr `protobuf:"varint,2,rep,packed,name=attr_type,json=attrType,proto3,enum=lemming.dataplane.sai.NeighborEntryAttr" json:"attr_type,omitempty"`
}

func (x *GetNeighborEntryAttributeRequest) Reset() {
	*x = GetNeighborEntryAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_neighbor_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNeighborEntryAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNeighborEntryAttributeRequest) ProtoMessage() {}

func (x *GetNeighborEntryAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_neighbor_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNeighborEntryAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetNeighborEntryAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_neighbor_proto_rawDescGZIP(), []int{6}
}

func (x *GetNeighborEntryAttributeRequest) GetEntry() *NeighborEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *GetNeighborEntryAttributeRequest) GetAttrType() []NeighborEntryAttr {
	if x != nil {
		return x.AttrType
	}
	return nil
}

type GetNeighborEntryAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr *NeighborEntryAttribute `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr,omitempty"`
}

func (x *GetNeighborEntryAttributeResponse) Reset() {
	*x = GetNeighborEntryAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_neighbor_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNeighborEntryAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNeighborEntryAttributeResponse) ProtoMessage() {}

func (x *GetNeighborEntryAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_neighbor_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNeighborEntryAttributeResponse.ProtoReflect.Descriptor instead.
func (*GetNeighborEntryAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_neighbor_proto_rawDescGZIP(), []int{7}
}

func (x *GetNeighborEntryAttributeResponse) GetAttr() *NeighborEntryAttribute {
	if x != nil {
		return x.Attr
	}
	return nil
}

var File_dataplane_standalone_proto_neighbor_proto protoreflect.FileDescriptor

var file_dataplane_standalone_proto_neighbor_proto_rawDesc = []byte{
	0x0a, 0x29, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x6c, 0x6f, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x65, 0x69,
	0x67, 0x68, 0x62, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6c, 0x65, 0x6d,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73,
	0x61, 0x69, 0x1a, 0x27, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x6c, 0x6f, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x05, 0x0a, 0x1a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x65, 0x6d, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61,
	0x69, 0x2e, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x0f, 0x64, 0x73, 0x74, 0x5f, 0x6d, 0x61,
	0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42,
	0x04, 0x80, 0xb5, 0x18, 0x01, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x53, 0x0a, 0x0d, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x23, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x02, 0x48, 0x01, 0x52, 0x0c, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2b,
	0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x03, 0x48, 0x02, 0x52, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x54, 0x72, 0x61, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0d, 0x6e,
	0x6f, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x04, 0x48, 0x03, 0x52, 0x0b, 0x6e, 0x6f, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x09, 0x6d, 0x65,
	0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x04, 0x80,
	0xb5, 0x18, 0x05, 0x48, 0x04, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x06, 0x48, 0x05, 0x52, 0x09,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0b,
	0x65, 0x6e, 0x63, 0x61, 0x70, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x07, 0x48, 0x06, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x61, 0x70,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x12, 0x65, 0x6e, 0x63, 0x61,
	0x70, 0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x08, 0x48, 0x07, 0x52, 0x10, 0x65, 0x6e,
	0x63, 0x61, 0x70, 0x49, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x09, 0x48, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x64, 0x73, 0x74, 0x5f,
	0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x6e, 0x6f, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x15, 0x0a,
	0x13, 0x5f, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x58, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a,
	0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x1d, 0x0a, 0x1b, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb9, 0x05, 0x0a, 0x20, 0x53, 0x65,
	0x74, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a,
	0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x0f, 0x64, 0x73,
	0x74, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x73, 0x74,
	0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x53, 0x0a,
	0x0d, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x02, 0x48,
	0x01, 0x52, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x03, 0x48, 0x02,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x2d, 0x0a, 0x0d, 0x6e, 0x6f, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x04, 0x48, 0x03, 0x52, 0x0b,
	0x6e, 0x6f, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26,
	0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x05, 0x48, 0x04, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x06,
	0x48, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x2a, 0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x07, 0x48, 0x06, 0x52, 0x0a, 0x65,
	0x6e, 0x63, 0x61, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x12,
	0x65, 0x6e, 0x63, 0x61, 0x70, 0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x08, 0x48, 0x07,
	0x52, 0x10, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x49, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x09, 0x48, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x64, 0x73, 0x74, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x70, 0x5f,
	0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6e, 0x6f, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x5f, 0x69, 0x6d, 0x70, 0x6f,
	0x73, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x73, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x65, 0x74, 0x4e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x20, 0x47,
	0x65, 0x74, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3a, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x45, 0x0a, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x28,
	0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x66, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4e, 0x65,
	0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x2a, 0xb7, 0x03, 0x0a, 0x11, 0x4e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72,
	0x12, 0x23, 0x0a, 0x1f, 0x4e, 0x45, 0x49, 0x47, 0x48, 0x42, 0x4f, 0x52, 0x5f, 0x45, 0x4e, 0x54,
	0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x27, 0x0a, 0x23, 0x4e, 0x45, 0x49, 0x47, 0x48, 0x42, 0x4f,
	0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x44, 0x53, 0x54,
	0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x25,
	0x0a, 0x21, 0x4e, 0x45, 0x49, 0x47, 0x48, 0x42, 0x4f, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59,
	0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x24, 0x0a, 0x20, 0x4e, 0x45, 0x49, 0x47, 0x48, 0x42, 0x4f,
	0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x54, 0x52, 0x41, 0x50, 0x5f, 0x49, 0x44, 0x10, 0x03, 0x12, 0x25, 0x0a, 0x21, 0x4e,
	0x45, 0x49, 0x47, 0x48, 0x42, 0x4f, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54,
	0x54, 0x52, 0x5f, 0x4e, 0x4f, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x52, 0x4f, 0x55, 0x54, 0x45,
	0x10, 0x04, 0x12, 0x21, 0x0a, 0x1d, 0x4e, 0x45, 0x49, 0x47, 0x48, 0x42, 0x4f, 0x52, 0x5f, 0x45,
	0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x10, 0x05, 0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x45, 0x49, 0x47, 0x48, 0x42, 0x4f,
	0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x10, 0x06, 0x12, 0x23, 0x0a, 0x1f, 0x4e, 0x45, 0x49,
	0x47, 0x48, 0x42, 0x4f, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52,
	0x5f, 0x45, 0x4e, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x10, 0x07, 0x12, 0x2a,
	0x0a, 0x26, 0x4e, 0x45, 0x49, 0x47, 0x48, 0x42, 0x4f, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59,
	0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x45, 0x4e, 0x43, 0x41, 0x50, 0x5f, 0x49, 0x4d, 0x50, 0x4f,
	0x53, 0x45, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x10, 0x08, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x45,
	0x49, 0x47, 0x48, 0x42, 0x4f, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54,
	0x52, 0x5f, 0x49, 0x53, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x09, 0x12, 0x26, 0x0a, 0x22,
	0x4e, 0x45, 0x49, 0x47, 0x48, 0x42, 0x4f, 0x52, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41,
	0x54, 0x54, 0x52, 0x5f, 0x49, 0x50, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x5f, 0x46, 0x41, 0x4d, 0x49,
	0x4c, 0x59, 0x10, 0x0a, 0x32, 0xb0, 0x04, 0x0a, 0x08, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x12, 0x7e, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x31, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69,
	0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6c, 0x65,
	0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7e, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x31, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69,
	0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6c, 0x65,
	0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x73, 0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62,
	0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x90, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12,
	0x37, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69,
	0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69,
	0x2e, 0x53, 0x65, 0x74, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x37, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65,
	0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6c, 0x65,
	0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x73, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x6c, 0x6f, 0x6e, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dataplane_standalone_proto_neighbor_proto_rawDescOnce sync.Once
	file_dataplane_standalone_proto_neighbor_proto_rawDescData = file_dataplane_standalone_proto_neighbor_proto_rawDesc
)

func file_dataplane_standalone_proto_neighbor_proto_rawDescGZIP() []byte {
	file_dataplane_standalone_proto_neighbor_proto_rawDescOnce.Do(func() {
		file_dataplane_standalone_proto_neighbor_proto_rawDescData = protoimpl.X.CompressGZIP(file_dataplane_standalone_proto_neighbor_proto_rawDescData)
	})
	return file_dataplane_standalone_proto_neighbor_proto_rawDescData
}

var file_dataplane_standalone_proto_neighbor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dataplane_standalone_proto_neighbor_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_dataplane_standalone_proto_neighbor_proto_goTypes = []interface{}{
	(NeighborEntryAttr)(0),                    // 0: lemming.dataplane.sai.NeighborEntryAttr
	(*CreateNeighborEntryRequest)(nil),        // 1: lemming.dataplane.sai.CreateNeighborEntryRequest
	(*CreateNeighborEntryResponse)(nil),       // 2: lemming.dataplane.sai.CreateNeighborEntryResponse
	(*RemoveNeighborEntryRequest)(nil),        // 3: lemming.dataplane.sai.RemoveNeighborEntryRequest
	(*RemoveNeighborEntryResponse)(nil),       // 4: lemming.dataplane.sai.RemoveNeighborEntryResponse
	(*SetNeighborEntryAttributeRequest)(nil),  // 5: lemming.dataplane.sai.SetNeighborEntryAttributeRequest
	(*SetNeighborEntryAttributeResponse)(nil), // 6: lemming.dataplane.sai.SetNeighborEntryAttributeResponse
	(*GetNeighborEntryAttributeRequest)(nil),  // 7: lemming.dataplane.sai.GetNeighborEntryAttributeRequest
	(*GetNeighborEntryAttributeResponse)(nil), // 8: lemming.dataplane.sai.GetNeighborEntryAttributeResponse
	(*NeighborEntry)(nil),                     // 9: lemming.dataplane.sai.NeighborEntry
	(PacketAction)(0),                         // 10: lemming.dataplane.sai.PacketAction
	(*NeighborEntryAttribute)(nil),            // 11: lemming.dataplane.sai.NeighborEntryAttribute
}
var file_dataplane_standalone_proto_neighbor_proto_depIdxs = []int32{
	9,  // 0: lemming.dataplane.sai.CreateNeighborEntryRequest.entry:type_name -> lemming.dataplane.sai.NeighborEntry
	10, // 1: lemming.dataplane.sai.CreateNeighborEntryRequest.packet_action:type_name -> lemming.dataplane.sai.PacketAction
	9,  // 2: lemming.dataplane.sai.RemoveNeighborEntryRequest.entry:type_name -> lemming.dataplane.sai.NeighborEntry
	9,  // 3: lemming.dataplane.sai.SetNeighborEntryAttributeRequest.entry:type_name -> lemming.dataplane.sai.NeighborEntry
	10, // 4: lemming.dataplane.sai.SetNeighborEntryAttributeRequest.packet_action:type_name -> lemming.dataplane.sai.PacketAction
	9,  // 5: lemming.dataplane.sai.GetNeighborEntryAttributeRequest.entry:type_name -> lemming.dataplane.sai.NeighborEntry
	0,  // 6: lemming.dataplane.sai.GetNeighborEntryAttributeRequest.attr_type:type_name -> lemming.dataplane.sai.NeighborEntryAttr
	11, // 7: lemming.dataplane.sai.GetNeighborEntryAttributeResponse.attr:type_name -> lemming.dataplane.sai.NeighborEntryAttribute
	1,  // 8: lemming.dataplane.sai.Neighbor.CreateNeighborEntry:input_type -> lemming.dataplane.sai.CreateNeighborEntryRequest
	3,  // 9: lemming.dataplane.sai.Neighbor.RemoveNeighborEntry:input_type -> lemming.dataplane.sai.RemoveNeighborEntryRequest
	5,  // 10: lemming.dataplane.sai.Neighbor.SetNeighborEntryAttribute:input_type -> lemming.dataplane.sai.SetNeighborEntryAttributeRequest
	7,  // 11: lemming.dataplane.sai.Neighbor.GetNeighborEntryAttribute:input_type -> lemming.dataplane.sai.GetNeighborEntryAttributeRequest
	2,  // 12: lemming.dataplane.sai.Neighbor.CreateNeighborEntry:output_type -> lemming.dataplane.sai.CreateNeighborEntryResponse
	4,  // 13: lemming.dataplane.sai.Neighbor.RemoveNeighborEntry:output_type -> lemming.dataplane.sai.RemoveNeighborEntryResponse
	6,  // 14: lemming.dataplane.sai.Neighbor.SetNeighborEntryAttribute:output_type -> lemming.dataplane.sai.SetNeighborEntryAttributeResponse
	8,  // 15: lemming.dataplane.sai.Neighbor.GetNeighborEntryAttribute:output_type -> lemming.dataplane.sai.GetNeighborEntryAttributeResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_dataplane_standalone_proto_neighbor_proto_init() }
func file_dataplane_standalone_proto_neighbor_proto_init() {
	if File_dataplane_standalone_proto_neighbor_proto != nil {
		return
	}
	file_dataplane_standalone_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dataplane_standalone_proto_neighbor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNeighborEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_neighbor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNeighborEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_neighbor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveNeighborEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_neighbor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveNeighborEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_neighbor_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNeighborEntryAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_neighbor_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNeighborEntryAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_neighbor_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNeighborEntryAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_neighbor_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNeighborEntryAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dataplane_standalone_proto_neighbor_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_dataplane_standalone_proto_neighbor_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dataplane_standalone_proto_neighbor_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dataplane_standalone_proto_neighbor_proto_goTypes,
		DependencyIndexes: file_dataplane_standalone_proto_neighbor_proto_depIdxs,
		EnumInfos:         file_dataplane_standalone_proto_neighbor_proto_enumTypes,
		MessageInfos:      file_dataplane_standalone_proto_neighbor_proto_msgTypes,
	}.Build()
	File_dataplane_standalone_proto_neighbor_proto = out.File
	file_dataplane_standalone_proto_neighbor_proto_rawDesc = nil
	file_dataplane_standalone_proto_neighbor_proto_goTypes = nil
	file_dataplane_standalone_proto_neighbor_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NeighborClient is the client API for Neighbor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NeighborClient interface {
	CreateNeighborEntry(ctx context.Context, in *CreateNeighborEntryRequest, opts ...grpc.CallOption) (*CreateNeighborEntryResponse, error)
	RemoveNeighborEntry(ctx context.Context, in *RemoveNeighborEntryRequest, opts ...grpc.CallOption) (*RemoveNeighborEntryResponse, error)
	SetNeighborEntryAttribute(ctx context.Context, in *SetNeighborEntryAttributeRequest, opts ...grpc.CallOption) (*SetNeighborEntryAttributeResponse, error)
	GetNeighborEntryAttribute(ctx context.Context, in *GetNeighborEntryAttributeRequest, opts ...grpc.CallOption) (*GetNeighborEntryAttributeResponse, error)
}

type neighborClient struct {
	cc grpc.ClientConnInterface
}

func NewNeighborClient(cc grpc.ClientConnInterface) NeighborClient {
	return &neighborClient{cc}
}

func (c *neighborClient) CreateNeighborEntry(ctx context.Context, in *CreateNeighborEntryRequest, opts ...grpc.CallOption) (*CreateNeighborEntryResponse, error) {
	out := new(CreateNeighborEntryResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Neighbor/CreateNeighborEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *neighborClient) RemoveNeighborEntry(ctx context.Context, in *RemoveNeighborEntryRequest, opts ...grpc.CallOption) (*RemoveNeighborEntryResponse, error) {
	out := new(RemoveNeighborEntryResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Neighbor/RemoveNeighborEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *neighborClient) SetNeighborEntryAttribute(ctx context.Context, in *SetNeighborEntryAttributeRequest, opts ...grpc.CallOption) (*SetNeighborEntryAttributeResponse, error) {
	out := new(SetNeighborEntryAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Neighbor/SetNeighborEntryAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *neighborClient) GetNeighborEntryAttribute(ctx context.Context, in *GetNeighborEntryAttributeRequest, opts ...grpc.CallOption) (*GetNeighborEntryAttributeResponse, error) {
	out := new(GetNeighborEntryAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Neighbor/GetNeighborEntryAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NeighborServer is the server API for Neighbor service.
type NeighborServer interface {
	CreateNeighborEntry(context.Context, *CreateNeighborEntryRequest) (*CreateNeighborEntryResponse, error)
	RemoveNeighborEntry(context.Context, *RemoveNeighborEntryRequest) (*RemoveNeighborEntryResponse, error)
	SetNeighborEntryAttribute(context.Context, *SetNeighborEntryAttributeRequest) (*SetNeighborEntryAttributeResponse, error)
	GetNeighborEntryAttribute(context.Context, *GetNeighborEntryAttributeRequest) (*GetNeighborEntryAttributeResponse, error)
}

// UnimplementedNeighborServer can be embedded to have forward compatible implementations.
type UnimplementedNeighborServer struct {
}

func (*UnimplementedNeighborServer) CreateNeighborEntry(context.Context, *CreateNeighborEntryRequest) (*CreateNeighborEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNeighborEntry not implemented")
}
func (*UnimplementedNeighborServer) RemoveNeighborEntry(context.Context, *RemoveNeighborEntryRequest) (*RemoveNeighborEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveNeighborEntry not implemented")
}
func (*UnimplementedNeighborServer) SetNeighborEntryAttribute(context.Context, *SetNeighborEntryAttributeRequest) (*SetNeighborEntryAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetNeighborEntryAttribute not implemented")
}
func (*UnimplementedNeighborServer) GetNeighborEntryAttribute(context.Context, *GetNeighborEntryAttributeRequest) (*GetNeighborEntryAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNeighborEntryAttribute not implemented")
}

func RegisterNeighborServer(s *grpc.Server, srv NeighborServer) {
	s.RegisterService(&_Neighbor_serviceDesc, srv)
}

func _Neighbor_CreateNeighborEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNeighborEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NeighborServer).CreateNeighborEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Neighbor/CreateNeighborEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NeighborServer).CreateNeighborEntry(ctx, req.(*CreateNeighborEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Neighbor_RemoveNeighborEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveNeighborEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NeighborServer).RemoveNeighborEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Neighbor/RemoveNeighborEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NeighborServer).RemoveNeighborEntry(ctx, req.(*RemoveNeighborEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Neighbor_SetNeighborEntryAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetNeighborEntryAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NeighborServer).SetNeighborEntryAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Neighbor/SetNeighborEntryAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NeighborServer).SetNeighborEntryAttribute(ctx, req.(*SetNeighborEntryAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Neighbor_GetNeighborEntryAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNeighborEntryAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NeighborServer).GetNeighborEntryAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Neighbor/GetNeighborEntryAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NeighborServer).GetNeighborEntryAttribute(ctx, req.(*GetNeighborEntryAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Neighbor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lemming.dataplane.sai.Neighbor",
	HandlerType: (*NeighborServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNeighborEntry",
			Handler:    _Neighbor_CreateNeighborEntry_Handler,
		},
		{
			MethodName: "RemoveNeighborEntry",
			Handler:    _Neighbor_RemoveNeighborEntry_Handler,
		},
		{
			MethodName: "SetNeighborEntryAttribute",
			Handler:    _Neighbor_SetNeighborEntryAttribute_Handler,
		},
		{
			MethodName: "GetNeighborEntryAttribute",
			Handler:    _Neighbor_GetNeighborEntryAttribute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dataplane/standalone/proto/neighbor.proto",
}
