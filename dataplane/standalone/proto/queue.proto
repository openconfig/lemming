
syntax = "proto3";

package lemming.dataplane.sai;

import "dataplane/standalone/proto/common.proto";

option go_package = "github.com/openconfig/lemming/dataplane/standalone/proto;sai";

enum QueueAttr {
  QUEUE_ATTR_UNSPECIFIED = 0;
  QUEUE_ATTR_TYPE = 1;
  QUEUE_ATTR_PORT = 2;
  QUEUE_ATTR_INDEX = 3;
  QUEUE_ATTR_PARENT_SCHEDULER_NODE = 4;
  QUEUE_ATTR_WRED_PROFILE_ID = 5;
  QUEUE_ATTR_BUFFER_PROFILE_ID = 6;
  QUEUE_ATTR_SCHEDULER_PROFILE_ID = 7;
  QUEUE_ATTR_PAUSE_STATUS = 8;
  QUEUE_ATTR_ENABLE_PFC_DLDR = 9;
  QUEUE_ATTR_PFC_DLR_INIT = 10;
  QUEUE_ATTR_TAM_OBJECT = 11;
  QUEUE_ATTR_PFC_DLR_PACKET_ACTION = 12;
  QUEUE_ATTR_PFC_CONTINUOUS_DEADLOCK_STATE = 13;
}

message CreateQueueRequest {
  option (sai_type) = OBJECT_TYPE_QUEUE;
  uint64 switch = 1;
  optional QueueType type = 2 [(attr_enum_value) = 1];
  optional uint64 port = 3 [(attr_enum_value) = 2];
  optional uint32 index = 4 [(attr_enum_value) = 3];
  optional uint64 parent_scheduler_node = 5 [(attr_enum_value) = 4];
  optional uint64 wred_profile_id = 6 [(attr_enum_value) = 5];
  optional uint64 buffer_profile_id = 7 [(attr_enum_value) = 6];
  optional uint64 scheduler_profile_id = 8 [(attr_enum_value) = 7];
  optional bool enable_pfc_dldr = 9 [(attr_enum_value) = 9];
  optional bool pfc_dlr_init = 10 [(attr_enum_value) = 10];
  repeated uint64 tam_object = 11 [(attr_enum_value) = 11];
  optional PacketAction pfc_dlr_packet_action = 12 [(attr_enum_value) = 12];
}

message CreateQueueResponse {
  uint64 oid = 1;
}

message RemoveQueueRequest {
  uint64 oid = 1;
}

message RemoveQueueResponse {}

message SetQueueAttributeRequest {
  uint64 oid = 1;
  optional uint64 parent_scheduler_node = 2 [(attr_enum_value) = 4];
  optional uint64 wred_profile_id = 3 [(attr_enum_value) = 5];
  optional uint64 buffer_profile_id = 4 [(attr_enum_value) = 6];
  optional uint64 scheduler_profile_id = 5 [(attr_enum_value) = 7];
  optional bool enable_pfc_dldr = 6 [(attr_enum_value) = 9];
  optional bool pfc_dlr_init = 7 [(attr_enum_value) = 10];
  repeated uint64 tam_object = 8 [(attr_enum_value) = 11];
  optional PacketAction pfc_dlr_packet_action = 9 [(attr_enum_value) = 12];
}

message SetQueueAttributeResponse {}

message GetQueueAttributeRequest {
  uint64 oid = 1;
  repeated QueueAttr attr_type = 2;
}

message GetQueueAttributeResponse {
  QueueAttribute attr = 1;
}

message GetQueueStatsRequest {
  uint64 oid = 1;
  repeated QueueStat counter_ids = 2;
}

message GetQueueStatsResponse {
  repeated uint64 values = 1;
}

service Queue {
  rpc CreateQueue(CreateQueueRequest) returns (CreateQueueResponse) {}
  rpc RemoveQueue(RemoveQueueRequest) returns (RemoveQueueResponse) {}
  rpc SetQueueAttribute(SetQueueAttributeRequest)
      returns (SetQueueAttributeResponse) {}
  rpc GetQueueAttribute(GetQueueAttributeRequest)
      returns (GetQueueAttributeResponse) {}
  rpc GetQueueStats(GetQueueStatsRequest) returns (GetQueueStatsResponse) {}
}
