
syntax = "proto3";

package lemming.dataplane.sai;

import "dataplane/standalone/proto/common.proto";

option go_package = "github.com/openconfig/lemming/dataplane/standalone/proto";


enum NextHopAttr {
	NEXT_HOP_ATTR_UNSPECIFIED = 0;
	NEXT_HOP_ATTR_TYPE = 1;
	NEXT_HOP_ATTR_IP = 2;
	NEXT_HOP_ATTR_ROUTER_INTERFACE_ID = 3;
	NEXT_HOP_ATTR_TUNNEL_ID = 4;
	NEXT_HOP_ATTR_TUNNEL_VNI = 5;
	NEXT_HOP_ATTR_TUNNEL_MAC = 6;
	NEXT_HOP_ATTR_SRV6_SIDLIST_ID = 7;
	NEXT_HOP_ATTR_LABELSTACK = 8;
	NEXT_HOP_ATTR_COUNTER_ID = 9;
	NEXT_HOP_ATTR_DISABLE_DECREMENT_TTL = 10;
	NEXT_HOP_ATTR_OUTSEG_TYPE = 11;
	NEXT_HOP_ATTR_OUTSEG_TTL_MODE = 12;
	NEXT_HOP_ATTR_OUTSEG_TTL_VALUE = 13;
	NEXT_HOP_ATTR_OUTSEG_EXP_MODE = 14;
	NEXT_HOP_ATTR_OUTSEG_EXP_VALUE = 15;
	NEXT_HOP_ATTR_QOS_TC_AND_COLOR_TO_MPLS_EXP_MAP = 16;
}

message CreateNextHopRequest {
	uint64 switch = 1;
	
	NextHopType type = 2;
	bytes ip = 3;
	uint64 router_interface_id = 4;
	uint64 tunnel_id = 5;
	uint32 tunnel_vni = 6;
	bytes tunnel_mac = 7;
	uint64 srv6_sidlist_id = 8;
	repeated uint32 labelstack = 9;
	uint64 counter_id = 10;
	bool disable_decrement_ttl = 11;
	OutsegType outseg_type = 12;
	OutsegTtlMode outseg_ttl_mode = 13;
	uint32 outseg_ttl_value = 14;
	OutsegExpMode outseg_exp_mode = 15;
	uint32 outseg_exp_value = 16;
	uint64 qos_tc_and_color_to_mpls_exp_map = 17;
	
}

message CreateNextHopResponse {
	uint64 oid = 1;
	
	
}

message RemoveNextHopRequest {
	uint64 oid = 1;
	
	
}

message RemoveNextHopResponse {
	
	
}

message SetNextHopAttributeRequest {
	uint64 oid = 1;
	oneof attr {
	uint32 tunnel_vni = 2;
	bytes tunnel_mac = 3;
	uint64 counter_id = 4;
	bool disable_decrement_ttl = 5;
	OutsegType outseg_type = 6;
	OutsegTtlMode outseg_ttl_mode = 7;
	uint32 outseg_ttl_value = 8;
	OutsegExpMode outseg_exp_mode = 9;
	uint32 outseg_exp_value = 10;
	uint64 qos_tc_and_color_to_mpls_exp_map = 11;
	}
}

message SetNextHopAttributeResponse {
	
	
}

message GetNextHopAttributeRequest {
	uint64 oid = 1;
	repeated NextHopAttr attr_type = 2;
	
	
}

message GetNextHopAttributeResponse {
	repeated NextHopAttribute attr = 1;
	
	
}


service NextHop {
	rpc CreateNextHop (CreateNextHopRequest) returns (CreateNextHopResponse) {}
	rpc RemoveNextHop (RemoveNextHopRequest) returns (RemoveNextHopResponse) {}
	rpc SetNextHopAttribute (SetNextHopAttributeRequest) returns (SetNextHopAttributeResponse) {}
	rpc GetNextHopAttribute (GetNextHopAttributeRequest) returns (GetNextHopAttributeResponse) {}
}
