// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: dataplane/standalone/proto/router_interface.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RouterInterfaceAttr int32

const (
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_UNSPECIFIED                 RouterInterfaceAttr = 0
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_VIRTUAL_ROUTER_ID           RouterInterfaceAttr = 1
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_TYPE                        RouterInterfaceAttr = 2
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_PORT_ID                     RouterInterfaceAttr = 3
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_VLAN_ID                     RouterInterfaceAttr = 4
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_OUTER_VLAN_ID               RouterInterfaceAttr = 5
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_INNER_VLAN_ID               RouterInterfaceAttr = 6
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_BRIDGE_ID                   RouterInterfaceAttr = 7
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_SRC_MAC_ADDRESS             RouterInterfaceAttr = 8
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_ADMIN_V4_STATE              RouterInterfaceAttr = 9
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_ADMIN_V6_STATE              RouterInterfaceAttr = 10
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_MTU                         RouterInterfaceAttr = 11
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_INGRESS_ACL                 RouterInterfaceAttr = 12
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_EGRESS_ACL                  RouterInterfaceAttr = 13
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_NEIGHBOR_MISS_PACKET_ACTION RouterInterfaceAttr = 14
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_V4_MCAST_ENABLE             RouterInterfaceAttr = 15
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_V6_MCAST_ENABLE             RouterInterfaceAttr = 16
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_LOOPBACK_PACKET_ACTION      RouterInterfaceAttr = 17
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_IS_VIRTUAL                  RouterInterfaceAttr = 18
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_NAT_ZONE_ID                 RouterInterfaceAttr = 19
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_DISABLE_DECREMENT_TTL       RouterInterfaceAttr = 20
	RouterInterfaceAttr_ROUTER_INTERFACE_ATTR_ADMIN_MPLS_STATE            RouterInterfaceAttr = 21
)

// Enum value maps for RouterInterfaceAttr.
var (
	RouterInterfaceAttr_name = map[int32]string{
		0:  "ROUTER_INTERFACE_ATTR_UNSPECIFIED",
		1:  "ROUTER_INTERFACE_ATTR_VIRTUAL_ROUTER_ID",
		2:  "ROUTER_INTERFACE_ATTR_TYPE",
		3:  "ROUTER_INTERFACE_ATTR_PORT_ID",
		4:  "ROUTER_INTERFACE_ATTR_VLAN_ID",
		5:  "ROUTER_INTERFACE_ATTR_OUTER_VLAN_ID",
		6:  "ROUTER_INTERFACE_ATTR_INNER_VLAN_ID",
		7:  "ROUTER_INTERFACE_ATTR_BRIDGE_ID",
		8:  "ROUTER_INTERFACE_ATTR_SRC_MAC_ADDRESS",
		9:  "ROUTER_INTERFACE_ATTR_ADMIN_V4_STATE",
		10: "ROUTER_INTERFACE_ATTR_ADMIN_V6_STATE",
		11: "ROUTER_INTERFACE_ATTR_MTU",
		12: "ROUTER_INTERFACE_ATTR_INGRESS_ACL",
		13: "ROUTER_INTERFACE_ATTR_EGRESS_ACL",
		14: "ROUTER_INTERFACE_ATTR_NEIGHBOR_MISS_PACKET_ACTION",
		15: "ROUTER_INTERFACE_ATTR_V4_MCAST_ENABLE",
		16: "ROUTER_INTERFACE_ATTR_V6_MCAST_ENABLE",
		17: "ROUTER_INTERFACE_ATTR_LOOPBACK_PACKET_ACTION",
		18: "ROUTER_INTERFACE_ATTR_IS_VIRTUAL",
		19: "ROUTER_INTERFACE_ATTR_NAT_ZONE_ID",
		20: "ROUTER_INTERFACE_ATTR_DISABLE_DECREMENT_TTL",
		21: "ROUTER_INTERFACE_ATTR_ADMIN_MPLS_STATE",
	}
	RouterInterfaceAttr_value = map[string]int32{
		"ROUTER_INTERFACE_ATTR_UNSPECIFIED":                 0,
		"ROUTER_INTERFACE_ATTR_VIRTUAL_ROUTER_ID":           1,
		"ROUTER_INTERFACE_ATTR_TYPE":                        2,
		"ROUTER_INTERFACE_ATTR_PORT_ID":                     3,
		"ROUTER_INTERFACE_ATTR_VLAN_ID":                     4,
		"ROUTER_INTERFACE_ATTR_OUTER_VLAN_ID":               5,
		"ROUTER_INTERFACE_ATTR_INNER_VLAN_ID":               6,
		"ROUTER_INTERFACE_ATTR_BRIDGE_ID":                   7,
		"ROUTER_INTERFACE_ATTR_SRC_MAC_ADDRESS":             8,
		"ROUTER_INTERFACE_ATTR_ADMIN_V4_STATE":              9,
		"ROUTER_INTERFACE_ATTR_ADMIN_V6_STATE":              10,
		"ROUTER_INTERFACE_ATTR_MTU":                         11,
		"ROUTER_INTERFACE_ATTR_INGRESS_ACL":                 12,
		"ROUTER_INTERFACE_ATTR_EGRESS_ACL":                  13,
		"ROUTER_INTERFACE_ATTR_NEIGHBOR_MISS_PACKET_ACTION": 14,
		"ROUTER_INTERFACE_ATTR_V4_MCAST_ENABLE":             15,
		"ROUTER_INTERFACE_ATTR_V6_MCAST_ENABLE":             16,
		"ROUTER_INTERFACE_ATTR_LOOPBACK_PACKET_ACTION":      17,
		"ROUTER_INTERFACE_ATTR_IS_VIRTUAL":                  18,
		"ROUTER_INTERFACE_ATTR_NAT_ZONE_ID":                 19,
		"ROUTER_INTERFACE_ATTR_DISABLE_DECREMENT_TTL":       20,
		"ROUTER_INTERFACE_ATTR_ADMIN_MPLS_STATE":            21,
	}
)

func (x RouterInterfaceAttr) Enum() *RouterInterfaceAttr {
	p := new(RouterInterfaceAttr)
	*p = x
	return p
}

func (x RouterInterfaceAttr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RouterInterfaceAttr) Descriptor() protoreflect.EnumDescriptor {
	return file_dataplane_standalone_proto_router_interface_proto_enumTypes[0].Descriptor()
}

func (RouterInterfaceAttr) Type() protoreflect.EnumType {
	return &file_dataplane_standalone_proto_router_interface_proto_enumTypes[0]
}

func (x RouterInterfaceAttr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RouterInterfaceAttr.Descriptor instead.
func (RouterInterfaceAttr) EnumDescriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_router_interface_proto_rawDescGZIP(), []int{0}
}

type CreateRouterInterfaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Switch                   uint64              `protobuf:"varint,1,opt,name=switch,proto3" json:"switch,omitempty"`
	VirtualRouterId          uint64              `protobuf:"varint,2,opt,name=virtual_router_id,json=virtualRouterId,proto3" json:"virtual_router_id,omitempty"`
	Type                     RouterInterfaceType `protobuf:"varint,3,opt,name=type,proto3,enum=lemming.dataplane.sai.RouterInterfaceType" json:"type,omitempty"`
	PortId                   uint64              `protobuf:"varint,4,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	VlanId                   uint64              `protobuf:"varint,5,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	OuterVlanId              uint32              `protobuf:"varint,6,opt,name=outer_vlan_id,json=outerVlanId,proto3" json:"outer_vlan_id,omitempty"`
	InnerVlanId              uint32              `protobuf:"varint,7,opt,name=inner_vlan_id,json=innerVlanId,proto3" json:"inner_vlan_id,omitempty"`
	BridgeId                 uint64              `protobuf:"varint,8,opt,name=bridge_id,json=bridgeId,proto3" json:"bridge_id,omitempty"`
	SrcMacAddress            []byte              `protobuf:"bytes,9,opt,name=src_mac_address,json=srcMacAddress,proto3" json:"src_mac_address,omitempty"`
	AdminV4State             bool                `protobuf:"varint,10,opt,name=admin_v4_state,json=adminV4State,proto3" json:"admin_v4_state,omitempty"`
	AdminV6State             bool                `protobuf:"varint,11,opt,name=admin_v6_state,json=adminV6State,proto3" json:"admin_v6_state,omitempty"`
	Mtu                      uint32              `protobuf:"varint,12,opt,name=mtu,proto3" json:"mtu,omitempty"`
	IngressAcl               uint64              `protobuf:"varint,13,opt,name=ingress_acl,json=ingressAcl,proto3" json:"ingress_acl,omitempty"`
	EgressAcl                uint64              `protobuf:"varint,14,opt,name=egress_acl,json=egressAcl,proto3" json:"egress_acl,omitempty"`
	NeighborMissPacketAction PacketAction        `protobuf:"varint,15,opt,name=neighbor_miss_packet_action,json=neighborMissPacketAction,proto3,enum=lemming.dataplane.sai.PacketAction" json:"neighbor_miss_packet_action,omitempty"`
	V4McastEnable            bool                `protobuf:"varint,16,opt,name=v4_mcast_enable,json=v4McastEnable,proto3" json:"v4_mcast_enable,omitempty"`
	V6McastEnable            bool                `protobuf:"varint,17,opt,name=v6_mcast_enable,json=v6McastEnable,proto3" json:"v6_mcast_enable,omitempty"`
	LoopbackPacketAction     PacketAction        `protobuf:"varint,18,opt,name=loopback_packet_action,json=loopbackPacketAction,proto3,enum=lemming.dataplane.sai.PacketAction" json:"loopback_packet_action,omitempty"`
	IsVirtual                bool                `protobuf:"varint,19,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
	NatZoneId                uint32              `protobuf:"varint,20,opt,name=nat_zone_id,json=natZoneId,proto3" json:"nat_zone_id,omitempty"`
	DisableDecrementTtl      bool                `protobuf:"varint,21,opt,name=disable_decrement_ttl,json=disableDecrementTtl,proto3" json:"disable_decrement_ttl,omitempty"`
	AdminMplsState           bool                `protobuf:"varint,22,opt,name=admin_mpls_state,json=adminMplsState,proto3" json:"admin_mpls_state,omitempty"`
}

func (x *CreateRouterInterfaceRequest) Reset() {
	*x = CreateRouterInterfaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_router_interface_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRouterInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouterInterfaceRequest) ProtoMessage() {}

func (x *CreateRouterInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_router_interface_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouterInterfaceRequest.ProtoReflect.Descriptor instead.
func (*CreateRouterInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_router_interface_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRouterInterfaceRequest) GetSwitch() uint64 {
	if x != nil {
		return x.Switch
	}
	return 0
}

func (x *CreateRouterInterfaceRequest) GetVirtualRouterId() uint64 {
	if x != nil {
		return x.VirtualRouterId
	}
	return 0
}

func (x *CreateRouterInterfaceRequest) GetType() RouterInterfaceType {
	if x != nil {
		return x.Type
	}
	return RouterInterfaceType_ROUTER_INTERFACE_TYPE_UNSPECIFIED
}

func (x *CreateRouterInterfaceRequest) GetPortId() uint64 {
	if x != nil {
		return x.PortId
	}
	return 0
}

func (x *CreateRouterInterfaceRequest) GetVlanId() uint64 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

func (x *CreateRouterInterfaceRequest) GetOuterVlanId() uint32 {
	if x != nil {
		return x.OuterVlanId
	}
	return 0
}

func (x *CreateRouterInterfaceRequest) GetInnerVlanId() uint32 {
	if x != nil {
		return x.InnerVlanId
	}
	return 0
}

func (x *CreateRouterInterfaceRequest) GetBridgeId() uint64 {
	if x != nil {
		return x.BridgeId
	}
	return 0
}

func (x *CreateRouterInterfaceRequest) GetSrcMacAddress() []byte {
	if x != nil {
		return x.SrcMacAddress
	}
	return nil
}

func (x *CreateRouterInterfaceRequest) GetAdminV4State() bool {
	if x != nil {
		return x.AdminV4State
	}
	return false
}

func (x *CreateRouterInterfaceRequest) GetAdminV6State() bool {
	if x != nil {
		return x.AdminV6State
	}
	return false
}

func (x *CreateRouterInterfaceRequest) GetMtu() uint32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *CreateRouterInterfaceRequest) GetIngressAcl() uint64 {
	if x != nil {
		return x.IngressAcl
	}
	return 0
}

func (x *CreateRouterInterfaceRequest) GetEgressAcl() uint64 {
	if x != nil {
		return x.EgressAcl
	}
	return 0
}

func (x *CreateRouterInterfaceRequest) GetNeighborMissPacketAction() PacketAction {
	if x != nil {
		return x.NeighborMissPacketAction
	}
	return PacketAction_PACKET_ACTION_UNSPECIFIED
}

func (x *CreateRouterInterfaceRequest) GetV4McastEnable() bool {
	if x != nil {
		return x.V4McastEnable
	}
	return false
}

func (x *CreateRouterInterfaceRequest) GetV6McastEnable() bool {
	if x != nil {
		return x.V6McastEnable
	}
	return false
}

func (x *CreateRouterInterfaceRequest) GetLoopbackPacketAction() PacketAction {
	if x != nil {
		return x.LoopbackPacketAction
	}
	return PacketAction_PACKET_ACTION_UNSPECIFIED
}

func (x *CreateRouterInterfaceRequest) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

func (x *CreateRouterInterfaceRequest) GetNatZoneId() uint32 {
	if x != nil {
		return x.NatZoneId
	}
	return 0
}

func (x *CreateRouterInterfaceRequest) GetDisableDecrementTtl() bool {
	if x != nil {
		return x.DisableDecrementTtl
	}
	return false
}

func (x *CreateRouterInterfaceRequest) GetAdminMplsState() bool {
	if x != nil {
		return x.AdminMplsState
	}
	return false
}

type CreateRouterInterfaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *CreateRouterInterfaceResponse) Reset() {
	*x = CreateRouterInterfaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_router_interface_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRouterInterfaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouterInterfaceResponse) ProtoMessage() {}

func (x *CreateRouterInterfaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_router_interface_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouterInterfaceResponse.ProtoReflect.Descriptor instead.
func (*CreateRouterInterfaceResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_router_interface_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRouterInterfaceResponse) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type RemoveRouterInterfaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *RemoveRouterInterfaceRequest) Reset() {
	*x = RemoveRouterInterfaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_router_interface_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRouterInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRouterInterfaceRequest) ProtoMessage() {}

func (x *RemoveRouterInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_router_interface_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRouterInterfaceRequest.ProtoReflect.Descriptor instead.
func (*RemoveRouterInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_router_interface_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveRouterInterfaceRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type RemoveRouterInterfaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveRouterInterfaceResponse) Reset() {
	*x = RemoveRouterInterfaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_router_interface_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRouterInterfaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRouterInterfaceResponse) ProtoMessage() {}

func (x *RemoveRouterInterfaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_router_interface_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRouterInterfaceResponse.ProtoReflect.Descriptor instead.
func (*RemoveRouterInterfaceResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_router_interface_proto_rawDescGZIP(), []int{3}
}

type SetRouterInterfaceAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	// Types that are assignable to Attr:
	//
	//	*SetRouterInterfaceAttributeRequest_SrcMacAddress
	//	*SetRouterInterfaceAttributeRequest_AdminV4State
	//	*SetRouterInterfaceAttributeRequest_AdminV6State
	//	*SetRouterInterfaceAttributeRequest_Mtu
	//	*SetRouterInterfaceAttributeRequest_IngressAcl
	//	*SetRouterInterfaceAttributeRequest_EgressAcl
	//	*SetRouterInterfaceAttributeRequest_NeighborMissPacketAction
	//	*SetRouterInterfaceAttributeRequest_V4McastEnable
	//	*SetRouterInterfaceAttributeRequest_V6McastEnable
	//	*SetRouterInterfaceAttributeRequest_LoopbackPacketAction
	//	*SetRouterInterfaceAttributeRequest_NatZoneId
	//	*SetRouterInterfaceAttributeRequest_DisableDecrementTtl
	//	*SetRouterInterfaceAttributeRequest_AdminMplsState
	Attr isSetRouterInterfaceAttributeRequest_Attr `protobuf_oneof:"attr"`
}

func (x *SetRouterInterfaceAttributeRequest) Reset() {
	*x = SetRouterInterfaceAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_router_interface_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRouterInterfaceAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRouterInterfaceAttributeRequest) ProtoMessage() {}

func (x *SetRouterInterfaceAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_router_interface_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRouterInterfaceAttributeRequest.ProtoReflect.Descriptor instead.
func (*SetRouterInterfaceAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_router_interface_proto_rawDescGZIP(), []int{4}
}

func (x *SetRouterInterfaceAttributeRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (m *SetRouterInterfaceAttributeRequest) GetAttr() isSetRouterInterfaceAttributeRequest_Attr {
	if m != nil {
		return m.Attr
	}
	return nil
}

func (x *SetRouterInterfaceAttributeRequest) GetSrcMacAddress() []byte {
	if x, ok := x.GetAttr().(*SetRouterInterfaceAttributeRequest_SrcMacAddress); ok {
		return x.SrcMacAddress
	}
	return nil
}

func (x *SetRouterInterfaceAttributeRequest) GetAdminV4State() bool {
	if x, ok := x.GetAttr().(*SetRouterInterfaceAttributeRequest_AdminV4State); ok {
		return x.AdminV4State
	}
	return false
}

func (x *SetRouterInterfaceAttributeRequest) GetAdminV6State() bool {
	if x, ok := x.GetAttr().(*SetRouterInterfaceAttributeRequest_AdminV6State); ok {
		return x.AdminV6State
	}
	return false
}

func (x *SetRouterInterfaceAttributeRequest) GetMtu() uint32 {
	if x, ok := x.GetAttr().(*SetRouterInterfaceAttributeRequest_Mtu); ok {
		return x.Mtu
	}
	return 0
}

func (x *SetRouterInterfaceAttributeRequest) GetIngressAcl() uint64 {
	if x, ok := x.GetAttr().(*SetRouterInterfaceAttributeRequest_IngressAcl); ok {
		return x.IngressAcl
	}
	return 0
}

func (x *SetRouterInterfaceAttributeRequest) GetEgressAcl() uint64 {
	if x, ok := x.GetAttr().(*SetRouterInterfaceAttributeRequest_EgressAcl); ok {
		return x.EgressAcl
	}
	return 0
}

func (x *SetRouterInterfaceAttributeRequest) GetNeighborMissPacketAction() PacketAction {
	if x, ok := x.GetAttr().(*SetRouterInterfaceAttributeRequest_NeighborMissPacketAction); ok {
		return x.NeighborMissPacketAction
	}
	return PacketAction_PACKET_ACTION_UNSPECIFIED
}

func (x *SetRouterInterfaceAttributeRequest) GetV4McastEnable() bool {
	if x, ok := x.GetAttr().(*SetRouterInterfaceAttributeRequest_V4McastEnable); ok {
		return x.V4McastEnable
	}
	return false
}

func (x *SetRouterInterfaceAttributeRequest) GetV6McastEnable() bool {
	if x, ok := x.GetAttr().(*SetRouterInterfaceAttributeRequest_V6McastEnable); ok {
		return x.V6McastEnable
	}
	return false
}

func (x *SetRouterInterfaceAttributeRequest) GetLoopbackPacketAction() PacketAction {
	if x, ok := x.GetAttr().(*SetRouterInterfaceAttributeRequest_LoopbackPacketAction); ok {
		return x.LoopbackPacketAction
	}
	return PacketAction_PACKET_ACTION_UNSPECIFIED
}

func (x *SetRouterInterfaceAttributeRequest) GetNatZoneId() uint32 {
	if x, ok := x.GetAttr().(*SetRouterInterfaceAttributeRequest_NatZoneId); ok {
		return x.NatZoneId
	}
	return 0
}

func (x *SetRouterInterfaceAttributeRequest) GetDisableDecrementTtl() bool {
	if x, ok := x.GetAttr().(*SetRouterInterfaceAttributeRequest_DisableDecrementTtl); ok {
		return x.DisableDecrementTtl
	}
	return false
}

func (x *SetRouterInterfaceAttributeRequest) GetAdminMplsState() bool {
	if x, ok := x.GetAttr().(*SetRouterInterfaceAttributeRequest_AdminMplsState); ok {
		return x.AdminMplsState
	}
	return false
}

type isSetRouterInterfaceAttributeRequest_Attr interface {
	isSetRouterInterfaceAttributeRequest_Attr()
}

type SetRouterInterfaceAttributeRequest_SrcMacAddress struct {
	SrcMacAddress []byte `protobuf:"bytes,2,opt,name=src_mac_address,json=srcMacAddress,proto3,oneof"`
}

type SetRouterInterfaceAttributeRequest_AdminV4State struct {
	AdminV4State bool `protobuf:"varint,3,opt,name=admin_v4_state,json=adminV4State,proto3,oneof"`
}

type SetRouterInterfaceAttributeRequest_AdminV6State struct {
	AdminV6State bool `protobuf:"varint,4,opt,name=admin_v6_state,json=adminV6State,proto3,oneof"`
}

type SetRouterInterfaceAttributeRequest_Mtu struct {
	Mtu uint32 `protobuf:"varint,5,opt,name=mtu,proto3,oneof"`
}

type SetRouterInterfaceAttributeRequest_IngressAcl struct {
	IngressAcl uint64 `protobuf:"varint,6,opt,name=ingress_acl,json=ingressAcl,proto3,oneof"`
}

type SetRouterInterfaceAttributeRequest_EgressAcl struct {
	EgressAcl uint64 `protobuf:"varint,7,opt,name=egress_acl,json=egressAcl,proto3,oneof"`
}

type SetRouterInterfaceAttributeRequest_NeighborMissPacketAction struct {
	NeighborMissPacketAction PacketAction `protobuf:"varint,8,opt,name=neighbor_miss_packet_action,json=neighborMissPacketAction,proto3,enum=lemming.dataplane.sai.PacketAction,oneof"`
}

type SetRouterInterfaceAttributeRequest_V4McastEnable struct {
	V4McastEnable bool `protobuf:"varint,9,opt,name=v4_mcast_enable,json=v4McastEnable,proto3,oneof"`
}

type SetRouterInterfaceAttributeRequest_V6McastEnable struct {
	V6McastEnable bool `protobuf:"varint,10,opt,name=v6_mcast_enable,json=v6McastEnable,proto3,oneof"`
}

type SetRouterInterfaceAttributeRequest_LoopbackPacketAction struct {
	LoopbackPacketAction PacketAction `protobuf:"varint,11,opt,name=loopback_packet_action,json=loopbackPacketAction,proto3,enum=lemming.dataplane.sai.PacketAction,oneof"`
}

type SetRouterInterfaceAttributeRequest_NatZoneId struct {
	NatZoneId uint32 `protobuf:"varint,12,opt,name=nat_zone_id,json=natZoneId,proto3,oneof"`
}

type SetRouterInterfaceAttributeRequest_DisableDecrementTtl struct {
	DisableDecrementTtl bool `protobuf:"varint,13,opt,name=disable_decrement_ttl,json=disableDecrementTtl,proto3,oneof"`
}

type SetRouterInterfaceAttributeRequest_AdminMplsState struct {
	AdminMplsState bool `protobuf:"varint,14,opt,name=admin_mpls_state,json=adminMplsState,proto3,oneof"`
}

func (*SetRouterInterfaceAttributeRequest_SrcMacAddress) isSetRouterInterfaceAttributeRequest_Attr() {
}

func (*SetRouterInterfaceAttributeRequest_AdminV4State) isSetRouterInterfaceAttributeRequest_Attr() {}

func (*SetRouterInterfaceAttributeRequest_AdminV6State) isSetRouterInterfaceAttributeRequest_Attr() {}

func (*SetRouterInterfaceAttributeRequest_Mtu) isSetRouterInterfaceAttributeRequest_Attr() {}

func (*SetRouterInterfaceAttributeRequest_IngressAcl) isSetRouterInterfaceAttributeRequest_Attr() {}

func (*SetRouterInterfaceAttributeRequest_EgressAcl) isSetRouterInterfaceAttributeRequest_Attr() {}

func (*SetRouterInterfaceAttributeRequest_NeighborMissPacketAction) isSetRouterInterfaceAttributeRequest_Attr() {
}

func (*SetRouterInterfaceAttributeRequest_V4McastEnable) isSetRouterInterfaceAttributeRequest_Attr() {
}

func (*SetRouterInterfaceAttributeRequest_V6McastEnable) isSetRouterInterfaceAttributeRequest_Attr() {
}

func (*SetRouterInterfaceAttributeRequest_LoopbackPacketAction) isSetRouterInterfaceAttributeRequest_Attr() {
}

func (*SetRouterInterfaceAttributeRequest_NatZoneId) isSetRouterInterfaceAttributeRequest_Attr() {}

func (*SetRouterInterfaceAttributeRequest_DisableDecrementTtl) isSetRouterInterfaceAttributeRequest_Attr() {
}

func (*SetRouterInterfaceAttributeRequest_AdminMplsState) isSetRouterInterfaceAttributeRequest_Attr() {
}

type SetRouterInterfaceAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetRouterInterfaceAttributeResponse) Reset() {
	*x = SetRouterInterfaceAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_router_interface_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRouterInterfaceAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRouterInterfaceAttributeResponse) ProtoMessage() {}

func (x *SetRouterInterfaceAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_router_interface_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRouterInterfaceAttributeResponse.ProtoReflect.Descriptor instead.
func (*SetRouterInterfaceAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_router_interface_proto_rawDescGZIP(), []int{5}
}

type GetRouterInterfaceAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid      uint64                `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	AttrType []RouterInterfaceAttr `protobuf:"varint,2,rep,packed,name=attr_type,json=attrType,proto3,enum=lemming.dataplane.sai.RouterInterfaceAttr" json:"attr_type,omitempty"`
}

func (x *GetRouterInterfaceAttributeRequest) Reset() {
	*x = GetRouterInterfaceAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_router_interface_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouterInterfaceAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouterInterfaceAttributeRequest) ProtoMessage() {}

func (x *GetRouterInterfaceAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_router_interface_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouterInterfaceAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetRouterInterfaceAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_router_interface_proto_rawDescGZIP(), []int{6}
}

func (x *GetRouterInterfaceAttributeRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *GetRouterInterfaceAttributeRequest) GetAttrType() []RouterInterfaceAttr {
	if x != nil {
		return x.AttrType
	}
	return nil
}

type GetRouterInterfaceAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr []*RouterInterfaceAttribute `protobuf:"bytes,1,rep,name=attr,proto3" json:"attr,omitempty"`
}

func (x *GetRouterInterfaceAttributeResponse) Reset() {
	*x = GetRouterInterfaceAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_router_interface_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouterInterfaceAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouterInterfaceAttributeResponse) ProtoMessage() {}

func (x *GetRouterInterfaceAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_router_interface_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouterInterfaceAttributeResponse.ProtoReflect.Descriptor instead.
func (*GetRouterInterfaceAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_router_interface_proto_rawDescGZIP(), []int{7}
}

func (x *GetRouterInterfaceAttributeResponse) GetAttr() []*RouterInterfaceAttribute {
	if x != nil {
		return x.Attr
	}
	return nil
}

var File_dataplane_standalone_proto_router_interface_proto protoreflect.FileDescriptor

var file_dataplane_standalone_proto_router_interface_proto_rawDesc = []byte{
	0x0a, 0x31, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x6c, 0x6f, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x1a, 0x27, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x6c, 0x6f, 0x6e, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xab, 0x07, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x2a, 0x0a, 0x11,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x5f, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0d, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x6c, 0x61, 0x6e,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x73, 0x72, 0x63, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x73, 0x72, 0x63, 0x4d, 0x61, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x76, 0x34, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x34, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x36, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x36, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x74, 0x75, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x6d, 0x74, 0x75, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x61, 0x63, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x6e, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x41, 0x63, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x61, 0x63, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x41, 0x63, 0x6c, 0x12, 0x62, 0x0a, 0x1b, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6c, 0x65, 0x6d,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73,
	0x61, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x18, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x4d, 0x69, 0x73, 0x73, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x34, 0x5f,
	0x6d, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x76, 0x34, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x36, 0x5f, 0x6d, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x76, 0x36, 0x4d, 0x63,
	0x61, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x59, 0x0a, 0x16, 0x6c, 0x6f, 0x6f,
	0x70, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6c, 0x65, 0x6d, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61,
	0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14,
	0x6c, 0x6f, 0x6f, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x61, 0x74, 0x5a, 0x6f, 0x6e,
	0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64,
	0x65, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x13, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x74, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x6d, 0x70, 0x6c, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x70, 0x6c, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x31, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x6f, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x1f, 0x0a, 0x1d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xab, 0x05, 0x0a, 0x22, 0x53, 0x65, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x72, 0x63, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x72, 0x63,
	0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x34, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x34, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x36, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x56, 0x36, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x03, 0x6d, 0x74,
	0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x74, 0x75, 0x12, 0x21,
	0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x63, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x41, 0x63,
	0x6c, 0x12, 0x1f, 0x0a, 0x0a, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x63, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x09, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x41,
	0x63, 0x6c, 0x12, 0x64, 0x0a, 0x1b, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x5f, 0x6d,
	0x69, 0x73, 0x73, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x18,
	0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x4d, 0x69, 0x73, 0x73, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x34, 0x5f, 0x6d,
	0x63, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x0d, 0x76, 0x34, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x36, 0x5f, 0x6d, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0d, 0x76,
	0x36, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x5b, 0x0a, 0x16,
	0x6c, 0x6f, 0x6f, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6c,
	0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x73, 0x61, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x14, 0x6c, 0x6f, 0x6f, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x74,
	0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x09, 0x6e, 0x61, 0x74, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x74, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x13, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x74,
	0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6d, 0x70, 0x6c, 0x73, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x70, 0x6c, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x06, 0x0a,
	0x04, 0x61, 0x74, 0x74, 0x72, 0x22, 0x25, 0x0a, 0x23, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7f, 0x0a, 0x22,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x6f, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x6a, 0x0a,
	0x23, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x2a, 0x9a, 0x07, 0x0a, 0x13, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x12, 0x25, 0x0a, 0x21, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x2b, 0x0a, 0x27, 0x52, 0x4f, 0x55, 0x54,
	0x45, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x41, 0x54, 0x54,
	0x52, 0x5f, 0x56, 0x49, 0x52, 0x54, 0x55, 0x41, 0x4c, 0x5f, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52,
	0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x49, 0x44, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x52, 0x4f, 0x55, 0x54,
	0x45, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x41, 0x54, 0x54,
	0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x49, 0x44, 0x10, 0x04, 0x12, 0x27, 0x0a, 0x23, 0x52,
	0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f,
	0x41, 0x54, 0x54, 0x52, 0x5f, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f,
	0x49, 0x44, 0x10, 0x05, 0x12, 0x27, 0x0a, 0x23, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x49, 0x4e,
	0x4e, 0x45, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x49, 0x44, 0x10, 0x06, 0x12, 0x23, 0x0a,
	0x1f, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43,
	0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x42, 0x52, 0x49, 0x44, 0x47, 0x45, 0x5f, 0x49, 0x44,
	0x10, 0x07, 0x12, 0x29, 0x0a, 0x25, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x53, 0x52, 0x43, 0x5f,
	0x4d, 0x41, 0x43, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x08, 0x12, 0x28, 0x0a,
	0x24, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43,
	0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x56, 0x34, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x09, 0x12, 0x28, 0x0a, 0x24, 0x52, 0x4f, 0x55, 0x54, 0x45,
	0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52,
	0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x56, 0x36, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10,
	0x0a, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x4d, 0x54, 0x55, 0x10, 0x0b,
	0x12, 0x25, 0x0a, 0x21, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x46, 0x41, 0x43, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x49, 0x4e, 0x47, 0x52, 0x45, 0x53,
	0x53, 0x5f, 0x41, 0x43, 0x4c, 0x10, 0x0c, 0x12, 0x24, 0x0a, 0x20, 0x52, 0x4f, 0x55, 0x54, 0x45,
	0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52,
	0x5f, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x41, 0x43, 0x4c, 0x10, 0x0d, 0x12, 0x35, 0x0a,
	0x31, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43,
	0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x4e, 0x45, 0x49, 0x47, 0x48, 0x42, 0x4f, 0x52, 0x5f,
	0x4d, 0x49, 0x53, 0x53, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x0e, 0x12, 0x29, 0x0a, 0x25, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x56, 0x34,
	0x5f, 0x4d, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x0f, 0x12,
	0x29, 0x0a, 0x25, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46,
	0x41, 0x43, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x56, 0x36, 0x5f, 0x4d, 0x43, 0x41, 0x53,
	0x54, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x10, 0x12, 0x30, 0x0a, 0x2c, 0x52, 0x4f,
	0x55, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x41,
	0x54, 0x54, 0x52, 0x5f, 0x4c, 0x4f, 0x4f, 0x50, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x50, 0x41, 0x43,
	0x4b, 0x45, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x11, 0x12, 0x24, 0x0a, 0x20,
	0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45,
	0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x49, 0x53, 0x5f, 0x56, 0x49, 0x52, 0x54, 0x55, 0x41, 0x4c,
	0x10, 0x12, 0x12, 0x25, 0x0a, 0x21, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x4e, 0x41, 0x54, 0x5f,
	0x5a, 0x4f, 0x4e, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x13, 0x12, 0x2f, 0x0a, 0x2b, 0x52, 0x4f, 0x55,
	0x54, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x41, 0x54,
	0x54, 0x52, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x44, 0x45, 0x43, 0x52, 0x45,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x54, 0x4c, 0x10, 0x14, 0x12, 0x2a, 0x0a, 0x26, 0x52, 0x4f,
	0x55, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x41,
	0x54, 0x54, 0x52, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x4d, 0x50, 0x4c, 0x53, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x10, 0x15, 0x32, 0xd1, 0x04, 0x0a, 0x0f, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x15, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x12, 0x33, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6c, 0x65, 0x6d, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61,
	0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x84, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x33, 0x2e, 0x6c, 0x65,
	0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x73, 0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x39, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69,
	0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69,
	0x2e, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x96, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x12, 0x39, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6c,
	0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x73, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x6c, 0x6f, 0x6e, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dataplane_standalone_proto_router_interface_proto_rawDescOnce sync.Once
	file_dataplane_standalone_proto_router_interface_proto_rawDescData = file_dataplane_standalone_proto_router_interface_proto_rawDesc
)

func file_dataplane_standalone_proto_router_interface_proto_rawDescGZIP() []byte {
	file_dataplane_standalone_proto_router_interface_proto_rawDescOnce.Do(func() {
		file_dataplane_standalone_proto_router_interface_proto_rawDescData = protoimpl.X.CompressGZIP(file_dataplane_standalone_proto_router_interface_proto_rawDescData)
	})
	return file_dataplane_standalone_proto_router_interface_proto_rawDescData
}

var file_dataplane_standalone_proto_router_interface_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dataplane_standalone_proto_router_interface_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_dataplane_standalone_proto_router_interface_proto_goTypes = []interface{}{
	(RouterInterfaceAttr)(0),                    // 0: lemming.dataplane.sai.RouterInterfaceAttr
	(*CreateRouterInterfaceRequest)(nil),        // 1: lemming.dataplane.sai.CreateRouterInterfaceRequest
	(*CreateRouterInterfaceResponse)(nil),       // 2: lemming.dataplane.sai.CreateRouterInterfaceResponse
	(*RemoveRouterInterfaceRequest)(nil),        // 3: lemming.dataplane.sai.RemoveRouterInterfaceRequest
	(*RemoveRouterInterfaceResponse)(nil),       // 4: lemming.dataplane.sai.RemoveRouterInterfaceResponse
	(*SetRouterInterfaceAttributeRequest)(nil),  // 5: lemming.dataplane.sai.SetRouterInterfaceAttributeRequest
	(*SetRouterInterfaceAttributeResponse)(nil), // 6: lemming.dataplane.sai.SetRouterInterfaceAttributeResponse
	(*GetRouterInterfaceAttributeRequest)(nil),  // 7: lemming.dataplane.sai.GetRouterInterfaceAttributeRequest
	(*GetRouterInterfaceAttributeResponse)(nil), // 8: lemming.dataplane.sai.GetRouterInterfaceAttributeResponse
	(RouterInterfaceType)(0),                    // 9: lemming.dataplane.sai.RouterInterfaceType
	(PacketAction)(0),                           // 10: lemming.dataplane.sai.PacketAction
	(*RouterInterfaceAttribute)(nil),            // 11: lemming.dataplane.sai.RouterInterfaceAttribute
}
var file_dataplane_standalone_proto_router_interface_proto_depIdxs = []int32{
	9,  // 0: lemming.dataplane.sai.CreateRouterInterfaceRequest.type:type_name -> lemming.dataplane.sai.RouterInterfaceType
	10, // 1: lemming.dataplane.sai.CreateRouterInterfaceRequest.neighbor_miss_packet_action:type_name -> lemming.dataplane.sai.PacketAction
	10, // 2: lemming.dataplane.sai.CreateRouterInterfaceRequest.loopback_packet_action:type_name -> lemming.dataplane.sai.PacketAction
	10, // 3: lemming.dataplane.sai.SetRouterInterfaceAttributeRequest.neighbor_miss_packet_action:type_name -> lemming.dataplane.sai.PacketAction
	10, // 4: lemming.dataplane.sai.SetRouterInterfaceAttributeRequest.loopback_packet_action:type_name -> lemming.dataplane.sai.PacketAction
	0,  // 5: lemming.dataplane.sai.GetRouterInterfaceAttributeRequest.attr_type:type_name -> lemming.dataplane.sai.RouterInterfaceAttr
	11, // 6: lemming.dataplane.sai.GetRouterInterfaceAttributeResponse.attr:type_name -> lemming.dataplane.sai.RouterInterfaceAttribute
	1,  // 7: lemming.dataplane.sai.RouterInterface.CreateRouterInterface:input_type -> lemming.dataplane.sai.CreateRouterInterfaceRequest
	3,  // 8: lemming.dataplane.sai.RouterInterface.RemoveRouterInterface:input_type -> lemming.dataplane.sai.RemoveRouterInterfaceRequest
	5,  // 9: lemming.dataplane.sai.RouterInterface.SetRouterInterfaceAttribute:input_type -> lemming.dataplane.sai.SetRouterInterfaceAttributeRequest
	7,  // 10: lemming.dataplane.sai.RouterInterface.GetRouterInterfaceAttribute:input_type -> lemming.dataplane.sai.GetRouterInterfaceAttributeRequest
	2,  // 11: lemming.dataplane.sai.RouterInterface.CreateRouterInterface:output_type -> lemming.dataplane.sai.CreateRouterInterfaceResponse
	4,  // 12: lemming.dataplane.sai.RouterInterface.RemoveRouterInterface:output_type -> lemming.dataplane.sai.RemoveRouterInterfaceResponse
	6,  // 13: lemming.dataplane.sai.RouterInterface.SetRouterInterfaceAttribute:output_type -> lemming.dataplane.sai.SetRouterInterfaceAttributeResponse
	8,  // 14: lemming.dataplane.sai.RouterInterface.GetRouterInterfaceAttribute:output_type -> lemming.dataplane.sai.GetRouterInterfaceAttributeResponse
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_dataplane_standalone_proto_router_interface_proto_init() }
func file_dataplane_standalone_proto_router_interface_proto_init() {
	if File_dataplane_standalone_proto_router_interface_proto != nil {
		return
	}
	file_dataplane_standalone_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dataplane_standalone_proto_router_interface_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRouterInterfaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_router_interface_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRouterInterfaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_router_interface_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRouterInterfaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_router_interface_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRouterInterfaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_router_interface_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRouterInterfaceAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_router_interface_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRouterInterfaceAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_router_interface_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouterInterfaceAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_router_interface_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouterInterfaceAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dataplane_standalone_proto_router_interface_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*SetRouterInterfaceAttributeRequest_SrcMacAddress)(nil),
		(*SetRouterInterfaceAttributeRequest_AdminV4State)(nil),
		(*SetRouterInterfaceAttributeRequest_AdminV6State)(nil),
		(*SetRouterInterfaceAttributeRequest_Mtu)(nil),
		(*SetRouterInterfaceAttributeRequest_IngressAcl)(nil),
		(*SetRouterInterfaceAttributeRequest_EgressAcl)(nil),
		(*SetRouterInterfaceAttributeRequest_NeighborMissPacketAction)(nil),
		(*SetRouterInterfaceAttributeRequest_V4McastEnable)(nil),
		(*SetRouterInterfaceAttributeRequest_V6McastEnable)(nil),
		(*SetRouterInterfaceAttributeRequest_LoopbackPacketAction)(nil),
		(*SetRouterInterfaceAttributeRequest_NatZoneId)(nil),
		(*SetRouterInterfaceAttributeRequest_DisableDecrementTtl)(nil),
		(*SetRouterInterfaceAttributeRequest_AdminMplsState)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dataplane_standalone_proto_router_interface_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dataplane_standalone_proto_router_interface_proto_goTypes,
		DependencyIndexes: file_dataplane_standalone_proto_router_interface_proto_depIdxs,
		EnumInfos:         file_dataplane_standalone_proto_router_interface_proto_enumTypes,
		MessageInfos:      file_dataplane_standalone_proto_router_interface_proto_msgTypes,
	}.Build()
	File_dataplane_standalone_proto_router_interface_proto = out.File
	file_dataplane_standalone_proto_router_interface_proto_rawDesc = nil
	file_dataplane_standalone_proto_router_interface_proto_goTypes = nil
	file_dataplane_standalone_proto_router_interface_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RouterInterfaceClient is the client API for RouterInterface service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RouterInterfaceClient interface {
	CreateRouterInterface(ctx context.Context, in *CreateRouterInterfaceRequest, opts ...grpc.CallOption) (*CreateRouterInterfaceResponse, error)
	RemoveRouterInterface(ctx context.Context, in *RemoveRouterInterfaceRequest, opts ...grpc.CallOption) (*RemoveRouterInterfaceResponse, error)
	SetRouterInterfaceAttribute(ctx context.Context, in *SetRouterInterfaceAttributeRequest, opts ...grpc.CallOption) (*SetRouterInterfaceAttributeResponse, error)
	GetRouterInterfaceAttribute(ctx context.Context, in *GetRouterInterfaceAttributeRequest, opts ...grpc.CallOption) (*GetRouterInterfaceAttributeResponse, error)
}

type routerInterfaceClient struct {
	cc grpc.ClientConnInterface
}

func NewRouterInterfaceClient(cc grpc.ClientConnInterface) RouterInterfaceClient {
	return &routerInterfaceClient{cc}
}

func (c *routerInterfaceClient) CreateRouterInterface(ctx context.Context, in *CreateRouterInterfaceRequest, opts ...grpc.CallOption) (*CreateRouterInterfaceResponse, error) {
	out := new(CreateRouterInterfaceResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.RouterInterface/CreateRouterInterface", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routerInterfaceClient) RemoveRouterInterface(ctx context.Context, in *RemoveRouterInterfaceRequest, opts ...grpc.CallOption) (*RemoveRouterInterfaceResponse, error) {
	out := new(RemoveRouterInterfaceResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.RouterInterface/RemoveRouterInterface", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routerInterfaceClient) SetRouterInterfaceAttribute(ctx context.Context, in *SetRouterInterfaceAttributeRequest, opts ...grpc.CallOption) (*SetRouterInterfaceAttributeResponse, error) {
	out := new(SetRouterInterfaceAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.RouterInterface/SetRouterInterfaceAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routerInterfaceClient) GetRouterInterfaceAttribute(ctx context.Context, in *GetRouterInterfaceAttributeRequest, opts ...grpc.CallOption) (*GetRouterInterfaceAttributeResponse, error) {
	out := new(GetRouterInterfaceAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.RouterInterface/GetRouterInterfaceAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RouterInterfaceServer is the server API for RouterInterface service.
type RouterInterfaceServer interface {
	CreateRouterInterface(context.Context, *CreateRouterInterfaceRequest) (*CreateRouterInterfaceResponse, error)
	RemoveRouterInterface(context.Context, *RemoveRouterInterfaceRequest) (*RemoveRouterInterfaceResponse, error)
	SetRouterInterfaceAttribute(context.Context, *SetRouterInterfaceAttributeRequest) (*SetRouterInterfaceAttributeResponse, error)
	GetRouterInterfaceAttribute(context.Context, *GetRouterInterfaceAttributeRequest) (*GetRouterInterfaceAttributeResponse, error)
}

// UnimplementedRouterInterfaceServer can be embedded to have forward compatible implementations.
type UnimplementedRouterInterfaceServer struct {
}

func (*UnimplementedRouterInterfaceServer) CreateRouterInterface(context.Context, *CreateRouterInterfaceRequest) (*CreateRouterInterfaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRouterInterface not implemented")
}
func (*UnimplementedRouterInterfaceServer) RemoveRouterInterface(context.Context, *RemoveRouterInterfaceRequest) (*RemoveRouterInterfaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveRouterInterface not implemented")
}
func (*UnimplementedRouterInterfaceServer) SetRouterInterfaceAttribute(context.Context, *SetRouterInterfaceAttributeRequest) (*SetRouterInterfaceAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRouterInterfaceAttribute not implemented")
}
func (*UnimplementedRouterInterfaceServer) GetRouterInterfaceAttribute(context.Context, *GetRouterInterfaceAttributeRequest) (*GetRouterInterfaceAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRouterInterfaceAttribute not implemented")
}

func RegisterRouterInterfaceServer(s *grpc.Server, srv RouterInterfaceServer) {
	s.RegisterService(&_RouterInterface_serviceDesc, srv)
}

func _RouterInterface_CreateRouterInterface_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRouterInterfaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouterInterfaceServer).CreateRouterInterface(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.RouterInterface/CreateRouterInterface",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouterInterfaceServer).CreateRouterInterface(ctx, req.(*CreateRouterInterfaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RouterInterface_RemoveRouterInterface_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRouterInterfaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouterInterfaceServer).RemoveRouterInterface(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.RouterInterface/RemoveRouterInterface",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouterInterfaceServer).RemoveRouterInterface(ctx, req.(*RemoveRouterInterfaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RouterInterface_SetRouterInterfaceAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRouterInterfaceAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouterInterfaceServer).SetRouterInterfaceAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.RouterInterface/SetRouterInterfaceAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouterInterfaceServer).SetRouterInterfaceAttribute(ctx, req.(*SetRouterInterfaceAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RouterInterface_GetRouterInterfaceAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRouterInterfaceAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouterInterfaceServer).GetRouterInterfaceAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.RouterInterface/GetRouterInterfaceAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouterInterfaceServer).GetRouterInterfaceAttribute(ctx, req.(*GetRouterInterfaceAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RouterInterface_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lemming.dataplane.sai.RouterInterface",
	HandlerType: (*RouterInterfaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRouterInterface",
			Handler:    _RouterInterface_CreateRouterInterface_Handler,
		},
		{
			MethodName: "RemoveRouterInterface",
			Handler:    _RouterInterface_RemoveRouterInterface_Handler,
		},
		{
			MethodName: "SetRouterInterfaceAttribute",
			Handler:    _RouterInterface_SetRouterInterfaceAttribute_Handler,
		},
		{
			MethodName: "GetRouterInterfaceAttribute",
			Handler:    _RouterInterface_GetRouterInterfaceAttribute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dataplane/standalone/proto/router_interface.proto",
}
