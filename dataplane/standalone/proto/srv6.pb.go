// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: dataplane/standalone/proto/srv6.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Srv6SidlistAttr int32

const (
	Srv6SidlistAttr_SRV6_SIDLIST_ATTR_UNSPECIFIED  Srv6SidlistAttr = 0
	Srv6SidlistAttr_SRV6_SIDLIST_ATTR_TYPE         Srv6SidlistAttr = 1
	Srv6SidlistAttr_SRV6_SIDLIST_ATTR_TLV_LIST     Srv6SidlistAttr = 2
	Srv6SidlistAttr_SRV6_SIDLIST_ATTR_SEGMENT_LIST Srv6SidlistAttr = 3
)

// Enum value maps for Srv6SidlistAttr.
var (
	Srv6SidlistAttr_name = map[int32]string{
		0: "SRV6_SIDLIST_ATTR_UNSPECIFIED",
		1: "SRV6_SIDLIST_ATTR_TYPE",
		2: "SRV6_SIDLIST_ATTR_TLV_LIST",
		3: "SRV6_SIDLIST_ATTR_SEGMENT_LIST",
	}
	Srv6SidlistAttr_value = map[string]int32{
		"SRV6_SIDLIST_ATTR_UNSPECIFIED":  0,
		"SRV6_SIDLIST_ATTR_TYPE":         1,
		"SRV6_SIDLIST_ATTR_TLV_LIST":     2,
		"SRV6_SIDLIST_ATTR_SEGMENT_LIST": 3,
	}
)

func (x Srv6SidlistAttr) Enum() *Srv6SidlistAttr {
	p := new(Srv6SidlistAttr)
	*p = x
	return p
}

func (x Srv6SidlistAttr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Srv6SidlistAttr) Descriptor() protoreflect.EnumDescriptor {
	return file_dataplane_standalone_proto_srv6_proto_enumTypes[0].Descriptor()
}

func (Srv6SidlistAttr) Type() protoreflect.EnumType {
	return &file_dataplane_standalone_proto_srv6_proto_enumTypes[0]
}

func (x Srv6SidlistAttr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Srv6SidlistAttr.Descriptor instead.
func (Srv6SidlistAttr) EnumDescriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_srv6_proto_rawDescGZIP(), []int{0}
}

type MySidEntryAttr int32

const (
	MySidEntryAttr_MY_SID_ENTRY_ATTR_UNSPECIFIED              MySidEntryAttr = 0
	MySidEntryAttr_MY_SID_ENTRY_ATTR_ENDPOINT_BEHAVIOR        MySidEntryAttr = 1
	MySidEntryAttr_MY_SID_ENTRY_ATTR_ENDPOINT_BEHAVIOR_FLAVOR MySidEntryAttr = 2
	MySidEntryAttr_MY_SID_ENTRY_ATTR_PACKET_ACTION            MySidEntryAttr = 3
	MySidEntryAttr_MY_SID_ENTRY_ATTR_TRAP_PRIORITY            MySidEntryAttr = 4
	MySidEntryAttr_MY_SID_ENTRY_ATTR_NEXT_HOP_ID              MySidEntryAttr = 5
	MySidEntryAttr_MY_SID_ENTRY_ATTR_TUNNEL_ID                MySidEntryAttr = 6
	MySidEntryAttr_MY_SID_ENTRY_ATTR_VRF                      MySidEntryAttr = 7
	MySidEntryAttr_MY_SID_ENTRY_ATTR_COUNTER_ID               MySidEntryAttr = 8
)

// Enum value maps for MySidEntryAttr.
var (
	MySidEntryAttr_name = map[int32]string{
		0: "MY_SID_ENTRY_ATTR_UNSPECIFIED",
		1: "MY_SID_ENTRY_ATTR_ENDPOINT_BEHAVIOR",
		2: "MY_SID_ENTRY_ATTR_ENDPOINT_BEHAVIOR_FLAVOR",
		3: "MY_SID_ENTRY_ATTR_PACKET_ACTION",
		4: "MY_SID_ENTRY_ATTR_TRAP_PRIORITY",
		5: "MY_SID_ENTRY_ATTR_NEXT_HOP_ID",
		6: "MY_SID_ENTRY_ATTR_TUNNEL_ID",
		7: "MY_SID_ENTRY_ATTR_VRF",
		8: "MY_SID_ENTRY_ATTR_COUNTER_ID",
	}
	MySidEntryAttr_value = map[string]int32{
		"MY_SID_ENTRY_ATTR_UNSPECIFIED":              0,
		"MY_SID_ENTRY_ATTR_ENDPOINT_BEHAVIOR":        1,
		"MY_SID_ENTRY_ATTR_ENDPOINT_BEHAVIOR_FLAVOR": 2,
		"MY_SID_ENTRY_ATTR_PACKET_ACTION":            3,
		"MY_SID_ENTRY_ATTR_TRAP_PRIORITY":            4,
		"MY_SID_ENTRY_ATTR_NEXT_HOP_ID":              5,
		"MY_SID_ENTRY_ATTR_TUNNEL_ID":                6,
		"MY_SID_ENTRY_ATTR_VRF":                      7,
		"MY_SID_ENTRY_ATTR_COUNTER_ID":               8,
	}
)

func (x MySidEntryAttr) Enum() *MySidEntryAttr {
	p := new(MySidEntryAttr)
	*p = x
	return p
}

func (x MySidEntryAttr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MySidEntryAttr) Descriptor() protoreflect.EnumDescriptor {
	return file_dataplane_standalone_proto_srv6_proto_enumTypes[1].Descriptor()
}

func (MySidEntryAttr) Type() protoreflect.EnumType {
	return &file_dataplane_standalone_proto_srv6_proto_enumTypes[1]
}

func (x MySidEntryAttr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MySidEntryAttr.Descriptor instead.
func (MySidEntryAttr) EnumDescriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_srv6_proto_rawDescGZIP(), []int{1}
}

type CreateSrv6SidlistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Switch      uint64           `protobuf:"varint,1,opt,name=switch,proto3" json:"switch,omitempty"`
	Type        *Srv6SidlistType `protobuf:"varint,2,opt,name=type,proto3,enum=lemming.dataplane.sai.Srv6SidlistType,oneof" json:"type,omitempty"`
	TlvList     []*TLVEntry      `protobuf:"bytes,3,rep,name=tlv_list,json=tlvList,proto3" json:"tlv_list,omitempty"`
	SegmentList [][]byte         `protobuf:"bytes,4,rep,name=segment_list,json=segmentList,proto3" json:"segment_list,omitempty"`
}

func (x *CreateSrv6SidlistRequest) Reset() {
	*x = CreateSrv6SidlistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSrv6SidlistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSrv6SidlistRequest) ProtoMessage() {}

func (x *CreateSrv6SidlistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSrv6SidlistRequest.ProtoReflect.Descriptor instead.
func (*CreateSrv6SidlistRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_srv6_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSrv6SidlistRequest) GetSwitch() uint64 {
	if x != nil {
		return x.Switch
	}
	return 0
}

func (x *CreateSrv6SidlistRequest) GetType() Srv6SidlistType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Srv6SidlistType_SRV6_SIDLIST_TYPE_UNSPECIFIED
}

func (x *CreateSrv6SidlistRequest) GetTlvList() []*TLVEntry {
	if x != nil {
		return x.TlvList
	}
	return nil
}

func (x *CreateSrv6SidlistRequest) GetSegmentList() [][]byte {
	if x != nil {
		return x.SegmentList
	}
	return nil
}

type CreateSrv6SidlistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *CreateSrv6SidlistResponse) Reset() {
	*x = CreateSrv6SidlistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSrv6SidlistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSrv6SidlistResponse) ProtoMessage() {}

func (x *CreateSrv6SidlistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSrv6SidlistResponse.ProtoReflect.Descriptor instead.
func (*CreateSrv6SidlistResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_srv6_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSrv6SidlistResponse) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type RemoveSrv6SidlistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *RemoveSrv6SidlistRequest) Reset() {
	*x = RemoveSrv6SidlistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSrv6SidlistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSrv6SidlistRequest) ProtoMessage() {}

func (x *RemoveSrv6SidlistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSrv6SidlistRequest.ProtoReflect.Descriptor instead.
func (*RemoveSrv6SidlistRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_srv6_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveSrv6SidlistRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type RemoveSrv6SidlistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveSrv6SidlistResponse) Reset() {
	*x = RemoveSrv6SidlistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSrv6SidlistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSrv6SidlistResponse) ProtoMessage() {}

func (x *RemoveSrv6SidlistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSrv6SidlistResponse.ProtoReflect.Descriptor instead.
func (*RemoveSrv6SidlistResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_srv6_proto_rawDescGZIP(), []int{3}
}

type SetSrv6SidlistAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid         uint64      `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	TlvList     []*TLVEntry `protobuf:"bytes,2,rep,name=tlv_list,json=tlvList,proto3" json:"tlv_list,omitempty"`
	SegmentList [][]byte    `protobuf:"bytes,3,rep,name=segment_list,json=segmentList,proto3" json:"segment_list,omitempty"`
}

func (x *SetSrv6SidlistAttributeRequest) Reset() {
	*x = SetSrv6SidlistAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSrv6SidlistAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSrv6SidlistAttributeRequest) ProtoMessage() {}

func (x *SetSrv6SidlistAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSrv6SidlistAttributeRequest.ProtoReflect.Descriptor instead.
func (*SetSrv6SidlistAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_srv6_proto_rawDescGZIP(), []int{4}
}

func (x *SetSrv6SidlistAttributeRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *SetSrv6SidlistAttributeRequest) GetTlvList() []*TLVEntry {
	if x != nil {
		return x.TlvList
	}
	return nil
}

func (x *SetSrv6SidlistAttributeRequest) GetSegmentList() [][]byte {
	if x != nil {
		return x.SegmentList
	}
	return nil
}

type SetSrv6SidlistAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetSrv6SidlistAttributeResponse) Reset() {
	*x = SetSrv6SidlistAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSrv6SidlistAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSrv6SidlistAttributeResponse) ProtoMessage() {}

func (x *SetSrv6SidlistAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSrv6SidlistAttributeResponse.ProtoReflect.Descriptor instead.
func (*SetSrv6SidlistAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_srv6_proto_rawDescGZIP(), []int{5}
}

type GetSrv6SidlistAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid      uint64            `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	AttrType []Srv6SidlistAttr `protobuf:"varint,2,rep,packed,name=attr_type,json=attrType,proto3,enum=lemming.dataplane.sai.Srv6SidlistAttr" json:"attr_type,omitempty"`
}

func (x *GetSrv6SidlistAttributeRequest) Reset() {
	*x = GetSrv6SidlistAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSrv6SidlistAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSrv6SidlistAttributeRequest) ProtoMessage() {}

func (x *GetSrv6SidlistAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSrv6SidlistAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetSrv6SidlistAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_srv6_proto_rawDescGZIP(), []int{6}
}

func (x *GetSrv6SidlistAttributeRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *GetSrv6SidlistAttributeRequest) GetAttrType() []Srv6SidlistAttr {
	if x != nil {
		return x.AttrType
	}
	return nil
}

type GetSrv6SidlistAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr *Srv6SidlistAttribute `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr,omitempty"`
}

func (x *GetSrv6SidlistAttributeResponse) Reset() {
	*x = GetSrv6SidlistAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSrv6SidlistAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSrv6SidlistAttributeResponse) ProtoMessage() {}

func (x *GetSrv6SidlistAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSrv6SidlistAttributeResponse.ProtoReflect.Descriptor instead.
func (*GetSrv6SidlistAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_srv6_proto_rawDescGZIP(), []int{7}
}

func (x *GetSrv6SidlistAttributeResponse) GetAttr() *Srv6SidlistAttribute {
	if x != nil {
		return x.Attr
	}
	return nil
}

type CreateMySidEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry                  *MySidEntry                       `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	EndpointBehavior       *MySidEntryEndpointBehavior       `protobuf:"varint,2,opt,name=endpoint_behavior,json=endpointBehavior,proto3,enum=lemming.dataplane.sai.MySidEntryEndpointBehavior,oneof" json:"endpoint_behavior,omitempty"`
	EndpointBehaviorFlavor *MySidEntryEndpointBehaviorFlavor `protobuf:"varint,3,opt,name=endpoint_behavior_flavor,json=endpointBehaviorFlavor,proto3,enum=lemming.dataplane.sai.MySidEntryEndpointBehaviorFlavor,oneof" json:"endpoint_behavior_flavor,omitempty"`
	PacketAction           *PacketAction                     `protobuf:"varint,4,opt,name=packet_action,json=packetAction,proto3,enum=lemming.dataplane.sai.PacketAction,oneof" json:"packet_action,omitempty"`
	TrapPriority           *uint32                           `protobuf:"varint,5,opt,name=trap_priority,json=trapPriority,proto3,oneof" json:"trap_priority,omitempty"`
	NextHopId              *uint64                           `protobuf:"varint,6,opt,name=next_hop_id,json=nextHopId,proto3,oneof" json:"next_hop_id,omitempty"`
	TunnelId               *uint64                           `protobuf:"varint,7,opt,name=tunnel_id,json=tunnelId,proto3,oneof" json:"tunnel_id,omitempty"`
	Vrf                    *uint64                           `protobuf:"varint,8,opt,name=vrf,proto3,oneof" json:"vrf,omitempty"`
	CounterId              *uint64                           `protobuf:"varint,9,opt,name=counter_id,json=counterId,proto3,oneof" json:"counter_id,omitempty"`
}

func (x *CreateMySidEntryRequest) Reset() {
	*x = CreateMySidEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMySidEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMySidEntryRequest) ProtoMessage() {}

func (x *CreateMySidEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMySidEntryRequest.ProtoReflect.Descriptor instead.
func (*CreateMySidEntryRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_srv6_proto_rawDescGZIP(), []int{8}
}

func (x *CreateMySidEntryRequest) GetEntry() *MySidEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *CreateMySidEntryRequest) GetEndpointBehavior() MySidEntryEndpointBehavior {
	if x != nil && x.EndpointBehavior != nil {
		return *x.EndpointBehavior
	}
	return MySidEntryEndpointBehavior_MY_SID_ENTRY_ENDPOINT_BEHAVIOR_UNSPECIFIED
}

func (x *CreateMySidEntryRequest) GetEndpointBehaviorFlavor() MySidEntryEndpointBehaviorFlavor {
	if x != nil && x.EndpointBehaviorFlavor != nil {
		return *x.EndpointBehaviorFlavor
	}
	return MySidEntryEndpointBehaviorFlavor_MY_SID_ENTRY_ENDPOINT_BEHAVIOR_FLAVOR_UNSPECIFIED
}

func (x *CreateMySidEntryRequest) GetPacketAction() PacketAction {
	if x != nil && x.PacketAction != nil {
		return *x.PacketAction
	}
	return PacketAction_PACKET_ACTION_UNSPECIFIED
}

func (x *CreateMySidEntryRequest) GetTrapPriority() uint32 {
	if x != nil && x.TrapPriority != nil {
		return *x.TrapPriority
	}
	return 0
}

func (x *CreateMySidEntryRequest) GetNextHopId() uint64 {
	if x != nil && x.NextHopId != nil {
		return *x.NextHopId
	}
	return 0
}

func (x *CreateMySidEntryRequest) GetTunnelId() uint64 {
	if x != nil && x.TunnelId != nil {
		return *x.TunnelId
	}
	return 0
}

func (x *CreateMySidEntryRequest) GetVrf() uint64 {
	if x != nil && x.Vrf != nil {
		return *x.Vrf
	}
	return 0
}

func (x *CreateMySidEntryRequest) GetCounterId() uint64 {
	if x != nil && x.CounterId != nil {
		return *x.CounterId
	}
	return 0
}

type CreateMySidEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateMySidEntryResponse) Reset() {
	*x = CreateMySidEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMySidEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMySidEntryResponse) ProtoMessage() {}

func (x *CreateMySidEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMySidEntryResponse.ProtoReflect.Descriptor instead.
func (*CreateMySidEntryResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_srv6_proto_rawDescGZIP(), []int{9}
}

type RemoveMySidEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry *MySidEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *RemoveMySidEntryRequest) Reset() {
	*x = RemoveMySidEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMySidEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMySidEntryRequest) ProtoMessage() {}

func (x *RemoveMySidEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMySidEntryRequest.ProtoReflect.Descriptor instead.
func (*RemoveMySidEntryRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_srv6_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveMySidEntryRequest) GetEntry() *MySidEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type RemoveMySidEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveMySidEntryResponse) Reset() {
	*x = RemoveMySidEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMySidEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMySidEntryResponse) ProtoMessage() {}

func (x *RemoveMySidEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMySidEntryResponse.ProtoReflect.Descriptor instead.
func (*RemoveMySidEntryResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_srv6_proto_rawDescGZIP(), []int{11}
}

type SetMySidEntryAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry                  *MySidEntry                       `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	EndpointBehavior       *MySidEntryEndpointBehavior       `protobuf:"varint,2,opt,name=endpoint_behavior,json=endpointBehavior,proto3,enum=lemming.dataplane.sai.MySidEntryEndpointBehavior,oneof" json:"endpoint_behavior,omitempty"`
	EndpointBehaviorFlavor *MySidEntryEndpointBehaviorFlavor `protobuf:"varint,3,opt,name=endpoint_behavior_flavor,json=endpointBehaviorFlavor,proto3,enum=lemming.dataplane.sai.MySidEntryEndpointBehaviorFlavor,oneof" json:"endpoint_behavior_flavor,omitempty"`
	PacketAction           *PacketAction                     `protobuf:"varint,4,opt,name=packet_action,json=packetAction,proto3,enum=lemming.dataplane.sai.PacketAction,oneof" json:"packet_action,omitempty"`
	TrapPriority           *uint32                           `protobuf:"varint,5,opt,name=trap_priority,json=trapPriority,proto3,oneof" json:"trap_priority,omitempty"`
	NextHopId              *uint64                           `protobuf:"varint,6,opt,name=next_hop_id,json=nextHopId,proto3,oneof" json:"next_hop_id,omitempty"`
	TunnelId               *uint64                           `protobuf:"varint,7,opt,name=tunnel_id,json=tunnelId,proto3,oneof" json:"tunnel_id,omitempty"`
	Vrf                    *uint64                           `protobuf:"varint,8,opt,name=vrf,proto3,oneof" json:"vrf,omitempty"`
	CounterId              *uint64                           `protobuf:"varint,9,opt,name=counter_id,json=counterId,proto3,oneof" json:"counter_id,omitempty"`
}

func (x *SetMySidEntryAttributeRequest) Reset() {
	*x = SetMySidEntryAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMySidEntryAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMySidEntryAttributeRequest) ProtoMessage() {}

func (x *SetMySidEntryAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMySidEntryAttributeRequest.ProtoReflect.Descriptor instead.
func (*SetMySidEntryAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_srv6_proto_rawDescGZIP(), []int{12}
}

func (x *SetMySidEntryAttributeRequest) GetEntry() *MySidEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *SetMySidEntryAttributeRequest) GetEndpointBehavior() MySidEntryEndpointBehavior {
	if x != nil && x.EndpointBehavior != nil {
		return *x.EndpointBehavior
	}
	return MySidEntryEndpointBehavior_MY_SID_ENTRY_ENDPOINT_BEHAVIOR_UNSPECIFIED
}

func (x *SetMySidEntryAttributeRequest) GetEndpointBehaviorFlavor() MySidEntryEndpointBehaviorFlavor {
	if x != nil && x.EndpointBehaviorFlavor != nil {
		return *x.EndpointBehaviorFlavor
	}
	return MySidEntryEndpointBehaviorFlavor_MY_SID_ENTRY_ENDPOINT_BEHAVIOR_FLAVOR_UNSPECIFIED
}

func (x *SetMySidEntryAttributeRequest) GetPacketAction() PacketAction {
	if x != nil && x.PacketAction != nil {
		return *x.PacketAction
	}
	return PacketAction_PACKET_ACTION_UNSPECIFIED
}

func (x *SetMySidEntryAttributeRequest) GetTrapPriority() uint32 {
	if x != nil && x.TrapPriority != nil {
		return *x.TrapPriority
	}
	return 0
}

func (x *SetMySidEntryAttributeRequest) GetNextHopId() uint64 {
	if x != nil && x.NextHopId != nil {
		return *x.NextHopId
	}
	return 0
}

func (x *SetMySidEntryAttributeRequest) GetTunnelId() uint64 {
	if x != nil && x.TunnelId != nil {
		return *x.TunnelId
	}
	return 0
}

func (x *SetMySidEntryAttributeRequest) GetVrf() uint64 {
	if x != nil && x.Vrf != nil {
		return *x.Vrf
	}
	return 0
}

func (x *SetMySidEntryAttributeRequest) GetCounterId() uint64 {
	if x != nil && x.CounterId != nil {
		return *x.CounterId
	}
	return 0
}

type SetMySidEntryAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetMySidEntryAttributeResponse) Reset() {
	*x = SetMySidEntryAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMySidEntryAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMySidEntryAttributeResponse) ProtoMessage() {}

func (x *SetMySidEntryAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMySidEntryAttributeResponse.ProtoReflect.Descriptor instead.
func (*SetMySidEntryAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_srv6_proto_rawDescGZIP(), []int{13}
}

type GetMySidEntryAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry    *MySidEntry      `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	AttrType []MySidEntryAttr `protobuf:"varint,2,rep,packed,name=attr_type,json=attrType,proto3,enum=lemming.dataplane.sai.MySidEntryAttr" json:"attr_type,omitempty"`
}

func (x *GetMySidEntryAttributeRequest) Reset() {
	*x = GetMySidEntryAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMySidEntryAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMySidEntryAttributeRequest) ProtoMessage() {}

func (x *GetMySidEntryAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMySidEntryAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetMySidEntryAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_srv6_proto_rawDescGZIP(), []int{14}
}

func (x *GetMySidEntryAttributeRequest) GetEntry() *MySidEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *GetMySidEntryAttributeRequest) GetAttrType() []MySidEntryAttr {
	if x != nil {
		return x.AttrType
	}
	return nil
}

type GetMySidEntryAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr *MySidEntryAttribute `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr,omitempty"`
}

func (x *GetMySidEntryAttributeResponse) Reset() {
	*x = GetMySidEntryAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMySidEntryAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMySidEntryAttributeResponse) ProtoMessage() {}

func (x *GetMySidEntryAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_srv6_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMySidEntryAttributeResponse.ProtoReflect.Descriptor instead.
func (*GetMySidEntryAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_srv6_proto_rawDescGZIP(), []int{15}
}

func (x *GetMySidEntryAttributeResponse) GetAttr() *MySidEntryAttribute {
	if x != nil {
		return x.Attr
	}
	return nil
}

var File_dataplane_standalone_proto_srv6_proto protoreflect.FileDescriptor

var file_dataplane_standalone_proto_srv6_proto_rawDesc = []byte{
	0x0a, 0x25, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x6c, 0x6f, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x72, 0x76,
	0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x1a, 0x27,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x6c, 0x6f, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf3, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x72, 0x76, 0x36, 0x53, 0x69, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x45, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6c, 0x65, 0x6d,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73,
	0x61, 0x69, 0x2e, 0x53, 0x72, 0x76, 0x36, 0x53, 0x69, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x48, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x08, 0x74, 0x6c, 0x76, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x54, 0x4c,
	0x56, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x02, 0x52, 0x07, 0x74, 0x6c,
	0x76, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0c, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x42, 0x04, 0x80, 0xb5, 0x18,
	0x03, 0x52, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x3a, 0x04,
	0x88, 0xb5, 0x18, 0x3e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x2d, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x72, 0x76, 0x36, 0x53, 0x69, 0x64, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x2c, 0x0a, 0x18,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x72, 0x76, 0x36, 0x53, 0x69, 0x64, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x53, 0x72, 0x76, 0x36, 0x53, 0x69, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x1e, 0x53, 0x65, 0x74, 0x53,
	0x72, 0x76, 0x36, 0x53, 0x69, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x08,
	0x74, 0x6c, 0x76, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x54, 0x4c, 0x56, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x04, 0x80, 0xb5, 0x18, 0x02, 0x52, 0x07, 0x74, 0x6c, 0x76, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x0c, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0c, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x03, 0x52, 0x0b, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x21, 0x0a, 0x1f, 0x53, 0x65, 0x74, 0x53, 0x72,
	0x76, 0x36, 0x53, 0x69, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x77, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x53, 0x72, 0x76, 0x36, 0x53, 0x69, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x43,
	0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x26, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x53, 0x72, 0x76, 0x36, 0x53, 0x69,
	0x64, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x72, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x62, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x72, 0x76, 0x36, 0x53, 0x69,
	0x64, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x53, 0x72, 0x76,
	0x36, 0x53, 0x69, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x22, 0xec, 0x05, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4d, 0x79, 0x53, 0x69, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x69, 0x0a, 0x11,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e,
	0x4d, 0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01,
	0x48, 0x00, 0x52, 0x10, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x7c, 0x0a, 0x18, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x5f, 0x66, 0x6c, 0x61,
	0x76, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x6c, 0x65, 0x6d, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61,
	0x69, 0x2e, 0x4d, 0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x46, 0x6c, 0x61, 0x76,
	0x6f, 0x72, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x02, 0x48, 0x01, 0x52, 0x16, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x46, 0x6c, 0x61, 0x76,
	0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x53, 0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6c,
	0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x73, 0x61, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x03, 0x48, 0x02, 0x52, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x0d, 0x74, 0x72,
	0x61, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x04, 0x48, 0x03, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x70, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0b, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x04, 0x80, 0xb5, 0x18, 0x05, 0x48, 0x04, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x09, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x06, 0x48, 0x05,
	0x52, 0x08, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x03, 0x76, 0x72, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x07,
	0x48, 0x06, 0x52, 0x03, 0x76, 0x72, 0x66, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0a, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04,
	0x80, 0xb5, 0x18, 0x08, 0x48, 0x07, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x3a, 0x04, 0x88, 0xb5, 0x18, 0x61, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x5f, 0x66, 0x6c, 0x61, 0x76, 0x6f, 0x72, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x74, 0x72, 0x61, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x69,
	0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x76, 0x72, 0x66, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x52, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x53, 0x69,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a,
	0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c,
	0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4d, 0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4d, 0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xec, 0x05, 0x0a, 0x1d, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x69, 0x64, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4d, 0x79, 0x53, 0x69,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x69, 0x0a,
	0x11, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69,
	0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69,
	0x2e, 0x4d, 0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x42, 0x04, 0x80, 0xb5, 0x18,
	0x01, 0x48, 0x00, 0x52, 0x10, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x7c, 0x0a, 0x18, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x5f, 0x66, 0x6c,
	0x61, 0x76, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x6c, 0x65, 0x6d,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73,
	0x61, 0x69, 0x2e, 0x4d, 0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x46, 0x6c, 0x61,
	0x76, 0x6f, 0x72, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x02, 0x48, 0x01, 0x52, 0x16, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x46, 0x6c, 0x61,
	0x76, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x53, 0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e,
	0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x03, 0x48, 0x02, 0x52, 0x0c, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x04, 0x48, 0x03, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x70,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0b, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x04, 0x80, 0xb5, 0x18, 0x05, 0x48, 0x04, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f,
	0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x09, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x06, 0x48,
	0x05, 0x52, 0x08, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x03, 0x76, 0x72, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0x80, 0xb5, 0x18,
	0x07, 0x48, 0x06, 0x52, 0x03, 0x76, 0x72, 0x66, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0a, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x04, 0x80, 0xb5, 0x18, 0x08, 0x48, 0x07, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x42, 0x1b, 0x0a, 0x19, 0x5f,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x5f, 0x66, 0x6c, 0x61, 0x76, 0x6f, 0x72, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x74,
	0x72, 0x61, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x76,
	0x72, 0x66, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x22, 0x20, 0x0a, 0x1e, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x69, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4d, 0x79, 0x53,
	0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x42,
	0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4d, 0x79, 0x53, 0x69, 0x64, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x60, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x69, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4d, 0x79, 0x53, 0x69, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x04,
	0x61, 0x74, 0x74, 0x72, 0x2a, 0x94, 0x01, 0x0a, 0x0f, 0x53, 0x72, 0x76, 0x36, 0x53, 0x69, 0x64,
	0x6c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x52, 0x56, 0x36,
	0x5f, 0x53, 0x49, 0x44, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x53,
	0x52, 0x56, 0x36, 0x5f, 0x53, 0x49, 0x44, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x52,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x52, 0x56, 0x36, 0x5f,
	0x53, 0x49, 0x44, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x54, 0x4c, 0x56,
	0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x52, 0x56, 0x36, 0x5f,
	0x53, 0x49, 0x44, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x53, 0x45, 0x47,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x03, 0x2a, 0xd7, 0x02, 0x0a, 0x0e,
	0x4d, 0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x12, 0x21,
	0x0a, 0x1d, 0x4d, 0x59, 0x5f, 0x53, 0x49, 0x44, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41,
	0x54, 0x54, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x27, 0x0a, 0x23, 0x4d, 0x59, 0x5f, 0x53, 0x49, 0x44, 0x5f, 0x45, 0x4e, 0x54, 0x52,
	0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f,
	0x42, 0x45, 0x48, 0x41, 0x56, 0x49, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x2e, 0x0a, 0x2a, 0x4d, 0x59,
	0x5f, 0x53, 0x49, 0x44, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f,
	0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x42, 0x45, 0x48, 0x41, 0x56, 0x49, 0x4f,
	0x52, 0x5f, 0x46, 0x4c, 0x41, 0x56, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x4d, 0x59,
	0x5f, 0x53, 0x49, 0x44, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f,
	0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12,
	0x23, 0x0a, 0x1f, 0x4d, 0x59, 0x5f, 0x53, 0x49, 0x44, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f,
	0x41, 0x54, 0x54, 0x52, 0x5f, 0x54, 0x52, 0x41, 0x50, 0x5f, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49,
	0x54, 0x59, 0x10, 0x04, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x59, 0x5f, 0x53, 0x49, 0x44, 0x5f, 0x45,
	0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x48,
	0x4f, 0x50, 0x5f, 0x49, 0x44, 0x10, 0x05, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x59, 0x5f, 0x53, 0x49,
	0x44, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x54, 0x55, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x59, 0x5f, 0x53,
	0x49, 0x44, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x56, 0x52,
	0x46, 0x10, 0x07, 0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x59, 0x5f, 0x53, 0x49, 0x44, 0x5f, 0x45, 0x4e,
	0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52,
	0x5f, 0x49, 0x44, 0x10, 0x08, 0x32, 0x96, 0x08, 0x0a, 0x04, 0x53, 0x72, 0x76, 0x36, 0x12, 0x78,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x72, 0x76, 0x36, 0x53, 0x69, 0x64, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x2f, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x72, 0x76, 0x36, 0x53, 0x69, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x72, 0x76, 0x36, 0x53, 0x69, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x53, 0x72, 0x76, 0x36, 0x53, 0x69, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x2e,
	0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x72, 0x76, 0x36,
	0x53, 0x69, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x72, 0x76,
	0x36, 0x53, 0x69, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x53, 0x72, 0x76, 0x36, 0x53, 0x69,
	0x64, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x35,
	0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x72, 0x76, 0x36, 0x53, 0x69,
	0x64, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x53, 0x65,
	0x74, 0x53, 0x72, 0x76, 0x36, 0x53, 0x69, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x8a, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x72, 0x76, 0x36, 0x53, 0x69, 0x64, 0x6c, 0x69,
	0x73, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x35, 0x2e, 0x6c, 0x65,
	0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x73, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x72, 0x76, 0x36, 0x53, 0x69, 0x64, 0x6c, 0x69,
	0x73, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x72,
	0x76, 0x36, 0x53, 0x69, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x2e, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x53,
	0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2e, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x16, 0x53,
	0x65, 0x74, 0x4d, 0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x34, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x53, 0x65,
	0x74, 0x4d, 0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6c, 0x65,
	0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x73, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x69,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12,
	0x34, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x69, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x53, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3a,
	0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65,
	0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x6c, 0x6f, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_dataplane_standalone_proto_srv6_proto_rawDescOnce sync.Once
	file_dataplane_standalone_proto_srv6_proto_rawDescData = file_dataplane_standalone_proto_srv6_proto_rawDesc
)

func file_dataplane_standalone_proto_srv6_proto_rawDescGZIP() []byte {
	file_dataplane_standalone_proto_srv6_proto_rawDescOnce.Do(func() {
		file_dataplane_standalone_proto_srv6_proto_rawDescData = protoimpl.X.CompressGZIP(file_dataplane_standalone_proto_srv6_proto_rawDescData)
	})
	return file_dataplane_standalone_proto_srv6_proto_rawDescData
}

var file_dataplane_standalone_proto_srv6_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_dataplane_standalone_proto_srv6_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_dataplane_standalone_proto_srv6_proto_goTypes = []interface{}{
	(Srv6SidlistAttr)(0),                    // 0: lemming.dataplane.sai.Srv6SidlistAttr
	(MySidEntryAttr)(0),                     // 1: lemming.dataplane.sai.MySidEntryAttr
	(*CreateSrv6SidlistRequest)(nil),        // 2: lemming.dataplane.sai.CreateSrv6SidlistRequest
	(*CreateSrv6SidlistResponse)(nil),       // 3: lemming.dataplane.sai.CreateSrv6SidlistResponse
	(*RemoveSrv6SidlistRequest)(nil),        // 4: lemming.dataplane.sai.RemoveSrv6SidlistRequest
	(*RemoveSrv6SidlistResponse)(nil),       // 5: lemming.dataplane.sai.RemoveSrv6SidlistResponse
	(*SetSrv6SidlistAttributeRequest)(nil),  // 6: lemming.dataplane.sai.SetSrv6SidlistAttributeRequest
	(*SetSrv6SidlistAttributeResponse)(nil), // 7: lemming.dataplane.sai.SetSrv6SidlistAttributeResponse
	(*GetSrv6SidlistAttributeRequest)(nil),  // 8: lemming.dataplane.sai.GetSrv6SidlistAttributeRequest
	(*GetSrv6SidlistAttributeResponse)(nil), // 9: lemming.dataplane.sai.GetSrv6SidlistAttributeResponse
	(*CreateMySidEntryRequest)(nil),         // 10: lemming.dataplane.sai.CreateMySidEntryRequest
	(*CreateMySidEntryResponse)(nil),        // 11: lemming.dataplane.sai.CreateMySidEntryResponse
	(*RemoveMySidEntryRequest)(nil),         // 12: lemming.dataplane.sai.RemoveMySidEntryRequest
	(*RemoveMySidEntryResponse)(nil),        // 13: lemming.dataplane.sai.RemoveMySidEntryResponse
	(*SetMySidEntryAttributeRequest)(nil),   // 14: lemming.dataplane.sai.SetMySidEntryAttributeRequest
	(*SetMySidEntryAttributeResponse)(nil),  // 15: lemming.dataplane.sai.SetMySidEntryAttributeResponse
	(*GetMySidEntryAttributeRequest)(nil),   // 16: lemming.dataplane.sai.GetMySidEntryAttributeRequest
	(*GetMySidEntryAttributeResponse)(nil),  // 17: lemming.dataplane.sai.GetMySidEntryAttributeResponse
	(Srv6SidlistType)(0),                    // 18: lemming.dataplane.sai.Srv6SidlistType
	(*TLVEntry)(nil),                        // 19: lemming.dataplane.sai.TLVEntry
	(*Srv6SidlistAttribute)(nil),            // 20: lemming.dataplane.sai.Srv6SidlistAttribute
	(*MySidEntry)(nil),                      // 21: lemming.dataplane.sai.MySidEntry
	(MySidEntryEndpointBehavior)(0),         // 22: lemming.dataplane.sai.MySidEntryEndpointBehavior
	(MySidEntryEndpointBehaviorFlavor)(0),   // 23: lemming.dataplane.sai.MySidEntryEndpointBehaviorFlavor
	(PacketAction)(0),                       // 24: lemming.dataplane.sai.PacketAction
	(*MySidEntryAttribute)(nil),             // 25: lemming.dataplane.sai.MySidEntryAttribute
}
var file_dataplane_standalone_proto_srv6_proto_depIdxs = []int32{
	18, // 0: lemming.dataplane.sai.CreateSrv6SidlistRequest.type:type_name -> lemming.dataplane.sai.Srv6SidlistType
	19, // 1: lemming.dataplane.sai.CreateSrv6SidlistRequest.tlv_list:type_name -> lemming.dataplane.sai.TLVEntry
	19, // 2: lemming.dataplane.sai.SetSrv6SidlistAttributeRequest.tlv_list:type_name -> lemming.dataplane.sai.TLVEntry
	0,  // 3: lemming.dataplane.sai.GetSrv6SidlistAttributeRequest.attr_type:type_name -> lemming.dataplane.sai.Srv6SidlistAttr
	20, // 4: lemming.dataplane.sai.GetSrv6SidlistAttributeResponse.attr:type_name -> lemming.dataplane.sai.Srv6SidlistAttribute
	21, // 5: lemming.dataplane.sai.CreateMySidEntryRequest.entry:type_name -> lemming.dataplane.sai.MySidEntry
	22, // 6: lemming.dataplane.sai.CreateMySidEntryRequest.endpoint_behavior:type_name -> lemming.dataplane.sai.MySidEntryEndpointBehavior
	23, // 7: lemming.dataplane.sai.CreateMySidEntryRequest.endpoint_behavior_flavor:type_name -> lemming.dataplane.sai.MySidEntryEndpointBehaviorFlavor
	24, // 8: lemming.dataplane.sai.CreateMySidEntryRequest.packet_action:type_name -> lemming.dataplane.sai.PacketAction
	21, // 9: lemming.dataplane.sai.RemoveMySidEntryRequest.entry:type_name -> lemming.dataplane.sai.MySidEntry
	21, // 10: lemming.dataplane.sai.SetMySidEntryAttributeRequest.entry:type_name -> lemming.dataplane.sai.MySidEntry
	22, // 11: lemming.dataplane.sai.SetMySidEntryAttributeRequest.endpoint_behavior:type_name -> lemming.dataplane.sai.MySidEntryEndpointBehavior
	23, // 12: lemming.dataplane.sai.SetMySidEntryAttributeRequest.endpoint_behavior_flavor:type_name -> lemming.dataplane.sai.MySidEntryEndpointBehaviorFlavor
	24, // 13: lemming.dataplane.sai.SetMySidEntryAttributeRequest.packet_action:type_name -> lemming.dataplane.sai.PacketAction
	21, // 14: lemming.dataplane.sai.GetMySidEntryAttributeRequest.entry:type_name -> lemming.dataplane.sai.MySidEntry
	1,  // 15: lemming.dataplane.sai.GetMySidEntryAttributeRequest.attr_type:type_name -> lemming.dataplane.sai.MySidEntryAttr
	25, // 16: lemming.dataplane.sai.GetMySidEntryAttributeResponse.attr:type_name -> lemming.dataplane.sai.MySidEntryAttribute
	2,  // 17: lemming.dataplane.sai.Srv6.CreateSrv6Sidlist:input_type -> lemming.dataplane.sai.CreateSrv6SidlistRequest
	4,  // 18: lemming.dataplane.sai.Srv6.RemoveSrv6Sidlist:input_type -> lemming.dataplane.sai.RemoveSrv6SidlistRequest
	6,  // 19: lemming.dataplane.sai.Srv6.SetSrv6SidlistAttribute:input_type -> lemming.dataplane.sai.SetSrv6SidlistAttributeRequest
	8,  // 20: lemming.dataplane.sai.Srv6.GetSrv6SidlistAttribute:input_type -> lemming.dataplane.sai.GetSrv6SidlistAttributeRequest
	10, // 21: lemming.dataplane.sai.Srv6.CreateMySidEntry:input_type -> lemming.dataplane.sai.CreateMySidEntryRequest
	12, // 22: lemming.dataplane.sai.Srv6.RemoveMySidEntry:input_type -> lemming.dataplane.sai.RemoveMySidEntryRequest
	14, // 23: lemming.dataplane.sai.Srv6.SetMySidEntryAttribute:input_type -> lemming.dataplane.sai.SetMySidEntryAttributeRequest
	16, // 24: lemming.dataplane.sai.Srv6.GetMySidEntryAttribute:input_type -> lemming.dataplane.sai.GetMySidEntryAttributeRequest
	3,  // 25: lemming.dataplane.sai.Srv6.CreateSrv6Sidlist:output_type -> lemming.dataplane.sai.CreateSrv6SidlistResponse
	5,  // 26: lemming.dataplane.sai.Srv6.RemoveSrv6Sidlist:output_type -> lemming.dataplane.sai.RemoveSrv6SidlistResponse
	7,  // 27: lemming.dataplane.sai.Srv6.SetSrv6SidlistAttribute:output_type -> lemming.dataplane.sai.SetSrv6SidlistAttributeResponse
	9,  // 28: lemming.dataplane.sai.Srv6.GetSrv6SidlistAttribute:output_type -> lemming.dataplane.sai.GetSrv6SidlistAttributeResponse
	11, // 29: lemming.dataplane.sai.Srv6.CreateMySidEntry:output_type -> lemming.dataplane.sai.CreateMySidEntryResponse
	13, // 30: lemming.dataplane.sai.Srv6.RemoveMySidEntry:output_type -> lemming.dataplane.sai.RemoveMySidEntryResponse
	15, // 31: lemming.dataplane.sai.Srv6.SetMySidEntryAttribute:output_type -> lemming.dataplane.sai.SetMySidEntryAttributeResponse
	17, // 32: lemming.dataplane.sai.Srv6.GetMySidEntryAttribute:output_type -> lemming.dataplane.sai.GetMySidEntryAttributeResponse
	25, // [25:33] is the sub-list for method output_type
	17, // [17:25] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_dataplane_standalone_proto_srv6_proto_init() }
func file_dataplane_standalone_proto_srv6_proto_init() {
	if File_dataplane_standalone_proto_srv6_proto != nil {
		return
	}
	file_dataplane_standalone_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dataplane_standalone_proto_srv6_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSrv6SidlistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_srv6_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSrv6SidlistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_srv6_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSrv6SidlistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_srv6_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSrv6SidlistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_srv6_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSrv6SidlistAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_srv6_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSrv6SidlistAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_srv6_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSrv6SidlistAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_srv6_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSrv6SidlistAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_srv6_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMySidEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_srv6_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMySidEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_srv6_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMySidEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_srv6_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMySidEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_srv6_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMySidEntryAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_srv6_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMySidEntryAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_srv6_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMySidEntryAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_srv6_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMySidEntryAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dataplane_standalone_proto_srv6_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_dataplane_standalone_proto_srv6_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_dataplane_standalone_proto_srv6_proto_msgTypes[12].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dataplane_standalone_proto_srv6_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dataplane_standalone_proto_srv6_proto_goTypes,
		DependencyIndexes: file_dataplane_standalone_proto_srv6_proto_depIdxs,
		EnumInfos:         file_dataplane_standalone_proto_srv6_proto_enumTypes,
		MessageInfos:      file_dataplane_standalone_proto_srv6_proto_msgTypes,
	}.Build()
	File_dataplane_standalone_proto_srv6_proto = out.File
	file_dataplane_standalone_proto_srv6_proto_rawDesc = nil
	file_dataplane_standalone_proto_srv6_proto_goTypes = nil
	file_dataplane_standalone_proto_srv6_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// Srv6Client is the client API for Srv6 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Srv6Client interface {
	CreateSrv6Sidlist(ctx context.Context, in *CreateSrv6SidlistRequest, opts ...grpc.CallOption) (*CreateSrv6SidlistResponse, error)
	RemoveSrv6Sidlist(ctx context.Context, in *RemoveSrv6SidlistRequest, opts ...grpc.CallOption) (*RemoveSrv6SidlistResponse, error)
	SetSrv6SidlistAttribute(ctx context.Context, in *SetSrv6SidlistAttributeRequest, opts ...grpc.CallOption) (*SetSrv6SidlistAttributeResponse, error)
	GetSrv6SidlistAttribute(ctx context.Context, in *GetSrv6SidlistAttributeRequest, opts ...grpc.CallOption) (*GetSrv6SidlistAttributeResponse, error)
	CreateMySidEntry(ctx context.Context, in *CreateMySidEntryRequest, opts ...grpc.CallOption) (*CreateMySidEntryResponse, error)
	RemoveMySidEntry(ctx context.Context, in *RemoveMySidEntryRequest, opts ...grpc.CallOption) (*RemoveMySidEntryResponse, error)
	SetMySidEntryAttribute(ctx context.Context, in *SetMySidEntryAttributeRequest, opts ...grpc.CallOption) (*SetMySidEntryAttributeResponse, error)
	GetMySidEntryAttribute(ctx context.Context, in *GetMySidEntryAttributeRequest, opts ...grpc.CallOption) (*GetMySidEntryAttributeResponse, error)
}

type srv6Client struct {
	cc grpc.ClientConnInterface
}

func NewSrv6Client(cc grpc.ClientConnInterface) Srv6Client {
	return &srv6Client{cc}
}

func (c *srv6Client) CreateSrv6Sidlist(ctx context.Context, in *CreateSrv6SidlistRequest, opts ...grpc.CallOption) (*CreateSrv6SidlistResponse, error) {
	out := new(CreateSrv6SidlistResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Srv6/CreateSrv6Sidlist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) RemoveSrv6Sidlist(ctx context.Context, in *RemoveSrv6SidlistRequest, opts ...grpc.CallOption) (*RemoveSrv6SidlistResponse, error) {
	out := new(RemoveSrv6SidlistResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Srv6/RemoveSrv6Sidlist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) SetSrv6SidlistAttribute(ctx context.Context, in *SetSrv6SidlistAttributeRequest, opts ...grpc.CallOption) (*SetSrv6SidlistAttributeResponse, error) {
	out := new(SetSrv6SidlistAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Srv6/SetSrv6SidlistAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) GetSrv6SidlistAttribute(ctx context.Context, in *GetSrv6SidlistAttributeRequest, opts ...grpc.CallOption) (*GetSrv6SidlistAttributeResponse, error) {
	out := new(GetSrv6SidlistAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Srv6/GetSrv6SidlistAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) CreateMySidEntry(ctx context.Context, in *CreateMySidEntryRequest, opts ...grpc.CallOption) (*CreateMySidEntryResponse, error) {
	out := new(CreateMySidEntryResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Srv6/CreateMySidEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) RemoveMySidEntry(ctx context.Context, in *RemoveMySidEntryRequest, opts ...grpc.CallOption) (*RemoveMySidEntryResponse, error) {
	out := new(RemoveMySidEntryResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Srv6/RemoveMySidEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) SetMySidEntryAttribute(ctx context.Context, in *SetMySidEntryAttributeRequest, opts ...grpc.CallOption) (*SetMySidEntryAttributeResponse, error) {
	out := new(SetMySidEntryAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Srv6/SetMySidEntryAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) GetMySidEntryAttribute(ctx context.Context, in *GetMySidEntryAttributeRequest, opts ...grpc.CallOption) (*GetMySidEntryAttributeResponse, error) {
	out := new(GetMySidEntryAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Srv6/GetMySidEntryAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Srv6Server is the server API for Srv6 service.
type Srv6Server interface {
	CreateSrv6Sidlist(context.Context, *CreateSrv6SidlistRequest) (*CreateSrv6SidlistResponse, error)
	RemoveSrv6Sidlist(context.Context, *RemoveSrv6SidlistRequest) (*RemoveSrv6SidlistResponse, error)
	SetSrv6SidlistAttribute(context.Context, *SetSrv6SidlistAttributeRequest) (*SetSrv6SidlistAttributeResponse, error)
	GetSrv6SidlistAttribute(context.Context, *GetSrv6SidlistAttributeRequest) (*GetSrv6SidlistAttributeResponse, error)
	CreateMySidEntry(context.Context, *CreateMySidEntryRequest) (*CreateMySidEntryResponse, error)
	RemoveMySidEntry(context.Context, *RemoveMySidEntryRequest) (*RemoveMySidEntryResponse, error)
	SetMySidEntryAttribute(context.Context, *SetMySidEntryAttributeRequest) (*SetMySidEntryAttributeResponse, error)
	GetMySidEntryAttribute(context.Context, *GetMySidEntryAttributeRequest) (*GetMySidEntryAttributeResponse, error)
}

// UnimplementedSrv6Server can be embedded to have forward compatible implementations.
type UnimplementedSrv6Server struct {
}

func (*UnimplementedSrv6Server) CreateSrv6Sidlist(context.Context, *CreateSrv6SidlistRequest) (*CreateSrv6SidlistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSrv6Sidlist not implemented")
}
func (*UnimplementedSrv6Server) RemoveSrv6Sidlist(context.Context, *RemoveSrv6SidlistRequest) (*RemoveSrv6SidlistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveSrv6Sidlist not implemented")
}
func (*UnimplementedSrv6Server) SetSrv6SidlistAttribute(context.Context, *SetSrv6SidlistAttributeRequest) (*SetSrv6SidlistAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSrv6SidlistAttribute not implemented")
}
func (*UnimplementedSrv6Server) GetSrv6SidlistAttribute(context.Context, *GetSrv6SidlistAttributeRequest) (*GetSrv6SidlistAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSrv6SidlistAttribute not implemented")
}
func (*UnimplementedSrv6Server) CreateMySidEntry(context.Context, *CreateMySidEntryRequest) (*CreateMySidEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMySidEntry not implemented")
}
func (*UnimplementedSrv6Server) RemoveMySidEntry(context.Context, *RemoveMySidEntryRequest) (*RemoveMySidEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveMySidEntry not implemented")
}
func (*UnimplementedSrv6Server) SetMySidEntryAttribute(context.Context, *SetMySidEntryAttributeRequest) (*SetMySidEntryAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetMySidEntryAttribute not implemented")
}
func (*UnimplementedSrv6Server) GetMySidEntryAttribute(context.Context, *GetMySidEntryAttributeRequest) (*GetMySidEntryAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMySidEntryAttribute not implemented")
}

func RegisterSrv6Server(s *grpc.Server, srv Srv6Server) {
	s.RegisterService(&_Srv6_serviceDesc, srv)
}

func _Srv6_CreateSrv6Sidlist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSrv6SidlistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).CreateSrv6Sidlist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Srv6/CreateSrv6Sidlist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).CreateSrv6Sidlist(ctx, req.(*CreateSrv6SidlistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_RemoveSrv6Sidlist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveSrv6SidlistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).RemoveSrv6Sidlist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Srv6/RemoveSrv6Sidlist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).RemoveSrv6Sidlist(ctx, req.(*RemoveSrv6SidlistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_SetSrv6SidlistAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSrv6SidlistAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).SetSrv6SidlistAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Srv6/SetSrv6SidlistAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).SetSrv6SidlistAttribute(ctx, req.(*SetSrv6SidlistAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_GetSrv6SidlistAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSrv6SidlistAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).GetSrv6SidlistAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Srv6/GetSrv6SidlistAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).GetSrv6SidlistAttribute(ctx, req.(*GetSrv6SidlistAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_CreateMySidEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMySidEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).CreateMySidEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Srv6/CreateMySidEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).CreateMySidEntry(ctx, req.(*CreateMySidEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_RemoveMySidEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveMySidEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).RemoveMySidEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Srv6/RemoveMySidEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).RemoveMySidEntry(ctx, req.(*RemoveMySidEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_SetMySidEntryAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetMySidEntryAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).SetMySidEntryAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Srv6/SetMySidEntryAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).SetMySidEntryAttribute(ctx, req.(*SetMySidEntryAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_GetMySidEntryAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMySidEntryAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).GetMySidEntryAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Srv6/GetMySidEntryAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).GetMySidEntryAttribute(ctx, req.(*GetMySidEntryAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Srv6_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lemming.dataplane.sai.Srv6",
	HandlerType: (*Srv6Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSrv6Sidlist",
			Handler:    _Srv6_CreateSrv6Sidlist_Handler,
		},
		{
			MethodName: "RemoveSrv6Sidlist",
			Handler:    _Srv6_RemoveSrv6Sidlist_Handler,
		},
		{
			MethodName: "SetSrv6SidlistAttribute",
			Handler:    _Srv6_SetSrv6SidlistAttribute_Handler,
		},
		{
			MethodName: "GetSrv6SidlistAttribute",
			Handler:    _Srv6_GetSrv6SidlistAttribute_Handler,
		},
		{
			MethodName: "CreateMySidEntry",
			Handler:    _Srv6_CreateMySidEntry_Handler,
		},
		{
			MethodName: "RemoveMySidEntry",
			Handler:    _Srv6_RemoveMySidEntry_Handler,
		},
		{
			MethodName: "SetMySidEntryAttribute",
			Handler:    _Srv6_SetMySidEntryAttribute_Handler,
		},
		{
			MethodName: "GetMySidEntryAttribute",
			Handler:    _Srv6_GetMySidEntryAttribute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dataplane/standalone/proto/srv6.proto",
}
