
syntax = "proto3";

package lemming.dataplane.sai;

import "dataplane/standalone/proto/common.proto";

option go_package = "github.com/openconfig/lemming/dataplane/standalone/proto;sai";

enum FdbEntryAttr {
  FDB_ENTRY_ATTR_UNSPECIFIED = 0;
  FDB_ENTRY_ATTR_TYPE = 1;
  FDB_ENTRY_ATTR_PACKET_ACTION = 2;
  FDB_ENTRY_ATTR_USER_TRAP_ID = 3;
  FDB_ENTRY_ATTR_BRIDGE_PORT_ID = 4;
  FDB_ENTRY_ATTR_META_DATA = 5;
  FDB_ENTRY_ATTR_ENDPOINT_IP = 6;
  FDB_ENTRY_ATTR_COUNTER_ID = 7;
  FDB_ENTRY_ATTR_ALLOW_MAC_MOVE = 8;
}

message CreateFdbEntryRequest {
  option (sai_type) = OBJECT_TYPE_FDB_ENTRY;
  FdbEntry entry = 1;
  optional FdbEntryType type = 2 [(attr_enum_value) = 1];
  optional PacketAction packet_action = 3 [(attr_enum_value) = 2];
  optional uint64 user_trap_id = 4 [(attr_enum_value) = 3];
  optional uint64 bridge_port_id = 5 [(attr_enum_value) = 4];
  optional uint32 meta_data = 6 [(attr_enum_value) = 5];
  optional bytes endpoint_ip = 7 [(attr_enum_value) = 6];
  optional uint64 counter_id = 8 [(attr_enum_value) = 7];
  optional bool allow_mac_move = 9 [(attr_enum_value) = 8];
}

message CreateFdbEntryResponse {}

message RemoveFdbEntryRequest {
  FdbEntry entry = 1;
}

message RemoveFdbEntryResponse {}

message SetFdbEntryAttributeRequest {
  FdbEntry entry = 1;
  optional FdbEntryType type = 2 [(attr_enum_value) = 1];
  optional PacketAction packet_action = 3 [(attr_enum_value) = 2];
  optional uint64 user_trap_id = 4 [(attr_enum_value) = 3];
  optional uint64 bridge_port_id = 5 [(attr_enum_value) = 4];
  optional uint32 meta_data = 6 [(attr_enum_value) = 5];
  optional bytes endpoint_ip = 7 [(attr_enum_value) = 6];
  optional uint64 counter_id = 8 [(attr_enum_value) = 7];
  optional bool allow_mac_move = 9 [(attr_enum_value) = 8];
}

message SetFdbEntryAttributeResponse {}

message GetFdbEntryAttributeRequest {
  FdbEntry entry = 1;
  repeated FdbEntryAttr attr_type = 2;
}

message GetFdbEntryAttributeResponse {
  FdbEntryAttribute attr = 1;
}

message CreateFdbEntriesRequest {
  repeated CreateFdbEntryRequest reqs = 1;
}

message CreateFdbEntriesResponse {
  repeated CreateFdbEntryResponse resps = 1;
}

service Fdb {
  rpc CreateFdbEntry(CreateFdbEntryRequest) returns (CreateFdbEntryResponse) {}
  rpc RemoveFdbEntry(RemoveFdbEntryRequest) returns (RemoveFdbEntryResponse) {}
  rpc SetFdbEntryAttribute(SetFdbEntryAttributeRequest)
      returns (SetFdbEntryAttributeResponse) {}
  rpc GetFdbEntryAttribute(GetFdbEntryAttributeRequest)
      returns (GetFdbEntryAttributeResponse) {}
  rpc CreateFdbEntries(CreateFdbEntriesRequest)
      returns (CreateFdbEntriesResponse) {}
}
