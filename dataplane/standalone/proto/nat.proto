
syntax = "proto3";

package lemming.dataplane.sai;

import "dataplane/standalone/proto/common.proto";

option go_package = "github.com/openconfig/lemming/dataplane/standalone/proto";


enum NatEntryAttr {
	NAT_ENTRY_ATTR_UNSPECIFIED = 0;
	NAT_ENTRY_ATTR_NAT_TYPE = 1;
	NAT_ENTRY_ATTR_SRC_IP = 2;
	NAT_ENTRY_ATTR_SRC_IP_MASK = 3;
	NAT_ENTRY_ATTR_VR_ID = 4;
	NAT_ENTRY_ATTR_DST_IP = 5;
	NAT_ENTRY_ATTR_DST_IP_MASK = 6;
	NAT_ENTRY_ATTR_L4_SRC_PORT = 7;
	NAT_ENTRY_ATTR_L4_DST_PORT = 8;
	NAT_ENTRY_ATTR_ENABLE_PACKET_COUNT = 9;
	NAT_ENTRY_ATTR_PACKET_COUNT = 10;
	NAT_ENTRY_ATTR_ENABLE_BYTE_COUNT = 11;
	NAT_ENTRY_ATTR_BYTE_COUNT = 12;
	NAT_ENTRY_ATTR_HIT_BIT_COR = 13;
	NAT_ENTRY_ATTR_HIT_BIT = 14;
}

enum NatZoneCounterAttr {
	NAT_ZONE_COUNTER_ATTR_UNSPECIFIED = 0;
	NAT_ZONE_COUNTER_ATTR_NAT_TYPE = 1;
	NAT_ZONE_COUNTER_ATTR_ZONE_ID = 2;
	NAT_ZONE_COUNTER_ATTR_ENABLE_DISCARD = 3;
	NAT_ZONE_COUNTER_ATTR_DISCARD_PACKET_COUNT = 4;
	NAT_ZONE_COUNTER_ATTR_ENABLE_TRANSLATION_NEEDED = 5;
	NAT_ZONE_COUNTER_ATTR_TRANSLATION_NEEDED_PACKET_COUNT = 6;
	NAT_ZONE_COUNTER_ATTR_ENABLE_TRANSLATIONS = 7;
	NAT_ZONE_COUNTER_ATTR_TRANSLATIONS_PACKET_COUNT = 8;
}

message CreateNatEntryRequest {
	NatEntry entry = 1;
	
	NatType nat_type = 2;
	bytes src_ip = 3;
	bytes src_ip_mask = 4;
	uint64 vr_id = 5;
	bytes dst_ip = 6;
	bytes dst_ip_mask = 7;
	uint32 l4_src_port = 8;
	uint32 l4_dst_port = 9;
	bool enable_packet_count = 10;
	uint64 packet_count = 11;
	bool enable_byte_count = 12;
	uint64 byte_count = 13;
	bool hit_bit_cor = 14;
	bool hit_bit = 15;
	
}

message CreateNatEntryResponse {
	
	
}

message RemoveNatEntryRequest {
	NatEntry entry = 1;
	
	
}

message RemoveNatEntryResponse {
	
	
}

message SetNatEntryAttributeRequest {
	NatEntry entry = 1;
	oneof attr {
	NatType nat_type = 2;
	bytes src_ip = 3;
	bytes src_ip_mask = 4;
	uint64 vr_id = 5;
	bytes dst_ip = 6;
	bytes dst_ip_mask = 7;
	uint32 l4_src_port = 8;
	uint32 l4_dst_port = 9;
	bool enable_packet_count = 10;
	uint64 packet_count = 11;
	bool enable_byte_count = 12;
	uint64 byte_count = 13;
	bool hit_bit_cor = 14;
	bool hit_bit = 15;
	}
}

message SetNatEntryAttributeResponse {
	
	
}

message GetNatEntryAttributeRequest {
	NatEntry entry = 1;
	repeated NatEntryAttr attr_type = 2;
	
	
}

message GetNatEntryAttributeResponse {
	repeated NatEntryAttribute attr = 1;
	
	
}

message CreateNatZoneCounterRequest {
	uint64 switch = 1;
	
	NatType nat_type = 2;
	uint32 zone_id = 3;
	bool enable_discard = 4;
	uint64 discard_packet_count = 5;
	bool enable_translation_needed = 6;
	uint64 translation_needed_packet_count = 7;
	bool enable_translations = 8;
	uint64 translations_packet_count = 9;
	
}

message CreateNatZoneCounterResponse {
	uint64 oid = 1;
	
	
}

message RemoveNatZoneCounterRequest {
	uint64 oid = 1;
	
	
}

message RemoveNatZoneCounterResponse {
	
	
}

message SetNatZoneCounterAttributeRequest {
	uint64 oid = 1;
	oneof attr {
	NatType nat_type = 2;
	uint32 zone_id = 3;
	uint64 discard_packet_count = 4;
	uint64 translation_needed_packet_count = 5;
	uint64 translations_packet_count = 6;
	}
}

message SetNatZoneCounterAttributeResponse {
	
	
}

message GetNatZoneCounterAttributeRequest {
	uint64 oid = 1;
	repeated NatZoneCounterAttr attr_type = 2;
	
	
}

message GetNatZoneCounterAttributeResponse {
	repeated NatZoneCounterAttribute attr = 1;
	
	
}


service Nat {
	rpc CreateNatEntry (CreateNatEntryRequest) returns (CreateNatEntryResponse) {}
	rpc RemoveNatEntry (RemoveNatEntryRequest) returns (RemoveNatEntryResponse) {}
	rpc SetNatEntryAttribute (SetNatEntryAttributeRequest) returns (SetNatEntryAttributeResponse) {}
	rpc GetNatEntryAttribute (GetNatEntryAttributeRequest) returns (GetNatEntryAttributeResponse) {}
	rpc CreateNatZoneCounter (CreateNatZoneCounterRequest) returns (CreateNatZoneCounterResponse) {}
	rpc RemoveNatZoneCounter (RemoveNatZoneCounterRequest) returns (RemoveNatZoneCounterResponse) {}
	rpc SetNatZoneCounterAttribute (SetNatZoneCounterAttributeRequest) returns (SetNatZoneCounterAttributeResponse) {}
	rpc GetNatZoneCounterAttribute (GetNatZoneCounterAttributeRequest) returns (GetNatZoneCounterAttributeResponse) {}
}
