// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: dataplane/standalone/proto/queue.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueueAttr int32

const (
	QueueAttr_QUEUE_ATTR_UNSPECIFIED           QueueAttr = 0
	QueueAttr_QUEUE_ATTR_TYPE                  QueueAttr = 1
	QueueAttr_QUEUE_ATTR_PORT                  QueueAttr = 2
	QueueAttr_QUEUE_ATTR_INDEX                 QueueAttr = 3
	QueueAttr_QUEUE_ATTR_PARENT_SCHEDULER_NODE QueueAttr = 4
	QueueAttr_QUEUE_ATTR_WRED_PROFILE_ID       QueueAttr = 5
	QueueAttr_QUEUE_ATTR_BUFFER_PROFILE_ID     QueueAttr = 6
	QueueAttr_QUEUE_ATTR_SCHEDULER_PROFILE_ID  QueueAttr = 7
	QueueAttr_QUEUE_ATTR_PAUSE_STATUS          QueueAttr = 8
	QueueAttr_QUEUE_ATTR_ENABLE_PFC_DLDR       QueueAttr = 9
	QueueAttr_QUEUE_ATTR_PFC_DLR_INIT          QueueAttr = 10
	QueueAttr_QUEUE_ATTR_TAM_OBJECT            QueueAttr = 11
)

// Enum value maps for QueueAttr.
var (
	QueueAttr_name = map[int32]string{
		0:  "QUEUE_ATTR_UNSPECIFIED",
		1:  "QUEUE_ATTR_TYPE",
		2:  "QUEUE_ATTR_PORT",
		3:  "QUEUE_ATTR_INDEX",
		4:  "QUEUE_ATTR_PARENT_SCHEDULER_NODE",
		5:  "QUEUE_ATTR_WRED_PROFILE_ID",
		6:  "QUEUE_ATTR_BUFFER_PROFILE_ID",
		7:  "QUEUE_ATTR_SCHEDULER_PROFILE_ID",
		8:  "QUEUE_ATTR_PAUSE_STATUS",
		9:  "QUEUE_ATTR_ENABLE_PFC_DLDR",
		10: "QUEUE_ATTR_PFC_DLR_INIT",
		11: "QUEUE_ATTR_TAM_OBJECT",
	}
	QueueAttr_value = map[string]int32{
		"QUEUE_ATTR_UNSPECIFIED":           0,
		"QUEUE_ATTR_TYPE":                  1,
		"QUEUE_ATTR_PORT":                  2,
		"QUEUE_ATTR_INDEX":                 3,
		"QUEUE_ATTR_PARENT_SCHEDULER_NODE": 4,
		"QUEUE_ATTR_WRED_PROFILE_ID":       5,
		"QUEUE_ATTR_BUFFER_PROFILE_ID":     6,
		"QUEUE_ATTR_SCHEDULER_PROFILE_ID":  7,
		"QUEUE_ATTR_PAUSE_STATUS":          8,
		"QUEUE_ATTR_ENABLE_PFC_DLDR":       9,
		"QUEUE_ATTR_PFC_DLR_INIT":          10,
		"QUEUE_ATTR_TAM_OBJECT":            11,
	}
)

func (x QueueAttr) Enum() *QueueAttr {
	p := new(QueueAttr)
	*p = x
	return p
}

func (x QueueAttr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueueAttr) Descriptor() protoreflect.EnumDescriptor {
	return file_dataplane_standalone_proto_queue_proto_enumTypes[0].Descriptor()
}

func (QueueAttr) Type() protoreflect.EnumType {
	return &file_dataplane_standalone_proto_queue_proto_enumTypes[0]
}

func (x QueueAttr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueueAttr.Descriptor instead.
func (QueueAttr) EnumDescriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_queue_proto_rawDescGZIP(), []int{0}
}

type CreateQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Switch              uint64    `protobuf:"varint,1,opt,name=switch,proto3" json:"switch,omitempty"`
	Type                QueueType `protobuf:"varint,2,opt,name=type,proto3,enum=lemming.dataplane.sai.QueueType" json:"type,omitempty"`
	Port                uint64    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	Index               uint32    `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
	ParentSchedulerNode uint64    `protobuf:"varint,5,opt,name=parent_scheduler_node,json=parentSchedulerNode,proto3" json:"parent_scheduler_node,omitempty"`
	WredProfileId       uint64    `protobuf:"varint,6,opt,name=wred_profile_id,json=wredProfileId,proto3" json:"wred_profile_id,omitempty"`
	BufferProfileId     uint64    `protobuf:"varint,7,opt,name=buffer_profile_id,json=bufferProfileId,proto3" json:"buffer_profile_id,omitempty"`
	SchedulerProfileId  uint64    `protobuf:"varint,8,opt,name=scheduler_profile_id,json=schedulerProfileId,proto3" json:"scheduler_profile_id,omitempty"`
	EnablePfcDldr       bool      `protobuf:"varint,9,opt,name=enable_pfc_dldr,json=enablePfcDldr,proto3" json:"enable_pfc_dldr,omitempty"`
	PfcDlrInit          bool      `protobuf:"varint,10,opt,name=pfc_dlr_init,json=pfcDlrInit,proto3" json:"pfc_dlr_init,omitempty"`
	TamObject           []uint64  `protobuf:"varint,11,rep,packed,name=tam_object,json=tamObject,proto3" json:"tam_object,omitempty"`
}

func (x *CreateQueueRequest) Reset() {
	*x = CreateQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_queue_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueueRequest) ProtoMessage() {}

func (x *CreateQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_queue_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueueRequest.ProtoReflect.Descriptor instead.
func (*CreateQueueRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_queue_proto_rawDescGZIP(), []int{0}
}

func (x *CreateQueueRequest) GetSwitch() uint64 {
	if x != nil {
		return x.Switch
	}
	return 0
}

func (x *CreateQueueRequest) GetType() QueueType {
	if x != nil {
		return x.Type
	}
	return QueueType_QUEUE_TYPE_UNSPECIFIED
}

func (x *CreateQueueRequest) GetPort() uint64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *CreateQueueRequest) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CreateQueueRequest) GetParentSchedulerNode() uint64 {
	if x != nil {
		return x.ParentSchedulerNode
	}
	return 0
}

func (x *CreateQueueRequest) GetWredProfileId() uint64 {
	if x != nil {
		return x.WredProfileId
	}
	return 0
}

func (x *CreateQueueRequest) GetBufferProfileId() uint64 {
	if x != nil {
		return x.BufferProfileId
	}
	return 0
}

func (x *CreateQueueRequest) GetSchedulerProfileId() uint64 {
	if x != nil {
		return x.SchedulerProfileId
	}
	return 0
}

func (x *CreateQueueRequest) GetEnablePfcDldr() bool {
	if x != nil {
		return x.EnablePfcDldr
	}
	return false
}

func (x *CreateQueueRequest) GetPfcDlrInit() bool {
	if x != nil {
		return x.PfcDlrInit
	}
	return false
}

func (x *CreateQueueRequest) GetTamObject() []uint64 {
	if x != nil {
		return x.TamObject
	}
	return nil
}

type CreateQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *CreateQueueResponse) Reset() {
	*x = CreateQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_queue_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueueResponse) ProtoMessage() {}

func (x *CreateQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_queue_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueueResponse.ProtoReflect.Descriptor instead.
func (*CreateQueueResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_queue_proto_rawDescGZIP(), []int{1}
}

func (x *CreateQueueResponse) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type RemoveQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *RemoveQueueRequest) Reset() {
	*x = RemoveQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_queue_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveQueueRequest) ProtoMessage() {}

func (x *RemoveQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_queue_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveQueueRequest.ProtoReflect.Descriptor instead.
func (*RemoveQueueRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_queue_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveQueueRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type RemoveQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveQueueResponse) Reset() {
	*x = RemoveQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_queue_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveQueueResponse) ProtoMessage() {}

func (x *RemoveQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_queue_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveQueueResponse.ProtoReflect.Descriptor instead.
func (*RemoveQueueResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_queue_proto_rawDescGZIP(), []int{3}
}

type SetQueueAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	// Types that are assignable to Attr:
	//
	//	*SetQueueAttributeRequest_ParentSchedulerNode
	//	*SetQueueAttributeRequest_WredProfileId
	//	*SetQueueAttributeRequest_BufferProfileId
	//	*SetQueueAttributeRequest_SchedulerProfileId
	//	*SetQueueAttributeRequest_EnablePfcDldr
	//	*SetQueueAttributeRequest_PfcDlrInit
	//	*SetQueueAttributeRequest_TamObject
	Attr isSetQueueAttributeRequest_Attr `protobuf_oneof:"attr"`
}

func (x *SetQueueAttributeRequest) Reset() {
	*x = SetQueueAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_queue_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetQueueAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetQueueAttributeRequest) ProtoMessage() {}

func (x *SetQueueAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_queue_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetQueueAttributeRequest.ProtoReflect.Descriptor instead.
func (*SetQueueAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_queue_proto_rawDescGZIP(), []int{4}
}

func (x *SetQueueAttributeRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (m *SetQueueAttributeRequest) GetAttr() isSetQueueAttributeRequest_Attr {
	if m != nil {
		return m.Attr
	}
	return nil
}

func (x *SetQueueAttributeRequest) GetParentSchedulerNode() uint64 {
	if x, ok := x.GetAttr().(*SetQueueAttributeRequest_ParentSchedulerNode); ok {
		return x.ParentSchedulerNode
	}
	return 0
}

func (x *SetQueueAttributeRequest) GetWredProfileId() uint64 {
	if x, ok := x.GetAttr().(*SetQueueAttributeRequest_WredProfileId); ok {
		return x.WredProfileId
	}
	return 0
}

func (x *SetQueueAttributeRequest) GetBufferProfileId() uint64 {
	if x, ok := x.GetAttr().(*SetQueueAttributeRequest_BufferProfileId); ok {
		return x.BufferProfileId
	}
	return 0
}

func (x *SetQueueAttributeRequest) GetSchedulerProfileId() uint64 {
	if x, ok := x.GetAttr().(*SetQueueAttributeRequest_SchedulerProfileId); ok {
		return x.SchedulerProfileId
	}
	return 0
}

func (x *SetQueueAttributeRequest) GetEnablePfcDldr() bool {
	if x, ok := x.GetAttr().(*SetQueueAttributeRequest_EnablePfcDldr); ok {
		return x.EnablePfcDldr
	}
	return false
}

func (x *SetQueueAttributeRequest) GetPfcDlrInit() bool {
	if x, ok := x.GetAttr().(*SetQueueAttributeRequest_PfcDlrInit); ok {
		return x.PfcDlrInit
	}
	return false
}

func (x *SetQueueAttributeRequest) GetTamObject() *Uint64List {
	if x, ok := x.GetAttr().(*SetQueueAttributeRequest_TamObject); ok {
		return x.TamObject
	}
	return nil
}

type isSetQueueAttributeRequest_Attr interface {
	isSetQueueAttributeRequest_Attr()
}

type SetQueueAttributeRequest_ParentSchedulerNode struct {
	ParentSchedulerNode uint64 `protobuf:"varint,2,opt,name=parent_scheduler_node,json=parentSchedulerNode,proto3,oneof"`
}

type SetQueueAttributeRequest_WredProfileId struct {
	WredProfileId uint64 `protobuf:"varint,3,opt,name=wred_profile_id,json=wredProfileId,proto3,oneof"`
}

type SetQueueAttributeRequest_BufferProfileId struct {
	BufferProfileId uint64 `protobuf:"varint,4,opt,name=buffer_profile_id,json=bufferProfileId,proto3,oneof"`
}

type SetQueueAttributeRequest_SchedulerProfileId struct {
	SchedulerProfileId uint64 `protobuf:"varint,5,opt,name=scheduler_profile_id,json=schedulerProfileId,proto3,oneof"`
}

type SetQueueAttributeRequest_EnablePfcDldr struct {
	EnablePfcDldr bool `protobuf:"varint,6,opt,name=enable_pfc_dldr,json=enablePfcDldr,proto3,oneof"`
}

type SetQueueAttributeRequest_PfcDlrInit struct {
	PfcDlrInit bool `protobuf:"varint,7,opt,name=pfc_dlr_init,json=pfcDlrInit,proto3,oneof"`
}

type SetQueueAttributeRequest_TamObject struct {
	TamObject *Uint64List `protobuf:"bytes,8,opt,name=tam_object,json=tamObject,proto3,oneof"`
}

func (*SetQueueAttributeRequest_ParentSchedulerNode) isSetQueueAttributeRequest_Attr() {}

func (*SetQueueAttributeRequest_WredProfileId) isSetQueueAttributeRequest_Attr() {}

func (*SetQueueAttributeRequest_BufferProfileId) isSetQueueAttributeRequest_Attr() {}

func (*SetQueueAttributeRequest_SchedulerProfileId) isSetQueueAttributeRequest_Attr() {}

func (*SetQueueAttributeRequest_EnablePfcDldr) isSetQueueAttributeRequest_Attr() {}

func (*SetQueueAttributeRequest_PfcDlrInit) isSetQueueAttributeRequest_Attr() {}

func (*SetQueueAttributeRequest_TamObject) isSetQueueAttributeRequest_Attr() {}

type SetQueueAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetQueueAttributeResponse) Reset() {
	*x = SetQueueAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_queue_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetQueueAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetQueueAttributeResponse) ProtoMessage() {}

func (x *SetQueueAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_queue_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetQueueAttributeResponse.ProtoReflect.Descriptor instead.
func (*SetQueueAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_queue_proto_rawDescGZIP(), []int{5}
}

type GetQueueAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid      uint64      `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	AttrType []QueueAttr `protobuf:"varint,2,rep,packed,name=attr_type,json=attrType,proto3,enum=lemming.dataplane.sai.QueueAttr" json:"attr_type,omitempty"`
}

func (x *GetQueueAttributeRequest) Reset() {
	*x = GetQueueAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_queue_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueueAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueueAttributeRequest) ProtoMessage() {}

func (x *GetQueueAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_queue_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueueAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetQueueAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_queue_proto_rawDescGZIP(), []int{6}
}

func (x *GetQueueAttributeRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *GetQueueAttributeRequest) GetAttrType() []QueueAttr {
	if x != nil {
		return x.AttrType
	}
	return nil
}

type GetQueueAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr []*QueueAttribute `protobuf:"bytes,1,rep,name=attr,proto3" json:"attr,omitempty"`
}

func (x *GetQueueAttributeResponse) Reset() {
	*x = GetQueueAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_queue_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueueAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueueAttributeResponse) ProtoMessage() {}

func (x *GetQueueAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_queue_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueueAttributeResponse.ProtoReflect.Descriptor instead.
func (*GetQueueAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_queue_proto_rawDescGZIP(), []int{7}
}

func (x *GetQueueAttributeResponse) GetAttr() []*QueueAttribute {
	if x != nil {
		return x.Attr
	}
	return nil
}

var File_dataplane_standalone_proto_queue_proto protoreflect.FileDescriptor

var file_dataplane_standalone_proto_queue_proto_rawDesc = []byte{
	0x0a, 0x26, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x6c, 0x6f, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x1a,
	0x27, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x6c, 0x6f, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x03, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x77,
	0x72, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x77, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f,
	0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x30, 0x0a, 0x14, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x66, 0x63, 0x5f,
	0x64, 0x6c, 0x64, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x66, 0x63, 0x44, 0x6c, 0x64, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x66, 0x63,
	0x5f, 0x64, 0x6c, 0x72, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x70, 0x66, 0x63, 0x44, 0x6c, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x61, 0x6d, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x09, 0x74, 0x61, 0x6d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x27, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x6f, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x88, 0x03, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69,
	0x64, 0x12, 0x34, 0x0a, 0x15, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x00, 0x52, 0x13, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x77, 0x72, 0x65, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x00, 0x52, 0x0d, 0x77, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0f,
	0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x32, 0x0a, 0x14, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52,
	0x12, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x66,
	0x63, 0x5f, 0x64, 0x6c, 0x64, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0d,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x66, 0x63, 0x44, 0x6c, 0x64, 0x72, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x66, 0x63, 0x5f, 0x64, 0x6c, 0x72, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x66, 0x63, 0x44, 0x6c, 0x72, 0x49, 0x6e, 0x69,
	0x74, 0x12, 0x42, 0x0a, 0x0a, 0x74, 0x61, 0x6d, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x55, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x74, 0x61, 0x6d, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x22, 0x1b, 0x0a,
	0x19, 0x53, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6b, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6c, 0x65,
	0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x73, 0x61, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x74, 0x74, 0x72, 0x52, 0x08, 0x61,
	0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x56, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x2a,
	0xe9, 0x02, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x74, 0x74, 0x72, 0x12, 0x1a, 0x0a,
	0x16, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x51, 0x55, 0x45,
	0x55, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x50, 0x4f, 0x52,
	0x54, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x41, 0x54, 0x54,
	0x52, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x10, 0x03, 0x12, 0x24, 0x0a, 0x20, 0x51, 0x55, 0x45,
	0x55, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x50, 0x41, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53,
	0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x04, 0x12,
	0x1e, 0x0a, 0x1a, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x57, 0x52,
	0x45, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x05, 0x12,
	0x20, 0x0a, 0x1c, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x42, 0x55,
	0x46, 0x46, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x44, 0x10,
	0x06, 0x12, 0x23, 0x0a, 0x1f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f,
	0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c,
	0x45, 0x5f, 0x49, 0x44, 0x10, 0x07, 0x12, 0x1b, 0x0a, 0x17, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f,
	0x41, 0x54, 0x54, 0x52, 0x5f, 0x50, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x10, 0x08, 0x12, 0x1e, 0x0a, 0x1a, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x41, 0x54, 0x54,
	0x52, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x50, 0x46, 0x43, 0x5f, 0x44, 0x4c, 0x44,
	0x52, 0x10, 0x09, 0x12, 0x1b, 0x0a, 0x17, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x41, 0x54, 0x54,
	0x52, 0x5f, 0x50, 0x46, 0x43, 0x5f, 0x44, 0x4c, 0x52, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x10, 0x0a,
	0x12, 0x19, 0x0a, 0x15, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x54,
	0x41, 0x4d, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x0b, 0x32, 0xcb, 0x03, 0x0a, 0x05,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x66, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x12, 0x29, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a,
	0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x29, 0x2e, 0x6c,
	0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x6c, 0x65, 0x6d,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73,
	0x61, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6c, 0x65,
	0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x73, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x78, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2f, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x6c, 0x6f, 0x6e, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dataplane_standalone_proto_queue_proto_rawDescOnce sync.Once
	file_dataplane_standalone_proto_queue_proto_rawDescData = file_dataplane_standalone_proto_queue_proto_rawDesc
)

func file_dataplane_standalone_proto_queue_proto_rawDescGZIP() []byte {
	file_dataplane_standalone_proto_queue_proto_rawDescOnce.Do(func() {
		file_dataplane_standalone_proto_queue_proto_rawDescData = protoimpl.X.CompressGZIP(file_dataplane_standalone_proto_queue_proto_rawDescData)
	})
	return file_dataplane_standalone_proto_queue_proto_rawDescData
}

var file_dataplane_standalone_proto_queue_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dataplane_standalone_proto_queue_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_dataplane_standalone_proto_queue_proto_goTypes = []interface{}{
	(QueueAttr)(0),                    // 0: lemming.dataplane.sai.QueueAttr
	(*CreateQueueRequest)(nil),        // 1: lemming.dataplane.sai.CreateQueueRequest
	(*CreateQueueResponse)(nil),       // 2: lemming.dataplane.sai.CreateQueueResponse
	(*RemoveQueueRequest)(nil),        // 3: lemming.dataplane.sai.RemoveQueueRequest
	(*RemoveQueueResponse)(nil),       // 4: lemming.dataplane.sai.RemoveQueueResponse
	(*SetQueueAttributeRequest)(nil),  // 5: lemming.dataplane.sai.SetQueueAttributeRequest
	(*SetQueueAttributeResponse)(nil), // 6: lemming.dataplane.sai.SetQueueAttributeResponse
	(*GetQueueAttributeRequest)(nil),  // 7: lemming.dataplane.sai.GetQueueAttributeRequest
	(*GetQueueAttributeResponse)(nil), // 8: lemming.dataplane.sai.GetQueueAttributeResponse
	(QueueType)(0),                    // 9: lemming.dataplane.sai.QueueType
	(*Uint64List)(nil),                // 10: lemming.dataplane.sai.Uint64List
	(*QueueAttribute)(nil),            // 11: lemming.dataplane.sai.QueueAttribute
}
var file_dataplane_standalone_proto_queue_proto_depIdxs = []int32{
	9,  // 0: lemming.dataplane.sai.CreateQueueRequest.type:type_name -> lemming.dataplane.sai.QueueType
	10, // 1: lemming.dataplane.sai.SetQueueAttributeRequest.tam_object:type_name -> lemming.dataplane.sai.Uint64List
	0,  // 2: lemming.dataplane.sai.GetQueueAttributeRequest.attr_type:type_name -> lemming.dataplane.sai.QueueAttr
	11, // 3: lemming.dataplane.sai.GetQueueAttributeResponse.attr:type_name -> lemming.dataplane.sai.QueueAttribute
	1,  // 4: lemming.dataplane.sai.Queue.CreateQueue:input_type -> lemming.dataplane.sai.CreateQueueRequest
	3,  // 5: lemming.dataplane.sai.Queue.RemoveQueue:input_type -> lemming.dataplane.sai.RemoveQueueRequest
	5,  // 6: lemming.dataplane.sai.Queue.SetQueueAttribute:input_type -> lemming.dataplane.sai.SetQueueAttributeRequest
	7,  // 7: lemming.dataplane.sai.Queue.GetQueueAttribute:input_type -> lemming.dataplane.sai.GetQueueAttributeRequest
	2,  // 8: lemming.dataplane.sai.Queue.CreateQueue:output_type -> lemming.dataplane.sai.CreateQueueResponse
	4,  // 9: lemming.dataplane.sai.Queue.RemoveQueue:output_type -> lemming.dataplane.sai.RemoveQueueResponse
	6,  // 10: lemming.dataplane.sai.Queue.SetQueueAttribute:output_type -> lemming.dataplane.sai.SetQueueAttributeResponse
	8,  // 11: lemming.dataplane.sai.Queue.GetQueueAttribute:output_type -> lemming.dataplane.sai.GetQueueAttributeResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_dataplane_standalone_proto_queue_proto_init() }
func file_dataplane_standalone_proto_queue_proto_init() {
	if File_dataplane_standalone_proto_queue_proto != nil {
		return
	}
	file_dataplane_standalone_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dataplane_standalone_proto_queue_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_queue_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_queue_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_queue_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_queue_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetQueueAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_queue_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetQueueAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_queue_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueueAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_queue_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueueAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dataplane_standalone_proto_queue_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*SetQueueAttributeRequest_ParentSchedulerNode)(nil),
		(*SetQueueAttributeRequest_WredProfileId)(nil),
		(*SetQueueAttributeRequest_BufferProfileId)(nil),
		(*SetQueueAttributeRequest_SchedulerProfileId)(nil),
		(*SetQueueAttributeRequest_EnablePfcDldr)(nil),
		(*SetQueueAttributeRequest_PfcDlrInit)(nil),
		(*SetQueueAttributeRequest_TamObject)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dataplane_standalone_proto_queue_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dataplane_standalone_proto_queue_proto_goTypes,
		DependencyIndexes: file_dataplane_standalone_proto_queue_proto_depIdxs,
		EnumInfos:         file_dataplane_standalone_proto_queue_proto_enumTypes,
		MessageInfos:      file_dataplane_standalone_proto_queue_proto_msgTypes,
	}.Build()
	File_dataplane_standalone_proto_queue_proto = out.File
	file_dataplane_standalone_proto_queue_proto_rawDesc = nil
	file_dataplane_standalone_proto_queue_proto_goTypes = nil
	file_dataplane_standalone_proto_queue_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// QueueClient is the client API for Queue service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueueClient interface {
	CreateQueue(ctx context.Context, in *CreateQueueRequest, opts ...grpc.CallOption) (*CreateQueueResponse, error)
	RemoveQueue(ctx context.Context, in *RemoveQueueRequest, opts ...grpc.CallOption) (*RemoveQueueResponse, error)
	SetQueueAttribute(ctx context.Context, in *SetQueueAttributeRequest, opts ...grpc.CallOption) (*SetQueueAttributeResponse, error)
	GetQueueAttribute(ctx context.Context, in *GetQueueAttributeRequest, opts ...grpc.CallOption) (*GetQueueAttributeResponse, error)
}

type queueClient struct {
	cc grpc.ClientConnInterface
}

func NewQueueClient(cc grpc.ClientConnInterface) QueueClient {
	return &queueClient{cc}
}

func (c *queueClient) CreateQueue(ctx context.Context, in *CreateQueueRequest, opts ...grpc.CallOption) (*CreateQueueResponse, error) {
	out := new(CreateQueueResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Queue/CreateQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queueClient) RemoveQueue(ctx context.Context, in *RemoveQueueRequest, opts ...grpc.CallOption) (*RemoveQueueResponse, error) {
	out := new(RemoveQueueResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Queue/RemoveQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queueClient) SetQueueAttribute(ctx context.Context, in *SetQueueAttributeRequest, opts ...grpc.CallOption) (*SetQueueAttributeResponse, error) {
	out := new(SetQueueAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Queue/SetQueueAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queueClient) GetQueueAttribute(ctx context.Context, in *GetQueueAttributeRequest, opts ...grpc.CallOption) (*GetQueueAttributeResponse, error) {
	out := new(GetQueueAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Queue/GetQueueAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueueServer is the server API for Queue service.
type QueueServer interface {
	CreateQueue(context.Context, *CreateQueueRequest) (*CreateQueueResponse, error)
	RemoveQueue(context.Context, *RemoveQueueRequest) (*RemoveQueueResponse, error)
	SetQueueAttribute(context.Context, *SetQueueAttributeRequest) (*SetQueueAttributeResponse, error)
	GetQueueAttribute(context.Context, *GetQueueAttributeRequest) (*GetQueueAttributeResponse, error)
}

// UnimplementedQueueServer can be embedded to have forward compatible implementations.
type UnimplementedQueueServer struct {
}

func (*UnimplementedQueueServer) CreateQueue(context.Context, *CreateQueueRequest) (*CreateQueueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateQueue not implemented")
}
func (*UnimplementedQueueServer) RemoveQueue(context.Context, *RemoveQueueRequest) (*RemoveQueueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveQueue not implemented")
}
func (*UnimplementedQueueServer) SetQueueAttribute(context.Context, *SetQueueAttributeRequest) (*SetQueueAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetQueueAttribute not implemented")
}
func (*UnimplementedQueueServer) GetQueueAttribute(context.Context, *GetQueueAttributeRequest) (*GetQueueAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQueueAttribute not implemented")
}

func RegisterQueueServer(s *grpc.Server, srv QueueServer) {
	s.RegisterService(&_Queue_serviceDesc, srv)
}

func _Queue_CreateQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServer).CreateQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Queue/CreateQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServer).CreateQueue(ctx, req.(*CreateQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Queue_RemoveQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServer).RemoveQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Queue/RemoveQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServer).RemoveQueue(ctx, req.(*RemoveQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Queue_SetQueueAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetQueueAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServer).SetQueueAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Queue/SetQueueAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServer).SetQueueAttribute(ctx, req.(*SetQueueAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Queue_GetQueueAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQueueAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServer).GetQueueAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Queue/GetQueueAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServer).GetQueueAttribute(ctx, req.(*GetQueueAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Queue_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lemming.dataplane.sai.Queue",
	HandlerType: (*QueueServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateQueue",
			Handler:    _Queue_CreateQueue_Handler,
		},
		{
			MethodName: "RemoveQueue",
			Handler:    _Queue_RemoveQueue_Handler,
		},
		{
			MethodName: "SetQueueAttribute",
			Handler:    _Queue_SetQueueAttribute_Handler,
		},
		{
			MethodName: "GetQueueAttribute",
			Handler:    _Queue_GetQueueAttribute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dataplane/standalone/proto/queue.proto",
}
