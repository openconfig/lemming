// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: dataplane/standalone/proto/stp.proto

package sai

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StpAttr int32

const (
	StpAttr_STP_ATTR_UNSPECIFIED StpAttr = 0
	StpAttr_STP_ATTR_VLAN_LIST   StpAttr = 1
	StpAttr_STP_ATTR_BRIDGE_ID   StpAttr = 2
	StpAttr_STP_ATTR_PORT_LIST   StpAttr = 3
)

// Enum value maps for StpAttr.
var (
	StpAttr_name = map[int32]string{
		0: "STP_ATTR_UNSPECIFIED",
		1: "STP_ATTR_VLAN_LIST",
		2: "STP_ATTR_BRIDGE_ID",
		3: "STP_ATTR_PORT_LIST",
	}
	StpAttr_value = map[string]int32{
		"STP_ATTR_UNSPECIFIED": 0,
		"STP_ATTR_VLAN_LIST":   1,
		"STP_ATTR_BRIDGE_ID":   2,
		"STP_ATTR_PORT_LIST":   3,
	}
)

func (x StpAttr) Enum() *StpAttr {
	p := new(StpAttr)
	*p = x
	return p
}

func (x StpAttr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StpAttr) Descriptor() protoreflect.EnumDescriptor {
	return file_dataplane_standalone_proto_stp_proto_enumTypes[0].Descriptor()
}

func (StpAttr) Type() protoreflect.EnumType {
	return &file_dataplane_standalone_proto_stp_proto_enumTypes[0]
}

func (x StpAttr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StpAttr.Descriptor instead.
func (StpAttr) EnumDescriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_stp_proto_rawDescGZIP(), []int{0}
}

type StpPortAttr int32

const (
	StpPortAttr_STP_PORT_ATTR_UNSPECIFIED StpPortAttr = 0
	StpPortAttr_STP_PORT_ATTR_STP         StpPortAttr = 1
	StpPortAttr_STP_PORT_ATTR_BRIDGE_PORT StpPortAttr = 2
	StpPortAttr_STP_PORT_ATTR_STATE       StpPortAttr = 3
)

// Enum value maps for StpPortAttr.
var (
	StpPortAttr_name = map[int32]string{
		0: "STP_PORT_ATTR_UNSPECIFIED",
		1: "STP_PORT_ATTR_STP",
		2: "STP_PORT_ATTR_BRIDGE_PORT",
		3: "STP_PORT_ATTR_STATE",
	}
	StpPortAttr_value = map[string]int32{
		"STP_PORT_ATTR_UNSPECIFIED": 0,
		"STP_PORT_ATTR_STP":         1,
		"STP_PORT_ATTR_BRIDGE_PORT": 2,
		"STP_PORT_ATTR_STATE":       3,
	}
)

func (x StpPortAttr) Enum() *StpPortAttr {
	p := new(StpPortAttr)
	*p = x
	return p
}

func (x StpPortAttr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StpPortAttr) Descriptor() protoreflect.EnumDescriptor {
	return file_dataplane_standalone_proto_stp_proto_enumTypes[1].Descriptor()
}

func (StpPortAttr) Type() protoreflect.EnumType {
	return &file_dataplane_standalone_proto_stp_proto_enumTypes[1]
}

func (x StpPortAttr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StpPortAttr.Descriptor instead.
func (StpPortAttr) EnumDescriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_stp_proto_rawDescGZIP(), []int{1}
}

type CreateStpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Switch uint64 `protobuf:"varint,1,opt,name=switch,proto3" json:"switch,omitempty"`
}

func (x *CreateStpRequest) Reset() {
	*x = CreateStpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStpRequest) ProtoMessage() {}

func (x *CreateStpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStpRequest.ProtoReflect.Descriptor instead.
func (*CreateStpRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_stp_proto_rawDescGZIP(), []int{0}
}

func (x *CreateStpRequest) GetSwitch() uint64 {
	if x != nil {
		return x.Switch
	}
	return 0
}

type CreateStpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *CreateStpResponse) Reset() {
	*x = CreateStpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStpResponse) ProtoMessage() {}

func (x *CreateStpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStpResponse.ProtoReflect.Descriptor instead.
func (*CreateStpResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_stp_proto_rawDescGZIP(), []int{1}
}

func (x *CreateStpResponse) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type RemoveStpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *RemoveStpRequest) Reset() {
	*x = RemoveStpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStpRequest) ProtoMessage() {}

func (x *RemoveStpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStpRequest.ProtoReflect.Descriptor instead.
func (*RemoveStpRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_stp_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveStpRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type RemoveStpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveStpResponse) Reset() {
	*x = RemoveStpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStpResponse) ProtoMessage() {}

func (x *RemoveStpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStpResponse.ProtoReflect.Descriptor instead.
func (*RemoveStpResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_stp_proto_rawDescGZIP(), []int{3}
}

type GetStpAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid      uint64    `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	AttrType []StpAttr `protobuf:"varint,2,rep,packed,name=attr_type,json=attrType,proto3,enum=lemming.dataplane.sai.StpAttr" json:"attr_type,omitempty"`
}

func (x *GetStpAttributeRequest) Reset() {
	*x = GetStpAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStpAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStpAttributeRequest) ProtoMessage() {}

func (x *GetStpAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStpAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetStpAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_stp_proto_rawDescGZIP(), []int{4}
}

func (x *GetStpAttributeRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *GetStpAttributeRequest) GetAttrType() []StpAttr {
	if x != nil {
		return x.AttrType
	}
	return nil
}

type GetStpAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr *StpAttribute `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr,omitempty"`
}

func (x *GetStpAttributeResponse) Reset() {
	*x = GetStpAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStpAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStpAttributeResponse) ProtoMessage() {}

func (x *GetStpAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStpAttributeResponse.ProtoReflect.Descriptor instead.
func (*GetStpAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_stp_proto_rawDescGZIP(), []int{5}
}

func (x *GetStpAttributeResponse) GetAttr() *StpAttribute {
	if x != nil {
		return x.Attr
	}
	return nil
}

type CreateStpPortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Switch     uint64        `protobuf:"varint,1,opt,name=switch,proto3" json:"switch,omitempty"`
	Stp        *uint64       `protobuf:"varint,2,opt,name=stp,proto3,oneof" json:"stp,omitempty"`
	BridgePort *uint64       `protobuf:"varint,3,opt,name=bridge_port,json=bridgePort,proto3,oneof" json:"bridge_port,omitempty"`
	State      *StpPortState `protobuf:"varint,4,opt,name=state,proto3,enum=lemming.dataplane.sai.StpPortState,oneof" json:"state,omitempty"`
}

func (x *CreateStpPortRequest) Reset() {
	*x = CreateStpPortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStpPortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStpPortRequest) ProtoMessage() {}

func (x *CreateStpPortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStpPortRequest.ProtoReflect.Descriptor instead.
func (*CreateStpPortRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_stp_proto_rawDescGZIP(), []int{6}
}

func (x *CreateStpPortRequest) GetSwitch() uint64 {
	if x != nil {
		return x.Switch
	}
	return 0
}

func (x *CreateStpPortRequest) GetStp() uint64 {
	if x != nil && x.Stp != nil {
		return *x.Stp
	}
	return 0
}

func (x *CreateStpPortRequest) GetBridgePort() uint64 {
	if x != nil && x.BridgePort != nil {
		return *x.BridgePort
	}
	return 0
}

func (x *CreateStpPortRequest) GetState() StpPortState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return StpPortState_STP_PORT_STATE_UNSPECIFIED
}

type CreateStpPortResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *CreateStpPortResponse) Reset() {
	*x = CreateStpPortResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStpPortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStpPortResponse) ProtoMessage() {}

func (x *CreateStpPortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStpPortResponse.ProtoReflect.Descriptor instead.
func (*CreateStpPortResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_stp_proto_rawDescGZIP(), []int{7}
}

func (x *CreateStpPortResponse) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type RemoveStpPortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *RemoveStpPortRequest) Reset() {
	*x = RemoveStpPortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStpPortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStpPortRequest) ProtoMessage() {}

func (x *RemoveStpPortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStpPortRequest.ProtoReflect.Descriptor instead.
func (*RemoveStpPortRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_stp_proto_rawDescGZIP(), []int{8}
}

func (x *RemoveStpPortRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type RemoveStpPortResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveStpPortResponse) Reset() {
	*x = RemoveStpPortResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStpPortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStpPortResponse) ProtoMessage() {}

func (x *RemoveStpPortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStpPortResponse.ProtoReflect.Descriptor instead.
func (*RemoveStpPortResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_stp_proto_rawDescGZIP(), []int{9}
}

type SetStpPortAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid   uint64        `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	State *StpPortState `protobuf:"varint,2,opt,name=state,proto3,enum=lemming.dataplane.sai.StpPortState,oneof" json:"state,omitempty"`
}

func (x *SetStpPortAttributeRequest) Reset() {
	*x = SetStpPortAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStpPortAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStpPortAttributeRequest) ProtoMessage() {}

func (x *SetStpPortAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStpPortAttributeRequest.ProtoReflect.Descriptor instead.
func (*SetStpPortAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_stp_proto_rawDescGZIP(), []int{10}
}

func (x *SetStpPortAttributeRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *SetStpPortAttributeRequest) GetState() StpPortState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return StpPortState_STP_PORT_STATE_UNSPECIFIED
}

type SetStpPortAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetStpPortAttributeResponse) Reset() {
	*x = SetStpPortAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStpPortAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStpPortAttributeResponse) ProtoMessage() {}

func (x *SetStpPortAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStpPortAttributeResponse.ProtoReflect.Descriptor instead.
func (*SetStpPortAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_stp_proto_rawDescGZIP(), []int{11}
}

type GetStpPortAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid      uint64        `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	AttrType []StpPortAttr `protobuf:"varint,2,rep,packed,name=attr_type,json=attrType,proto3,enum=lemming.dataplane.sai.StpPortAttr" json:"attr_type,omitempty"`
}

func (x *GetStpPortAttributeRequest) Reset() {
	*x = GetStpPortAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStpPortAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStpPortAttributeRequest) ProtoMessage() {}

func (x *GetStpPortAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStpPortAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetStpPortAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_stp_proto_rawDescGZIP(), []int{12}
}

func (x *GetStpPortAttributeRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *GetStpPortAttributeRequest) GetAttrType() []StpPortAttr {
	if x != nil {
		return x.AttrType
	}
	return nil
}

type GetStpPortAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr *StpPortAttribute `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr,omitempty"`
}

func (x *GetStpPortAttributeResponse) Reset() {
	*x = GetStpPortAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStpPortAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStpPortAttributeResponse) ProtoMessage() {}

func (x *GetStpPortAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStpPortAttributeResponse.ProtoReflect.Descriptor instead.
func (*GetStpPortAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_stp_proto_rawDescGZIP(), []int{13}
}

func (x *GetStpPortAttributeResponse) GetAttr() *StpPortAttribute {
	if x != nil {
		return x.Attr
	}
	return nil
}

type CreateStpPortsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reqs []*CreateStpPortRequest `protobuf:"bytes,1,rep,name=reqs,proto3" json:"reqs,omitempty"`
}

func (x *CreateStpPortsRequest) Reset() {
	*x = CreateStpPortsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStpPortsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStpPortsRequest) ProtoMessage() {}

func (x *CreateStpPortsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStpPortsRequest.ProtoReflect.Descriptor instead.
func (*CreateStpPortsRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_stp_proto_rawDescGZIP(), []int{14}
}

func (x *CreateStpPortsRequest) GetReqs() []*CreateStpPortRequest {
	if x != nil {
		return x.Reqs
	}
	return nil
}

type CreateStpPortsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resps []*CreateStpPortResponse `protobuf:"bytes,1,rep,name=resps,proto3" json:"resps,omitempty"`
}

func (x *CreateStpPortsResponse) Reset() {
	*x = CreateStpPortsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStpPortsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStpPortsResponse) ProtoMessage() {}

func (x *CreateStpPortsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_standalone_proto_stp_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStpPortsResponse.ProtoReflect.Descriptor instead.
func (*CreateStpPortsResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_standalone_proto_stp_proto_rawDescGZIP(), []int{15}
}

func (x *CreateStpPortsResponse) GetResps() []*CreateStpPortResponse {
	if x != nil {
		return x.Resps
	}
	return nil
}

var File_dataplane_standalone_proto_stp_proto protoreflect.FileDescriptor

var file_dataplane_standalone_proto_stp_proto_rawDesc = []byte{
	0x0a, 0x24, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x6c, 0x6f, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x1a, 0x27, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x6c,
	0x6f, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x3a, 0x04, 0x88, 0xb5, 0x18, 0x11, 0x22, 0x25, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22,
	0x24, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6c, 0x65, 0x6d, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61,
	0x69, 0x2e, 0x53, 0x74, 0x70, 0x41, 0x74, 0x74, 0x72, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x52, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x74, 0x70, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c,
	0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x73, 0x61, 0x69, 0x2e, 0x53, 0x74, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x22, 0xe5, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x03, 0x73, 0x74, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x48, 0x00, 0x52, 0x03, 0x73,
	0x74, 0x70, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0b, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x02,
	0x48, 0x01, 0x52, 0x0a, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x44, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x23, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x03, 0x48, 0x02, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x3a, 0x04, 0x88, 0xb5, 0x18, 0x2f, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x73, 0x74, 0x70, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x29, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x14, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x6f, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74,
	0x70, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7e, 0x0a,
	0x1a, 0x53, 0x65, 0x74, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x44, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6c,
	0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x73, 0x61, 0x69, 0x2e, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x03, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x1d, 0x0a,
	0x1b, 0x53, 0x65, 0x74, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x3f, 0x0a, 0x09,
	0x61, 0x74, 0x74, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5a, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x04,
	0x61, 0x74, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x65, 0x6d,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73,
	0x61, 0x69, 0x2e, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x22, 0x58, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3f, 0x0a, 0x04, 0x72, 0x65, 0x71, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x72,
	0x65, 0x71, 0x73, 0x22, 0x5c, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x70,
	0x50, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x05, 0x72, 0x65, 0x73, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c,
	0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x70, 0x50, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x72, 0x65, 0x73, 0x70,
	0x73, 0x2a, 0x6b, 0x0a, 0x07, 0x53, 0x74, 0x70, 0x41, 0x74, 0x74, 0x72, 0x12, 0x18, 0x0a, 0x14,
	0x53, 0x54, 0x50, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x50, 0x5f, 0x41, 0x54,
	0x54, 0x52, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x53, 0x54, 0x50, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x42, 0x52, 0x49, 0x44, 0x47,
	0x45, 0x5f, 0x49, 0x44, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x50, 0x5f, 0x41, 0x54,
	0x54, 0x52, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x03, 0x2a, 0x7b,
	0x0a, 0x0b, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x1d, 0x0a,
	0x19, 0x53, 0x54, 0x50, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x53, 0x54, 0x50, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x53, 0x54,
	0x50, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x54, 0x50, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f,
	0x41, 0x54, 0x54, 0x52, 0x5f, 0x42, 0x52, 0x49, 0x44, 0x47, 0x45, 0x5f, 0x50, 0x4f, 0x52, 0x54,
	0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x50, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x41,
	0x54, 0x54, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x03, 0x32, 0x8a, 0x07, 0x0a, 0x03,
	0x53, 0x74, 0x70, 0x12, 0x60, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x70,
	0x12, 0x27, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6c, 0x65, 0x6d, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61,
	0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x74, 0x70, 0x12, 0x27, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x53, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6c, 0x65,
	0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x73, 0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x6c, 0x65, 0x6d,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73,
	0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6c, 0x65, 0x6d, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x2b, 0x2e, 0x6c,
	0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x70, 0x50, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6c, 0x65, 0x6d, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61,
	0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0d, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x2b, 0x2e, 0x6c, 0x65, 0x6d,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73,
	0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x53, 0x74,
	0x70, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x31,
	0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x70,
	0x50, 0x6f, 0x72, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x70, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x31,
	0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x70,
	0x50, 0x6f, 0x72, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x2c, 0x2e, 0x6c, 0x65, 0x6d, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61,
	0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2f, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x6c, 0x6f, 0x6e, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x73, 0x61, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dataplane_standalone_proto_stp_proto_rawDescOnce sync.Once
	file_dataplane_standalone_proto_stp_proto_rawDescData = file_dataplane_standalone_proto_stp_proto_rawDesc
)

func file_dataplane_standalone_proto_stp_proto_rawDescGZIP() []byte {
	file_dataplane_standalone_proto_stp_proto_rawDescOnce.Do(func() {
		file_dataplane_standalone_proto_stp_proto_rawDescData = protoimpl.X.CompressGZIP(file_dataplane_standalone_proto_stp_proto_rawDescData)
	})
	return file_dataplane_standalone_proto_stp_proto_rawDescData
}

var file_dataplane_standalone_proto_stp_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_dataplane_standalone_proto_stp_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_dataplane_standalone_proto_stp_proto_goTypes = []interface{}{
	(StpAttr)(0),                        // 0: lemming.dataplane.sai.StpAttr
	(StpPortAttr)(0),                    // 1: lemming.dataplane.sai.StpPortAttr
	(*CreateStpRequest)(nil),            // 2: lemming.dataplane.sai.CreateStpRequest
	(*CreateStpResponse)(nil),           // 3: lemming.dataplane.sai.CreateStpResponse
	(*RemoveStpRequest)(nil),            // 4: lemming.dataplane.sai.RemoveStpRequest
	(*RemoveStpResponse)(nil),           // 5: lemming.dataplane.sai.RemoveStpResponse
	(*GetStpAttributeRequest)(nil),      // 6: lemming.dataplane.sai.GetStpAttributeRequest
	(*GetStpAttributeResponse)(nil),     // 7: lemming.dataplane.sai.GetStpAttributeResponse
	(*CreateStpPortRequest)(nil),        // 8: lemming.dataplane.sai.CreateStpPortRequest
	(*CreateStpPortResponse)(nil),       // 9: lemming.dataplane.sai.CreateStpPortResponse
	(*RemoveStpPortRequest)(nil),        // 10: lemming.dataplane.sai.RemoveStpPortRequest
	(*RemoveStpPortResponse)(nil),       // 11: lemming.dataplane.sai.RemoveStpPortResponse
	(*SetStpPortAttributeRequest)(nil),  // 12: lemming.dataplane.sai.SetStpPortAttributeRequest
	(*SetStpPortAttributeResponse)(nil), // 13: lemming.dataplane.sai.SetStpPortAttributeResponse
	(*GetStpPortAttributeRequest)(nil),  // 14: lemming.dataplane.sai.GetStpPortAttributeRequest
	(*GetStpPortAttributeResponse)(nil), // 15: lemming.dataplane.sai.GetStpPortAttributeResponse
	(*CreateStpPortsRequest)(nil),       // 16: lemming.dataplane.sai.CreateStpPortsRequest
	(*CreateStpPortsResponse)(nil),      // 17: lemming.dataplane.sai.CreateStpPortsResponse
	(*StpAttribute)(nil),                // 18: lemming.dataplane.sai.StpAttribute
	(StpPortState)(0),                   // 19: lemming.dataplane.sai.StpPortState
	(*StpPortAttribute)(nil),            // 20: lemming.dataplane.sai.StpPortAttribute
}
var file_dataplane_standalone_proto_stp_proto_depIdxs = []int32{
	0,  // 0: lemming.dataplane.sai.GetStpAttributeRequest.attr_type:type_name -> lemming.dataplane.sai.StpAttr
	18, // 1: lemming.dataplane.sai.GetStpAttributeResponse.attr:type_name -> lemming.dataplane.sai.StpAttribute
	19, // 2: lemming.dataplane.sai.CreateStpPortRequest.state:type_name -> lemming.dataplane.sai.StpPortState
	19, // 3: lemming.dataplane.sai.SetStpPortAttributeRequest.state:type_name -> lemming.dataplane.sai.StpPortState
	1,  // 4: lemming.dataplane.sai.GetStpPortAttributeRequest.attr_type:type_name -> lemming.dataplane.sai.StpPortAttr
	20, // 5: lemming.dataplane.sai.GetStpPortAttributeResponse.attr:type_name -> lemming.dataplane.sai.StpPortAttribute
	8,  // 6: lemming.dataplane.sai.CreateStpPortsRequest.reqs:type_name -> lemming.dataplane.sai.CreateStpPortRequest
	9,  // 7: lemming.dataplane.sai.CreateStpPortsResponse.resps:type_name -> lemming.dataplane.sai.CreateStpPortResponse
	2,  // 8: lemming.dataplane.sai.Stp.CreateStp:input_type -> lemming.dataplane.sai.CreateStpRequest
	4,  // 9: lemming.dataplane.sai.Stp.RemoveStp:input_type -> lemming.dataplane.sai.RemoveStpRequest
	6,  // 10: lemming.dataplane.sai.Stp.GetStpAttribute:input_type -> lemming.dataplane.sai.GetStpAttributeRequest
	8,  // 11: lemming.dataplane.sai.Stp.CreateStpPort:input_type -> lemming.dataplane.sai.CreateStpPortRequest
	10, // 12: lemming.dataplane.sai.Stp.RemoveStpPort:input_type -> lemming.dataplane.sai.RemoveStpPortRequest
	12, // 13: lemming.dataplane.sai.Stp.SetStpPortAttribute:input_type -> lemming.dataplane.sai.SetStpPortAttributeRequest
	14, // 14: lemming.dataplane.sai.Stp.GetStpPortAttribute:input_type -> lemming.dataplane.sai.GetStpPortAttributeRequest
	16, // 15: lemming.dataplane.sai.Stp.CreateStpPorts:input_type -> lemming.dataplane.sai.CreateStpPortsRequest
	3,  // 16: lemming.dataplane.sai.Stp.CreateStp:output_type -> lemming.dataplane.sai.CreateStpResponse
	5,  // 17: lemming.dataplane.sai.Stp.RemoveStp:output_type -> lemming.dataplane.sai.RemoveStpResponse
	7,  // 18: lemming.dataplane.sai.Stp.GetStpAttribute:output_type -> lemming.dataplane.sai.GetStpAttributeResponse
	9,  // 19: lemming.dataplane.sai.Stp.CreateStpPort:output_type -> lemming.dataplane.sai.CreateStpPortResponse
	11, // 20: lemming.dataplane.sai.Stp.RemoveStpPort:output_type -> lemming.dataplane.sai.RemoveStpPortResponse
	13, // 21: lemming.dataplane.sai.Stp.SetStpPortAttribute:output_type -> lemming.dataplane.sai.SetStpPortAttributeResponse
	15, // 22: lemming.dataplane.sai.Stp.GetStpPortAttribute:output_type -> lemming.dataplane.sai.GetStpPortAttributeResponse
	17, // 23: lemming.dataplane.sai.Stp.CreateStpPorts:output_type -> lemming.dataplane.sai.CreateStpPortsResponse
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_dataplane_standalone_proto_stp_proto_init() }
func file_dataplane_standalone_proto_stp_proto_init() {
	if File_dataplane_standalone_proto_stp_proto != nil {
		return
	}
	file_dataplane_standalone_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dataplane_standalone_proto_stp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_stp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_stp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_stp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_stp_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStpAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_stp_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStpAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_stp_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStpPortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_stp_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStpPortResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_stp_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStpPortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_stp_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStpPortResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_stp_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStpPortAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_stp_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStpPortAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_stp_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStpPortAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_stp_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStpPortAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_stp_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStpPortsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_standalone_proto_stp_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStpPortsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dataplane_standalone_proto_stp_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_dataplane_standalone_proto_stp_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dataplane_standalone_proto_stp_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dataplane_standalone_proto_stp_proto_goTypes,
		DependencyIndexes: file_dataplane_standalone_proto_stp_proto_depIdxs,
		EnumInfos:         file_dataplane_standalone_proto_stp_proto_enumTypes,
		MessageInfos:      file_dataplane_standalone_proto_stp_proto_msgTypes,
	}.Build()
	File_dataplane_standalone_proto_stp_proto = out.File
	file_dataplane_standalone_proto_stp_proto_rawDesc = nil
	file_dataplane_standalone_proto_stp_proto_goTypes = nil
	file_dataplane_standalone_proto_stp_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StpClient is the client API for Stp service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StpClient interface {
	CreateStp(ctx context.Context, in *CreateStpRequest, opts ...grpc.CallOption) (*CreateStpResponse, error)
	RemoveStp(ctx context.Context, in *RemoveStpRequest, opts ...grpc.CallOption) (*RemoveStpResponse, error)
	GetStpAttribute(ctx context.Context, in *GetStpAttributeRequest, opts ...grpc.CallOption) (*GetStpAttributeResponse, error)
	CreateStpPort(ctx context.Context, in *CreateStpPortRequest, opts ...grpc.CallOption) (*CreateStpPortResponse, error)
	RemoveStpPort(ctx context.Context, in *RemoveStpPortRequest, opts ...grpc.CallOption) (*RemoveStpPortResponse, error)
	SetStpPortAttribute(ctx context.Context, in *SetStpPortAttributeRequest, opts ...grpc.CallOption) (*SetStpPortAttributeResponse, error)
	GetStpPortAttribute(ctx context.Context, in *GetStpPortAttributeRequest, opts ...grpc.CallOption) (*GetStpPortAttributeResponse, error)
	CreateStpPorts(ctx context.Context, in *CreateStpPortsRequest, opts ...grpc.CallOption) (*CreateStpPortsResponse, error)
}

type stpClient struct {
	cc grpc.ClientConnInterface
}

func NewStpClient(cc grpc.ClientConnInterface) StpClient {
	return &stpClient{cc}
}

func (c *stpClient) CreateStp(ctx context.Context, in *CreateStpRequest, opts ...grpc.CallOption) (*CreateStpResponse, error) {
	out := new(CreateStpResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Stp/CreateStp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stpClient) RemoveStp(ctx context.Context, in *RemoveStpRequest, opts ...grpc.CallOption) (*RemoveStpResponse, error) {
	out := new(RemoveStpResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Stp/RemoveStp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stpClient) GetStpAttribute(ctx context.Context, in *GetStpAttributeRequest, opts ...grpc.CallOption) (*GetStpAttributeResponse, error) {
	out := new(GetStpAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Stp/GetStpAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stpClient) CreateStpPort(ctx context.Context, in *CreateStpPortRequest, opts ...grpc.CallOption) (*CreateStpPortResponse, error) {
	out := new(CreateStpPortResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Stp/CreateStpPort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stpClient) RemoveStpPort(ctx context.Context, in *RemoveStpPortRequest, opts ...grpc.CallOption) (*RemoveStpPortResponse, error) {
	out := new(RemoveStpPortResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Stp/RemoveStpPort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stpClient) SetStpPortAttribute(ctx context.Context, in *SetStpPortAttributeRequest, opts ...grpc.CallOption) (*SetStpPortAttributeResponse, error) {
	out := new(SetStpPortAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Stp/SetStpPortAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stpClient) GetStpPortAttribute(ctx context.Context, in *GetStpPortAttributeRequest, opts ...grpc.CallOption) (*GetStpPortAttributeResponse, error) {
	out := new(GetStpPortAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Stp/GetStpPortAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stpClient) CreateStpPorts(ctx context.Context, in *CreateStpPortsRequest, opts ...grpc.CallOption) (*CreateStpPortsResponse, error) {
	out := new(CreateStpPortsResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Stp/CreateStpPorts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StpServer is the server API for Stp service.
type StpServer interface {
	CreateStp(context.Context, *CreateStpRequest) (*CreateStpResponse, error)
	RemoveStp(context.Context, *RemoveStpRequest) (*RemoveStpResponse, error)
	GetStpAttribute(context.Context, *GetStpAttributeRequest) (*GetStpAttributeResponse, error)
	CreateStpPort(context.Context, *CreateStpPortRequest) (*CreateStpPortResponse, error)
	RemoveStpPort(context.Context, *RemoveStpPortRequest) (*RemoveStpPortResponse, error)
	SetStpPortAttribute(context.Context, *SetStpPortAttributeRequest) (*SetStpPortAttributeResponse, error)
	GetStpPortAttribute(context.Context, *GetStpPortAttributeRequest) (*GetStpPortAttributeResponse, error)
	CreateStpPorts(context.Context, *CreateStpPortsRequest) (*CreateStpPortsResponse, error)
}

// UnimplementedStpServer can be embedded to have forward compatible implementations.
type UnimplementedStpServer struct {
}

func (*UnimplementedStpServer) CreateStp(context.Context, *CreateStpRequest) (*CreateStpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStp not implemented")
}
func (*UnimplementedStpServer) RemoveStp(context.Context, *RemoveStpRequest) (*RemoveStpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveStp not implemented")
}
func (*UnimplementedStpServer) GetStpAttribute(context.Context, *GetStpAttributeRequest) (*GetStpAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStpAttribute not implemented")
}
func (*UnimplementedStpServer) CreateStpPort(context.Context, *CreateStpPortRequest) (*CreateStpPortResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStpPort not implemented")
}
func (*UnimplementedStpServer) RemoveStpPort(context.Context, *RemoveStpPortRequest) (*RemoveStpPortResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveStpPort not implemented")
}
func (*UnimplementedStpServer) SetStpPortAttribute(context.Context, *SetStpPortAttributeRequest) (*SetStpPortAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetStpPortAttribute not implemented")
}
func (*UnimplementedStpServer) GetStpPortAttribute(context.Context, *GetStpPortAttributeRequest) (*GetStpPortAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStpPortAttribute not implemented")
}
func (*UnimplementedStpServer) CreateStpPorts(context.Context, *CreateStpPortsRequest) (*CreateStpPortsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStpPorts not implemented")
}

func RegisterStpServer(s *grpc.Server, srv StpServer) {
	s.RegisterService(&_Stp_serviceDesc, srv)
}

func _Stp_CreateStp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StpServer).CreateStp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Stp/CreateStp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StpServer).CreateStp(ctx, req.(*CreateStpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stp_RemoveStp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveStpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StpServer).RemoveStp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Stp/RemoveStp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StpServer).RemoveStp(ctx, req.(*RemoveStpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stp_GetStpAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStpAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StpServer).GetStpAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Stp/GetStpAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StpServer).GetStpAttribute(ctx, req.(*GetStpAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stp_CreateStpPort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStpPortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StpServer).CreateStpPort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Stp/CreateStpPort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StpServer).CreateStpPort(ctx, req.(*CreateStpPortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stp_RemoveStpPort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveStpPortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StpServer).RemoveStpPort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Stp/RemoveStpPort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StpServer).RemoveStpPort(ctx, req.(*RemoveStpPortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stp_SetStpPortAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetStpPortAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StpServer).SetStpPortAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Stp/SetStpPortAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StpServer).SetStpPortAttribute(ctx, req.(*SetStpPortAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stp_GetStpPortAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStpPortAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StpServer).GetStpPortAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Stp/GetStpPortAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StpServer).GetStpPortAttribute(ctx, req.(*GetStpPortAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stp_CreateStpPorts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStpPortsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StpServer).CreateStpPorts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Stp/CreateStpPorts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StpServer).CreateStpPorts(ctx, req.(*CreateStpPortsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Stp_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lemming.dataplane.sai.Stp",
	HandlerType: (*StpServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateStp",
			Handler:    _Stp_CreateStp_Handler,
		},
		{
			MethodName: "RemoveStp",
			Handler:    _Stp_RemoveStp_Handler,
		},
		{
			MethodName: "GetStpAttribute",
			Handler:    _Stp_GetStpAttribute_Handler,
		},
		{
			MethodName: "CreateStpPort",
			Handler:    _Stp_CreateStpPort_Handler,
		},
		{
			MethodName: "RemoveStpPort",
			Handler:    _Stp_RemoveStpPort_Handler,
		},
		{
			MethodName: "SetStpPortAttribute",
			Handler:    _Stp_SetStpPortAttribute_Handler,
		},
		{
			MethodName: "GetStpPortAttribute",
			Handler:    _Stp_GetStpPortAttribute_Handler,
		},
		{
			MethodName: "CreateStpPorts",
			Handler:    _Stp_CreateStpPorts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dataplane/standalone/proto/stp.proto",
}
