// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.3
// source: dataplane/proto/sai/ipmc_group.proto

package sai

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	IpmcGroup_CreateIpmcGroup_FullMethodName             = "/lemming.dataplane.sai.IpmcGroup/CreateIpmcGroup"
	IpmcGroup_RemoveIpmcGroup_FullMethodName             = "/lemming.dataplane.sai.IpmcGroup/RemoveIpmcGroup"
	IpmcGroup_GetIpmcGroupAttribute_FullMethodName       = "/lemming.dataplane.sai.IpmcGroup/GetIpmcGroupAttribute"
	IpmcGroup_CreateIpmcGroupMember_FullMethodName       = "/lemming.dataplane.sai.IpmcGroup/CreateIpmcGroupMember"
	IpmcGroup_RemoveIpmcGroupMember_FullMethodName       = "/lemming.dataplane.sai.IpmcGroup/RemoveIpmcGroupMember"
	IpmcGroup_GetIpmcGroupMemberAttribute_FullMethodName = "/lemming.dataplane.sai.IpmcGroup/GetIpmcGroupMemberAttribute"
)

// IpmcGroupClient is the client API for IpmcGroup service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type IpmcGroupClient interface {
	CreateIpmcGroup(ctx context.Context, in *CreateIpmcGroupRequest, opts ...grpc.CallOption) (*CreateIpmcGroupResponse, error)
	RemoveIpmcGroup(ctx context.Context, in *RemoveIpmcGroupRequest, opts ...grpc.CallOption) (*RemoveIpmcGroupResponse, error)
	GetIpmcGroupAttribute(ctx context.Context, in *GetIpmcGroupAttributeRequest, opts ...grpc.CallOption) (*GetIpmcGroupAttributeResponse, error)
	CreateIpmcGroupMember(ctx context.Context, in *CreateIpmcGroupMemberRequest, opts ...grpc.CallOption) (*CreateIpmcGroupMemberResponse, error)
	RemoveIpmcGroupMember(ctx context.Context, in *RemoveIpmcGroupMemberRequest, opts ...grpc.CallOption) (*RemoveIpmcGroupMemberResponse, error)
	GetIpmcGroupMemberAttribute(ctx context.Context, in *GetIpmcGroupMemberAttributeRequest, opts ...grpc.CallOption) (*GetIpmcGroupMemberAttributeResponse, error)
}

type ipmcGroupClient struct {
	cc grpc.ClientConnInterface
}

func NewIpmcGroupClient(cc grpc.ClientConnInterface) IpmcGroupClient {
	return &ipmcGroupClient{cc}
}

func (c *ipmcGroupClient) CreateIpmcGroup(ctx context.Context, in *CreateIpmcGroupRequest, opts ...grpc.CallOption) (*CreateIpmcGroupResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateIpmcGroupResponse)
	err := c.cc.Invoke(ctx, IpmcGroup_CreateIpmcGroup_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipmcGroupClient) RemoveIpmcGroup(ctx context.Context, in *RemoveIpmcGroupRequest, opts ...grpc.CallOption) (*RemoveIpmcGroupResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RemoveIpmcGroupResponse)
	err := c.cc.Invoke(ctx, IpmcGroup_RemoveIpmcGroup_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipmcGroupClient) GetIpmcGroupAttribute(ctx context.Context, in *GetIpmcGroupAttributeRequest, opts ...grpc.CallOption) (*GetIpmcGroupAttributeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetIpmcGroupAttributeResponse)
	err := c.cc.Invoke(ctx, IpmcGroup_GetIpmcGroupAttribute_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipmcGroupClient) CreateIpmcGroupMember(ctx context.Context, in *CreateIpmcGroupMemberRequest, opts ...grpc.CallOption) (*CreateIpmcGroupMemberResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateIpmcGroupMemberResponse)
	err := c.cc.Invoke(ctx, IpmcGroup_CreateIpmcGroupMember_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipmcGroupClient) RemoveIpmcGroupMember(ctx context.Context, in *RemoveIpmcGroupMemberRequest, opts ...grpc.CallOption) (*RemoveIpmcGroupMemberResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RemoveIpmcGroupMemberResponse)
	err := c.cc.Invoke(ctx, IpmcGroup_RemoveIpmcGroupMember_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipmcGroupClient) GetIpmcGroupMemberAttribute(ctx context.Context, in *GetIpmcGroupMemberAttributeRequest, opts ...grpc.CallOption) (*GetIpmcGroupMemberAttributeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetIpmcGroupMemberAttributeResponse)
	err := c.cc.Invoke(ctx, IpmcGroup_GetIpmcGroupMemberAttribute_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IpmcGroupServer is the server API for IpmcGroup service.
// All implementations should embed UnimplementedIpmcGroupServer
// for forward compatibility.
type IpmcGroupServer interface {
	CreateIpmcGroup(context.Context, *CreateIpmcGroupRequest) (*CreateIpmcGroupResponse, error)
	RemoveIpmcGroup(context.Context, *RemoveIpmcGroupRequest) (*RemoveIpmcGroupResponse, error)
	GetIpmcGroupAttribute(context.Context, *GetIpmcGroupAttributeRequest) (*GetIpmcGroupAttributeResponse, error)
	CreateIpmcGroupMember(context.Context, *CreateIpmcGroupMemberRequest) (*CreateIpmcGroupMemberResponse, error)
	RemoveIpmcGroupMember(context.Context, *RemoveIpmcGroupMemberRequest) (*RemoveIpmcGroupMemberResponse, error)
	GetIpmcGroupMemberAttribute(context.Context, *GetIpmcGroupMemberAttributeRequest) (*GetIpmcGroupMemberAttributeResponse, error)
}

// UnimplementedIpmcGroupServer should be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedIpmcGroupServer struct{}

func (UnimplementedIpmcGroupServer) CreateIpmcGroup(context.Context, *CreateIpmcGroupRequest) (*CreateIpmcGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateIpmcGroup not implemented")
}
func (UnimplementedIpmcGroupServer) RemoveIpmcGroup(context.Context, *RemoveIpmcGroupRequest) (*RemoveIpmcGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveIpmcGroup not implemented")
}
func (UnimplementedIpmcGroupServer) GetIpmcGroupAttribute(context.Context, *GetIpmcGroupAttributeRequest) (*GetIpmcGroupAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIpmcGroupAttribute not implemented")
}
func (UnimplementedIpmcGroupServer) CreateIpmcGroupMember(context.Context, *CreateIpmcGroupMemberRequest) (*CreateIpmcGroupMemberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateIpmcGroupMember not implemented")
}
func (UnimplementedIpmcGroupServer) RemoveIpmcGroupMember(context.Context, *RemoveIpmcGroupMemberRequest) (*RemoveIpmcGroupMemberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveIpmcGroupMember not implemented")
}
func (UnimplementedIpmcGroupServer) GetIpmcGroupMemberAttribute(context.Context, *GetIpmcGroupMemberAttributeRequest) (*GetIpmcGroupMemberAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIpmcGroupMemberAttribute not implemented")
}
func (UnimplementedIpmcGroupServer) testEmbeddedByValue() {}

// UnsafeIpmcGroupServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to IpmcGroupServer will
// result in compilation errors.
type UnsafeIpmcGroupServer interface {
	mustEmbedUnimplementedIpmcGroupServer()
}

func RegisterIpmcGroupServer(s grpc.ServiceRegistrar, srv IpmcGroupServer) {
	// If the following call pancis, it indicates UnimplementedIpmcGroupServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&IpmcGroup_ServiceDesc, srv)
}

func _IpmcGroup_CreateIpmcGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIpmcGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpmcGroupServer).CreateIpmcGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: IpmcGroup_CreateIpmcGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpmcGroupServer).CreateIpmcGroup(ctx, req.(*CreateIpmcGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpmcGroup_RemoveIpmcGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveIpmcGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpmcGroupServer).RemoveIpmcGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: IpmcGroup_RemoveIpmcGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpmcGroupServer).RemoveIpmcGroup(ctx, req.(*RemoveIpmcGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpmcGroup_GetIpmcGroupAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIpmcGroupAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpmcGroupServer).GetIpmcGroupAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: IpmcGroup_GetIpmcGroupAttribute_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpmcGroupServer).GetIpmcGroupAttribute(ctx, req.(*GetIpmcGroupAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpmcGroup_CreateIpmcGroupMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIpmcGroupMemberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpmcGroupServer).CreateIpmcGroupMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: IpmcGroup_CreateIpmcGroupMember_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpmcGroupServer).CreateIpmcGroupMember(ctx, req.(*CreateIpmcGroupMemberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpmcGroup_RemoveIpmcGroupMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveIpmcGroupMemberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpmcGroupServer).RemoveIpmcGroupMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: IpmcGroup_RemoveIpmcGroupMember_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpmcGroupServer).RemoveIpmcGroupMember(ctx, req.(*RemoveIpmcGroupMemberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpmcGroup_GetIpmcGroupMemberAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIpmcGroupMemberAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpmcGroupServer).GetIpmcGroupMemberAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: IpmcGroup_GetIpmcGroupMemberAttribute_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpmcGroupServer).GetIpmcGroupMemberAttribute(ctx, req.(*GetIpmcGroupMemberAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// IpmcGroup_ServiceDesc is the grpc.ServiceDesc for IpmcGroup service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var IpmcGroup_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "lemming.dataplane.sai.IpmcGroup",
	HandlerType: (*IpmcGroupServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateIpmcGroup",
			Handler:    _IpmcGroup_CreateIpmcGroup_Handler,
		},
		{
			MethodName: "RemoveIpmcGroup",
			Handler:    _IpmcGroup_RemoveIpmcGroup_Handler,
		},
		{
			MethodName: "GetIpmcGroupAttribute",
			Handler:    _IpmcGroup_GetIpmcGroupAttribute_Handler,
		},
		{
			MethodName: "CreateIpmcGroupMember",
			Handler:    _IpmcGroup_CreateIpmcGroupMember_Handler,
		},
		{
			MethodName: "RemoveIpmcGroupMember",
			Handler:    _IpmcGroup_RemoveIpmcGroupMember_Handler,
		},
		{
			MethodName: "GetIpmcGroupMemberAttribute",
			Handler:    _IpmcGroup_GetIpmcGroupMemberAttribute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dataplane/proto/sai/ipmc_group.proto",
}
