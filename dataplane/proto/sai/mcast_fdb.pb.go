// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: dataplane/proto/sai/mcast_fdb.proto

package sai

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type McastFdbEntryAttr int32

const (
	McastFdbEntryAttr_MCAST_FDB_ENTRY_ATTR_UNSPECIFIED   McastFdbEntryAttr = 0
	McastFdbEntryAttr_MCAST_FDB_ENTRY_ATTR_GROUP_ID      McastFdbEntryAttr = 1
	McastFdbEntryAttr_MCAST_FDB_ENTRY_ATTR_PACKET_ACTION McastFdbEntryAttr = 2
	McastFdbEntryAttr_MCAST_FDB_ENTRY_ATTR_META_DATA     McastFdbEntryAttr = 3
)

// Enum value maps for McastFdbEntryAttr.
var (
	McastFdbEntryAttr_name = map[int32]string{
		0: "MCAST_FDB_ENTRY_ATTR_UNSPECIFIED",
		1: "MCAST_FDB_ENTRY_ATTR_GROUP_ID",
		2: "MCAST_FDB_ENTRY_ATTR_PACKET_ACTION",
		3: "MCAST_FDB_ENTRY_ATTR_META_DATA",
	}
	McastFdbEntryAttr_value = map[string]int32{
		"MCAST_FDB_ENTRY_ATTR_UNSPECIFIED":   0,
		"MCAST_FDB_ENTRY_ATTR_GROUP_ID":      1,
		"MCAST_FDB_ENTRY_ATTR_PACKET_ACTION": 2,
		"MCAST_FDB_ENTRY_ATTR_META_DATA":     3,
	}
)

func (x McastFdbEntryAttr) Enum() *McastFdbEntryAttr {
	p := new(McastFdbEntryAttr)
	*p = x
	return p
}

func (x McastFdbEntryAttr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (McastFdbEntryAttr) Descriptor() protoreflect.EnumDescriptor {
	return file_dataplane_proto_sai_mcast_fdb_proto_enumTypes[0].Descriptor()
}

func (McastFdbEntryAttr) Type() protoreflect.EnumType {
	return &file_dataplane_proto_sai_mcast_fdb_proto_enumTypes[0]
}

func (x McastFdbEntryAttr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use McastFdbEntryAttr.Descriptor instead.
func (McastFdbEntryAttr) EnumDescriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_mcast_fdb_proto_rawDescGZIP(), []int{0}
}

type CreateMcastFdbEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry        *McastFdbEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	GroupId      *uint64        `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3,oneof" json:"group_id,omitempty"`
	PacketAction *PacketAction  `protobuf:"varint,3,opt,name=packet_action,json=packetAction,proto3,enum=lemming.dataplane.sai.PacketAction,oneof" json:"packet_action,omitempty"`
	MetaData     *uint32        `protobuf:"varint,4,opt,name=meta_data,json=metaData,proto3,oneof" json:"meta_data,omitempty"`
}

func (x *CreateMcastFdbEntryRequest) Reset() {
	*x = CreateMcastFdbEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMcastFdbEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMcastFdbEntryRequest) ProtoMessage() {}

func (x *CreateMcastFdbEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMcastFdbEntryRequest.ProtoReflect.Descriptor instead.
func (*CreateMcastFdbEntryRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_mcast_fdb_proto_rawDescGZIP(), []int{0}
}

func (x *CreateMcastFdbEntryRequest) GetEntry() *McastFdbEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *CreateMcastFdbEntryRequest) GetGroupId() uint64 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

func (x *CreateMcastFdbEntryRequest) GetPacketAction() PacketAction {
	if x != nil && x.PacketAction != nil {
		return *x.PacketAction
	}
	return PacketAction_PACKET_ACTION_UNSPECIFIED
}

func (x *CreateMcastFdbEntryRequest) GetMetaData() uint32 {
	if x != nil && x.MetaData != nil {
		return *x.MetaData
	}
	return 0
}

type CreateMcastFdbEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateMcastFdbEntryResponse) Reset() {
	*x = CreateMcastFdbEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMcastFdbEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMcastFdbEntryResponse) ProtoMessage() {}

func (x *CreateMcastFdbEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMcastFdbEntryResponse.ProtoReflect.Descriptor instead.
func (*CreateMcastFdbEntryResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_mcast_fdb_proto_rawDescGZIP(), []int{1}
}

type RemoveMcastFdbEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry *McastFdbEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *RemoveMcastFdbEntryRequest) Reset() {
	*x = RemoveMcastFdbEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMcastFdbEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMcastFdbEntryRequest) ProtoMessage() {}

func (x *RemoveMcastFdbEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMcastFdbEntryRequest.ProtoReflect.Descriptor instead.
func (*RemoveMcastFdbEntryRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_mcast_fdb_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveMcastFdbEntryRequest) GetEntry() *McastFdbEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type RemoveMcastFdbEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveMcastFdbEntryResponse) Reset() {
	*x = RemoveMcastFdbEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMcastFdbEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMcastFdbEntryResponse) ProtoMessage() {}

func (x *RemoveMcastFdbEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMcastFdbEntryResponse.ProtoReflect.Descriptor instead.
func (*RemoveMcastFdbEntryResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_mcast_fdb_proto_rawDescGZIP(), []int{3}
}

type SetMcastFdbEntryAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry        *McastFdbEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	GroupId      *uint64        `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3,oneof" json:"group_id,omitempty"`
	PacketAction *PacketAction  `protobuf:"varint,3,opt,name=packet_action,json=packetAction,proto3,enum=lemming.dataplane.sai.PacketAction,oneof" json:"packet_action,omitempty"`
	MetaData     *uint32        `protobuf:"varint,4,opt,name=meta_data,json=metaData,proto3,oneof" json:"meta_data,omitempty"`
}

func (x *SetMcastFdbEntryAttributeRequest) Reset() {
	*x = SetMcastFdbEntryAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMcastFdbEntryAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMcastFdbEntryAttributeRequest) ProtoMessage() {}

func (x *SetMcastFdbEntryAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMcastFdbEntryAttributeRequest.ProtoReflect.Descriptor instead.
func (*SetMcastFdbEntryAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_mcast_fdb_proto_rawDescGZIP(), []int{4}
}

func (x *SetMcastFdbEntryAttributeRequest) GetEntry() *McastFdbEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *SetMcastFdbEntryAttributeRequest) GetGroupId() uint64 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

func (x *SetMcastFdbEntryAttributeRequest) GetPacketAction() PacketAction {
	if x != nil && x.PacketAction != nil {
		return *x.PacketAction
	}
	return PacketAction_PACKET_ACTION_UNSPECIFIED
}

func (x *SetMcastFdbEntryAttributeRequest) GetMetaData() uint32 {
	if x != nil && x.MetaData != nil {
		return *x.MetaData
	}
	return 0
}

type SetMcastFdbEntryAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetMcastFdbEntryAttributeResponse) Reset() {
	*x = SetMcastFdbEntryAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMcastFdbEntryAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMcastFdbEntryAttributeResponse) ProtoMessage() {}

func (x *SetMcastFdbEntryAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMcastFdbEntryAttributeResponse.ProtoReflect.Descriptor instead.
func (*SetMcastFdbEntryAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_mcast_fdb_proto_rawDescGZIP(), []int{5}
}

type GetMcastFdbEntryAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry    *McastFdbEntry      `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	AttrType []McastFdbEntryAttr `protobuf:"varint,2,rep,packed,name=attr_type,json=attrType,proto3,enum=lemming.dataplane.sai.McastFdbEntryAttr" json:"attr_type,omitempty"`
}

func (x *GetMcastFdbEntryAttributeRequest) Reset() {
	*x = GetMcastFdbEntryAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMcastFdbEntryAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMcastFdbEntryAttributeRequest) ProtoMessage() {}

func (x *GetMcastFdbEntryAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMcastFdbEntryAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetMcastFdbEntryAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_mcast_fdb_proto_rawDescGZIP(), []int{6}
}

func (x *GetMcastFdbEntryAttributeRequest) GetEntry() *McastFdbEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *GetMcastFdbEntryAttributeRequest) GetAttrType() []McastFdbEntryAttr {
	if x != nil {
		return x.AttrType
	}
	return nil
}

type GetMcastFdbEntryAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr *McastFdbEntryAttribute `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr,omitempty"`
}

func (x *GetMcastFdbEntryAttributeResponse) Reset() {
	*x = GetMcastFdbEntryAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMcastFdbEntryAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMcastFdbEntryAttributeResponse) ProtoMessage() {}

func (x *GetMcastFdbEntryAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMcastFdbEntryAttributeResponse.ProtoReflect.Descriptor instead.
func (*GetMcastFdbEntryAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_mcast_fdb_proto_rawDescGZIP(), []int{7}
}

func (x *GetMcastFdbEntryAttributeResponse) GetAttr() *McastFdbEntryAttribute {
	if x != nil {
		return x.Attr
	}
	return nil
}

var File_dataplane_proto_sai_mcast_fdb_proto protoreflect.FileDescriptor

var file_dataplane_proto_sai_mcast_fdb_proto_rawDesc = []byte{
	0x0a, 0x23, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x73, 0x61, 0x69, 0x2f, 0x6d, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x64, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x1a, 0x20, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x61,
	0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6,
	0x02, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x46, 0x64,
	0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a,
	0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c,
	0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x46, 0x64, 0x62, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x08, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xf0, 0xdc, 0x93,
	0xad, 0x0f, 0x01, 0x48, 0x00, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x55, 0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69,
	0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69,
	0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0xf0,
	0xdc, 0x93, 0xad, 0x0f, 0x02, 0x48, 0x01, 0x52, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xf0, 0xdc, 0x93,
	0xad, 0x0f, 0x03, 0x48, 0x02, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x88,
	0x01, 0x01, 0x3a, 0x06, 0xa0, 0xa9, 0x90, 0xad, 0x0f, 0x38, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x46, 0x64, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4d, 0x63, 0x61, 0x73, 0x74, 0x46, 0x64, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4d, 0x63, 0x61, 0x73,
	0x74, 0x46, 0x64, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x22, 0x1d, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x46,
	0x64, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xb4, 0x02, 0x0a, 0x20, 0x53, 0x65, 0x74, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x46, 0x64, 0x62, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4d, 0x63, 0x61, 0x73,
	0x74, 0x46, 0x64, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x26, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x06, 0xf0, 0xdc, 0x93, 0xad, 0x0f, 0x01, 0x48, 0x00, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x55, 0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x23, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0xf0, 0xdc, 0x93, 0xad, 0x0f, 0x02, 0x48, 0x01, 0x52, 0x0c,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x28, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x06, 0xf0, 0xdc, 0x93, 0xad, 0x0f, 0x03, 0x48, 0x02, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x65, 0x74, 0x4d, 0x63, 0x61,
	0x73, 0x74, 0x46, 0x64, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x20,
	0x47, 0x65, 0x74, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x46, 0x64, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3a, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x46, 0x64, 0x62,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x45, 0x0a, 0x09,
	0x61, 0x74, 0x74, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x28, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x46, 0x64, 0x62,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x66, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x46,
	0x64, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4d,
	0x63, 0x61, 0x73, 0x74, 0x46, 0x64, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x2a, 0xa8, 0x01, 0x0a, 0x11,
	0x4d, 0x63, 0x61, 0x73, 0x74, 0x46, 0x64, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74,
	0x72, 0x12, 0x24, 0x0a, 0x20, 0x4d, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x46, 0x44, 0x42, 0x5f, 0x45,
	0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x43, 0x41, 0x53, 0x54,
	0x5f, 0x46, 0x44, 0x42, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f,
	0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x26, 0x0a, 0x22, 0x4d, 0x43,
	0x41, 0x53, 0x54, 0x5f, 0x46, 0x44, 0x42, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54,
	0x54, 0x52, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x4d, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x46, 0x44, 0x42, 0x5f,
	0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x10, 0x03, 0x32, 0xb0, 0x04, 0x0a, 0x08, 0x4d, 0x63, 0x61, 0x73, 0x74,
	0x46, 0x64, 0x62, 0x12, 0x7e, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x63, 0x61,
	0x73, 0x74, 0x46, 0x64, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x31, 0x2e, 0x6c, 0x65, 0x6d,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73,
	0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x46, 0x64,
	0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e,
	0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x63, 0x61, 0x73,
	0x74, 0x46, 0x64, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x63, 0x61,
	0x73, 0x74, 0x46, 0x64, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x31, 0x2e, 0x6c, 0x65, 0x6d,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73,
	0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x46, 0x64,
	0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e,
	0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x63, 0x61, 0x73,
	0x74, 0x46, 0x64, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x4d, 0x63, 0x61, 0x73, 0x74,
	0x46, 0x64, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x12, 0x37, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x63, 0x61,
	0x73, 0x74, 0x46, 0x64, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6c, 0x65, 0x6d,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73,
	0x61, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x46, 0x64, 0x62, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x63,
	0x61, 0x73, 0x74, 0x46, 0x64, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x12, 0x37, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x63, 0x61, 0x73, 0x74, 0x46, 0x64, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e,
	0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x63, 0x61, 0x73, 0x74, 0x46, 0x64,
	0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2f, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x61, 0x69, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dataplane_proto_sai_mcast_fdb_proto_rawDescOnce sync.Once
	file_dataplane_proto_sai_mcast_fdb_proto_rawDescData = file_dataplane_proto_sai_mcast_fdb_proto_rawDesc
)

func file_dataplane_proto_sai_mcast_fdb_proto_rawDescGZIP() []byte {
	file_dataplane_proto_sai_mcast_fdb_proto_rawDescOnce.Do(func() {
		file_dataplane_proto_sai_mcast_fdb_proto_rawDescData = protoimpl.X.CompressGZIP(file_dataplane_proto_sai_mcast_fdb_proto_rawDescData)
	})
	return file_dataplane_proto_sai_mcast_fdb_proto_rawDescData
}

var file_dataplane_proto_sai_mcast_fdb_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dataplane_proto_sai_mcast_fdb_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_dataplane_proto_sai_mcast_fdb_proto_goTypes = []interface{}{
	(McastFdbEntryAttr)(0),                    // 0: lemming.dataplane.sai.McastFdbEntryAttr
	(*CreateMcastFdbEntryRequest)(nil),        // 1: lemming.dataplane.sai.CreateMcastFdbEntryRequest
	(*CreateMcastFdbEntryResponse)(nil),       // 2: lemming.dataplane.sai.CreateMcastFdbEntryResponse
	(*RemoveMcastFdbEntryRequest)(nil),        // 3: lemming.dataplane.sai.RemoveMcastFdbEntryRequest
	(*RemoveMcastFdbEntryResponse)(nil),       // 4: lemming.dataplane.sai.RemoveMcastFdbEntryResponse
	(*SetMcastFdbEntryAttributeRequest)(nil),  // 5: lemming.dataplane.sai.SetMcastFdbEntryAttributeRequest
	(*SetMcastFdbEntryAttributeResponse)(nil), // 6: lemming.dataplane.sai.SetMcastFdbEntryAttributeResponse
	(*GetMcastFdbEntryAttributeRequest)(nil),  // 7: lemming.dataplane.sai.GetMcastFdbEntryAttributeRequest
	(*GetMcastFdbEntryAttributeResponse)(nil), // 8: lemming.dataplane.sai.GetMcastFdbEntryAttributeResponse
	(*McastFdbEntry)(nil),                     // 9: lemming.dataplane.sai.McastFdbEntry
	(PacketAction)(0),                         // 10: lemming.dataplane.sai.PacketAction
	(*McastFdbEntryAttribute)(nil),            // 11: lemming.dataplane.sai.McastFdbEntryAttribute
}
var file_dataplane_proto_sai_mcast_fdb_proto_depIdxs = []int32{
	9,  // 0: lemming.dataplane.sai.CreateMcastFdbEntryRequest.entry:type_name -> lemming.dataplane.sai.McastFdbEntry
	10, // 1: lemming.dataplane.sai.CreateMcastFdbEntryRequest.packet_action:type_name -> lemming.dataplane.sai.PacketAction
	9,  // 2: lemming.dataplane.sai.RemoveMcastFdbEntryRequest.entry:type_name -> lemming.dataplane.sai.McastFdbEntry
	9,  // 3: lemming.dataplane.sai.SetMcastFdbEntryAttributeRequest.entry:type_name -> lemming.dataplane.sai.McastFdbEntry
	10, // 4: lemming.dataplane.sai.SetMcastFdbEntryAttributeRequest.packet_action:type_name -> lemming.dataplane.sai.PacketAction
	9,  // 5: lemming.dataplane.sai.GetMcastFdbEntryAttributeRequest.entry:type_name -> lemming.dataplane.sai.McastFdbEntry
	0,  // 6: lemming.dataplane.sai.GetMcastFdbEntryAttributeRequest.attr_type:type_name -> lemming.dataplane.sai.McastFdbEntryAttr
	11, // 7: lemming.dataplane.sai.GetMcastFdbEntryAttributeResponse.attr:type_name -> lemming.dataplane.sai.McastFdbEntryAttribute
	1,  // 8: lemming.dataplane.sai.McastFdb.CreateMcastFdbEntry:input_type -> lemming.dataplane.sai.CreateMcastFdbEntryRequest
	3,  // 9: lemming.dataplane.sai.McastFdb.RemoveMcastFdbEntry:input_type -> lemming.dataplane.sai.RemoveMcastFdbEntryRequest
	5,  // 10: lemming.dataplane.sai.McastFdb.SetMcastFdbEntryAttribute:input_type -> lemming.dataplane.sai.SetMcastFdbEntryAttributeRequest
	7,  // 11: lemming.dataplane.sai.McastFdb.GetMcastFdbEntryAttribute:input_type -> lemming.dataplane.sai.GetMcastFdbEntryAttributeRequest
	2,  // 12: lemming.dataplane.sai.McastFdb.CreateMcastFdbEntry:output_type -> lemming.dataplane.sai.CreateMcastFdbEntryResponse
	4,  // 13: lemming.dataplane.sai.McastFdb.RemoveMcastFdbEntry:output_type -> lemming.dataplane.sai.RemoveMcastFdbEntryResponse
	6,  // 14: lemming.dataplane.sai.McastFdb.SetMcastFdbEntryAttribute:output_type -> lemming.dataplane.sai.SetMcastFdbEntryAttributeResponse
	8,  // 15: lemming.dataplane.sai.McastFdb.GetMcastFdbEntryAttribute:output_type -> lemming.dataplane.sai.GetMcastFdbEntryAttributeResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_dataplane_proto_sai_mcast_fdb_proto_init() }
func file_dataplane_proto_sai_mcast_fdb_proto_init() {
	if File_dataplane_proto_sai_mcast_fdb_proto != nil {
		return
	}
	file_dataplane_proto_sai_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMcastFdbEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMcastFdbEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMcastFdbEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMcastFdbEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMcastFdbEntryAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMcastFdbEntryAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMcastFdbEntryAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMcastFdbEntryAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_dataplane_proto_sai_mcast_fdb_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dataplane_proto_sai_mcast_fdb_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dataplane_proto_sai_mcast_fdb_proto_goTypes,
		DependencyIndexes: file_dataplane_proto_sai_mcast_fdb_proto_depIdxs,
		EnumInfos:         file_dataplane_proto_sai_mcast_fdb_proto_enumTypes,
		MessageInfos:      file_dataplane_proto_sai_mcast_fdb_proto_msgTypes,
	}.Build()
	File_dataplane_proto_sai_mcast_fdb_proto = out.File
	file_dataplane_proto_sai_mcast_fdb_proto_rawDesc = nil
	file_dataplane_proto_sai_mcast_fdb_proto_goTypes = nil
	file_dataplane_proto_sai_mcast_fdb_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// McastFdbClient is the client API for McastFdb service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type McastFdbClient interface {
	CreateMcastFdbEntry(ctx context.Context, in *CreateMcastFdbEntryRequest, opts ...grpc.CallOption) (*CreateMcastFdbEntryResponse, error)
	RemoveMcastFdbEntry(ctx context.Context, in *RemoveMcastFdbEntryRequest, opts ...grpc.CallOption) (*RemoveMcastFdbEntryResponse, error)
	SetMcastFdbEntryAttribute(ctx context.Context, in *SetMcastFdbEntryAttributeRequest, opts ...grpc.CallOption) (*SetMcastFdbEntryAttributeResponse, error)
	GetMcastFdbEntryAttribute(ctx context.Context, in *GetMcastFdbEntryAttributeRequest, opts ...grpc.CallOption) (*GetMcastFdbEntryAttributeResponse, error)
}

type mcastFdbClient struct {
	cc grpc.ClientConnInterface
}

func NewMcastFdbClient(cc grpc.ClientConnInterface) McastFdbClient {
	return &mcastFdbClient{cc}
}

func (c *mcastFdbClient) CreateMcastFdbEntry(ctx context.Context, in *CreateMcastFdbEntryRequest, opts ...grpc.CallOption) (*CreateMcastFdbEntryResponse, error) {
	out := new(CreateMcastFdbEntryResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.McastFdb/CreateMcastFdbEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mcastFdbClient) RemoveMcastFdbEntry(ctx context.Context, in *RemoveMcastFdbEntryRequest, opts ...grpc.CallOption) (*RemoveMcastFdbEntryResponse, error) {
	out := new(RemoveMcastFdbEntryResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.McastFdb/RemoveMcastFdbEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mcastFdbClient) SetMcastFdbEntryAttribute(ctx context.Context, in *SetMcastFdbEntryAttributeRequest, opts ...grpc.CallOption) (*SetMcastFdbEntryAttributeResponse, error) {
	out := new(SetMcastFdbEntryAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.McastFdb/SetMcastFdbEntryAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mcastFdbClient) GetMcastFdbEntryAttribute(ctx context.Context, in *GetMcastFdbEntryAttributeRequest, opts ...grpc.CallOption) (*GetMcastFdbEntryAttributeResponse, error) {
	out := new(GetMcastFdbEntryAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.McastFdb/GetMcastFdbEntryAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// McastFdbServer is the server API for McastFdb service.
type McastFdbServer interface {
	CreateMcastFdbEntry(context.Context, *CreateMcastFdbEntryRequest) (*CreateMcastFdbEntryResponse, error)
	RemoveMcastFdbEntry(context.Context, *RemoveMcastFdbEntryRequest) (*RemoveMcastFdbEntryResponse, error)
	SetMcastFdbEntryAttribute(context.Context, *SetMcastFdbEntryAttributeRequest) (*SetMcastFdbEntryAttributeResponse, error)
	GetMcastFdbEntryAttribute(context.Context, *GetMcastFdbEntryAttributeRequest) (*GetMcastFdbEntryAttributeResponse, error)
}

// UnimplementedMcastFdbServer can be embedded to have forward compatible implementations.
type UnimplementedMcastFdbServer struct {
}

func (*UnimplementedMcastFdbServer) CreateMcastFdbEntry(context.Context, *CreateMcastFdbEntryRequest) (*CreateMcastFdbEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMcastFdbEntry not implemented")
}
func (*UnimplementedMcastFdbServer) RemoveMcastFdbEntry(context.Context, *RemoveMcastFdbEntryRequest) (*RemoveMcastFdbEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveMcastFdbEntry not implemented")
}
func (*UnimplementedMcastFdbServer) SetMcastFdbEntryAttribute(context.Context, *SetMcastFdbEntryAttributeRequest) (*SetMcastFdbEntryAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetMcastFdbEntryAttribute not implemented")
}
func (*UnimplementedMcastFdbServer) GetMcastFdbEntryAttribute(context.Context, *GetMcastFdbEntryAttributeRequest) (*GetMcastFdbEntryAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMcastFdbEntryAttribute not implemented")
}

func RegisterMcastFdbServer(s *grpc.Server, srv McastFdbServer) {
	s.RegisterService(&_McastFdb_serviceDesc, srv)
}

func _McastFdb_CreateMcastFdbEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMcastFdbEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(McastFdbServer).CreateMcastFdbEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.McastFdb/CreateMcastFdbEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(McastFdbServer).CreateMcastFdbEntry(ctx, req.(*CreateMcastFdbEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _McastFdb_RemoveMcastFdbEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveMcastFdbEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(McastFdbServer).RemoveMcastFdbEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.McastFdb/RemoveMcastFdbEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(McastFdbServer).RemoveMcastFdbEntry(ctx, req.(*RemoveMcastFdbEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _McastFdb_SetMcastFdbEntryAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetMcastFdbEntryAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(McastFdbServer).SetMcastFdbEntryAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.McastFdb/SetMcastFdbEntryAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(McastFdbServer).SetMcastFdbEntryAttribute(ctx, req.(*SetMcastFdbEntryAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _McastFdb_GetMcastFdbEntryAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMcastFdbEntryAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(McastFdbServer).GetMcastFdbEntryAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.McastFdb/GetMcastFdbEntryAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(McastFdbServer).GetMcastFdbEntryAttribute(ctx, req.(*GetMcastFdbEntryAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _McastFdb_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lemming.dataplane.sai.McastFdb",
	HandlerType: (*McastFdbServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMcastFdbEntry",
			Handler:    _McastFdb_CreateMcastFdbEntry_Handler,
		},
		{
			MethodName: "RemoveMcastFdbEntry",
			Handler:    _McastFdb_RemoveMcastFdbEntry_Handler,
		},
		{
			MethodName: "SetMcastFdbEntryAttribute",
			Handler:    _McastFdb_SetMcastFdbEntryAttribute_Handler,
		},
		{
			MethodName: "GetMcastFdbEntryAttribute",
			Handler:    _McastFdb_GetMcastFdbEntryAttribute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dataplane/proto/sai/mcast_fdb.proto",
}
