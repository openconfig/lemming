
syntax = "proto3";

package lemming.dataplane.sai;

import "dataplane/proto/sai/common.proto";

option go_package = "github.com/openconfig/lemming/dataplane/proto/sai";

enum NextHopAttr {
  NEXT_HOP_ATTR_UNSPECIFIED = 0;
  NEXT_HOP_ATTR_TYPE = 1;
  NEXT_HOP_ATTR_IP = 2;
  NEXT_HOP_ATTR_ROUTER_INTERFACE_ID = 3;
  NEXT_HOP_ATTR_TUNNEL_ID = 4;
  NEXT_HOP_ATTR_TUNNEL_VNI = 5;
  NEXT_HOP_ATTR_TUNNEL_MAC = 6;
  NEXT_HOP_ATTR_SRV6_SIDLIST_ID = 7;
  NEXT_HOP_ATTR_LABELSTACK = 8;
  NEXT_HOP_ATTR_COUNTER_ID = 9;
  NEXT_HOP_ATTR_DISABLE_DECREMENT_TTL = 10;
  NEXT_HOP_ATTR_OUTSEG_TYPE = 11;
  NEXT_HOP_ATTR_OUTSEG_TTL_MODE = 12;
  NEXT_HOP_ATTR_OUTSEG_TTL_VALUE = 13;
  NEXT_HOP_ATTR_OUTSEG_EXP_MODE = 14;
  NEXT_HOP_ATTR_OUTSEG_EXP_VALUE = 15;
  NEXT_HOP_ATTR_QOS_TC_AND_COLOR_TO_MPLS_EXP_MAP = 16;
}

message CreateNextHopRequest {
  option (sai_type) = OBJECT_TYPE_NEXT_HOP;
  uint64 switch = 1;
  optional NextHopType type = 2 [(attr_enum_value) = 1];
  optional bytes ip = 3 [(attr_enum_value) = 2];
  optional uint64 router_interface_id = 4 [(attr_enum_value) = 3];
  optional uint64 tunnel_id = 5 [(attr_enum_value) = 4];
  optional uint32 tunnel_vni = 6 [(attr_enum_value) = 5];
  optional bytes tunnel_mac = 7 [(attr_enum_value) = 6];
  optional uint64 srv6_sidlist_id = 8 [(attr_enum_value) = 7];
  repeated uint32 labelstack = 9 [(attr_enum_value) = 8];
  optional uint64 counter_id = 10 [(attr_enum_value) = 9];
  optional bool disable_decrement_ttl = 11 [(attr_enum_value) = 10];
  optional OutsegType outseg_type = 12 [(attr_enum_value) = 11];
  optional OutsegTtlMode outseg_ttl_mode = 13 [(attr_enum_value) = 12];
  optional uint32 outseg_ttl_value = 14 [(attr_enum_value) = 13];
  optional OutsegExpMode outseg_exp_mode = 15 [(attr_enum_value) = 14];
  optional uint32 outseg_exp_value = 16 [(attr_enum_value) = 15];
  optional uint64 qos_tc_and_color_to_mpls_exp_map = 17
      [(attr_enum_value) = 16];
}

message CreateNextHopResponse {
  uint64 oid = 1;
}

message RemoveNextHopRequest {
  uint64 oid = 1;
}

message RemoveNextHopResponse {}

message SetNextHopAttributeRequest {
  uint64 oid = 1;
  optional uint32 tunnel_vni = 2 [(attr_enum_value) = 5];
  optional bytes tunnel_mac = 3 [(attr_enum_value) = 6];
  optional uint64 counter_id = 4 [(attr_enum_value) = 9];
  optional bool disable_decrement_ttl = 5 [(attr_enum_value) = 10];
  optional OutsegType outseg_type = 6 [(attr_enum_value) = 11];
  optional OutsegTtlMode outseg_ttl_mode = 7 [(attr_enum_value) = 12];
  optional uint32 outseg_ttl_value = 8 [(attr_enum_value) = 13];
  optional OutsegExpMode outseg_exp_mode = 9 [(attr_enum_value) = 14];
  optional uint32 outseg_exp_value = 10 [(attr_enum_value) = 15];
  optional uint64 qos_tc_and_color_to_mpls_exp_map = 11
      [(attr_enum_value) = 16];
}

message SetNextHopAttributeResponse {}

message GetNextHopAttributeRequest {
  uint64 oid = 1;
  repeated NextHopAttr attr_type = 2;
}

message GetNextHopAttributeResponse {
  NextHopAttribute attr = 1;
}

message CreateNextHopsRequest {
  repeated CreateNextHopRequest reqs = 1;
}

message CreateNextHopsResponse {
  repeated CreateNextHopResponse resps = 1;
}

message RemoveNextHopsRequest {
  repeated RemoveNextHopRequest reqs = 1;
}

message RemoveNextHopsResponse {
  repeated RemoveNextHopResponse resps = 1;
}

service NextHop {
  rpc CreateNextHop(CreateNextHopRequest) returns (CreateNextHopResponse) {}
  rpc RemoveNextHop(RemoveNextHopRequest) returns (RemoveNextHopResponse) {}
  rpc SetNextHopAttribute(SetNextHopAttributeRequest)
      returns (SetNextHopAttributeResponse) {}
  rpc GetNextHopAttribute(GetNextHopAttributeRequest)
      returns (GetNextHopAttributeResponse) {}
  rpc CreateNextHops(CreateNextHopsRequest) returns (CreateNextHopsResponse) {}
  rpc RemoveNextHops(RemoveNextHopsRequest) returns (RemoveNextHopsResponse) {}
}
