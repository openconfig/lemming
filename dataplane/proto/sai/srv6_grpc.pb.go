// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.3
// source: dataplane/proto/sai/srv6.proto

package sai

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	Srv6_CreateSrv6Sidlist_FullMethodName       = "/lemming.dataplane.sai.Srv6/CreateSrv6Sidlist"
	Srv6_RemoveSrv6Sidlist_FullMethodName       = "/lemming.dataplane.sai.Srv6/RemoveSrv6Sidlist"
	Srv6_SetSrv6SidlistAttribute_FullMethodName = "/lemming.dataplane.sai.Srv6/SetSrv6SidlistAttribute"
	Srv6_GetSrv6SidlistAttribute_FullMethodName = "/lemming.dataplane.sai.Srv6/GetSrv6SidlistAttribute"
	Srv6_CreateSrv6Sidlists_FullMethodName      = "/lemming.dataplane.sai.Srv6/CreateSrv6Sidlists"
	Srv6_RemoveSrv6Sidlists_FullMethodName      = "/lemming.dataplane.sai.Srv6/RemoveSrv6Sidlists"
	Srv6_GetSrv6SidlistStats_FullMethodName     = "/lemming.dataplane.sai.Srv6/GetSrv6SidlistStats"
	Srv6_CreateMySidEntry_FullMethodName        = "/lemming.dataplane.sai.Srv6/CreateMySidEntry"
	Srv6_RemoveMySidEntry_FullMethodName        = "/lemming.dataplane.sai.Srv6/RemoveMySidEntry"
	Srv6_SetMySidEntryAttribute_FullMethodName  = "/lemming.dataplane.sai.Srv6/SetMySidEntryAttribute"
	Srv6_GetMySidEntryAttribute_FullMethodName  = "/lemming.dataplane.sai.Srv6/GetMySidEntryAttribute"
	Srv6_CreateMySidEntries_FullMethodName      = "/lemming.dataplane.sai.Srv6/CreateMySidEntries"
	Srv6_RemoveMySidEntries_FullMethodName      = "/lemming.dataplane.sai.Srv6/RemoveMySidEntries"
)

// Srv6Client is the client API for Srv6 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type Srv6Client interface {
	CreateSrv6Sidlist(ctx context.Context, in *CreateSrv6SidlistRequest, opts ...grpc.CallOption) (*CreateSrv6SidlistResponse, error)
	RemoveSrv6Sidlist(ctx context.Context, in *RemoveSrv6SidlistRequest, opts ...grpc.CallOption) (*RemoveSrv6SidlistResponse, error)
	SetSrv6SidlistAttribute(ctx context.Context, in *SetSrv6SidlistAttributeRequest, opts ...grpc.CallOption) (*SetSrv6SidlistAttributeResponse, error)
	GetSrv6SidlistAttribute(ctx context.Context, in *GetSrv6SidlistAttributeRequest, opts ...grpc.CallOption) (*GetSrv6SidlistAttributeResponse, error)
	CreateSrv6Sidlists(ctx context.Context, in *CreateSrv6SidlistsRequest, opts ...grpc.CallOption) (*CreateSrv6SidlistsResponse, error)
	RemoveSrv6Sidlists(ctx context.Context, in *RemoveSrv6SidlistsRequest, opts ...grpc.CallOption) (*RemoveSrv6SidlistsResponse, error)
	GetSrv6SidlistStats(ctx context.Context, in *GetSrv6SidlistStatsRequest, opts ...grpc.CallOption) (*GetSrv6SidlistStatsResponse, error)
	CreateMySidEntry(ctx context.Context, in *CreateMySidEntryRequest, opts ...grpc.CallOption) (*CreateMySidEntryResponse, error)
	RemoveMySidEntry(ctx context.Context, in *RemoveMySidEntryRequest, opts ...grpc.CallOption) (*RemoveMySidEntryResponse, error)
	SetMySidEntryAttribute(ctx context.Context, in *SetMySidEntryAttributeRequest, opts ...grpc.CallOption) (*SetMySidEntryAttributeResponse, error)
	GetMySidEntryAttribute(ctx context.Context, in *GetMySidEntryAttributeRequest, opts ...grpc.CallOption) (*GetMySidEntryAttributeResponse, error)
	CreateMySidEntries(ctx context.Context, in *CreateMySidEntriesRequest, opts ...grpc.CallOption) (*CreateMySidEntriesResponse, error)
	RemoveMySidEntries(ctx context.Context, in *RemoveMySidEntriesRequest, opts ...grpc.CallOption) (*RemoveMySidEntriesResponse, error)
}

type srv6Client struct {
	cc grpc.ClientConnInterface
}

func NewSrv6Client(cc grpc.ClientConnInterface) Srv6Client {
	return &srv6Client{cc}
}

func (c *srv6Client) CreateSrv6Sidlist(ctx context.Context, in *CreateSrv6SidlistRequest, opts ...grpc.CallOption) (*CreateSrv6SidlistResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateSrv6SidlistResponse)
	err := c.cc.Invoke(ctx, Srv6_CreateSrv6Sidlist_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) RemoveSrv6Sidlist(ctx context.Context, in *RemoveSrv6SidlistRequest, opts ...grpc.CallOption) (*RemoveSrv6SidlistResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RemoveSrv6SidlistResponse)
	err := c.cc.Invoke(ctx, Srv6_RemoveSrv6Sidlist_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) SetSrv6SidlistAttribute(ctx context.Context, in *SetSrv6SidlistAttributeRequest, opts ...grpc.CallOption) (*SetSrv6SidlistAttributeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SetSrv6SidlistAttributeResponse)
	err := c.cc.Invoke(ctx, Srv6_SetSrv6SidlistAttribute_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) GetSrv6SidlistAttribute(ctx context.Context, in *GetSrv6SidlistAttributeRequest, opts ...grpc.CallOption) (*GetSrv6SidlistAttributeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetSrv6SidlistAttributeResponse)
	err := c.cc.Invoke(ctx, Srv6_GetSrv6SidlistAttribute_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) CreateSrv6Sidlists(ctx context.Context, in *CreateSrv6SidlistsRequest, opts ...grpc.CallOption) (*CreateSrv6SidlistsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateSrv6SidlistsResponse)
	err := c.cc.Invoke(ctx, Srv6_CreateSrv6Sidlists_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) RemoveSrv6Sidlists(ctx context.Context, in *RemoveSrv6SidlistsRequest, opts ...grpc.CallOption) (*RemoveSrv6SidlistsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RemoveSrv6SidlistsResponse)
	err := c.cc.Invoke(ctx, Srv6_RemoveSrv6Sidlists_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) GetSrv6SidlistStats(ctx context.Context, in *GetSrv6SidlistStatsRequest, opts ...grpc.CallOption) (*GetSrv6SidlistStatsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetSrv6SidlistStatsResponse)
	err := c.cc.Invoke(ctx, Srv6_GetSrv6SidlistStats_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) CreateMySidEntry(ctx context.Context, in *CreateMySidEntryRequest, opts ...grpc.CallOption) (*CreateMySidEntryResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateMySidEntryResponse)
	err := c.cc.Invoke(ctx, Srv6_CreateMySidEntry_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) RemoveMySidEntry(ctx context.Context, in *RemoveMySidEntryRequest, opts ...grpc.CallOption) (*RemoveMySidEntryResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RemoveMySidEntryResponse)
	err := c.cc.Invoke(ctx, Srv6_RemoveMySidEntry_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) SetMySidEntryAttribute(ctx context.Context, in *SetMySidEntryAttributeRequest, opts ...grpc.CallOption) (*SetMySidEntryAttributeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SetMySidEntryAttributeResponse)
	err := c.cc.Invoke(ctx, Srv6_SetMySidEntryAttribute_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) GetMySidEntryAttribute(ctx context.Context, in *GetMySidEntryAttributeRequest, opts ...grpc.CallOption) (*GetMySidEntryAttributeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetMySidEntryAttributeResponse)
	err := c.cc.Invoke(ctx, Srv6_GetMySidEntryAttribute_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) CreateMySidEntries(ctx context.Context, in *CreateMySidEntriesRequest, opts ...grpc.CallOption) (*CreateMySidEntriesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateMySidEntriesResponse)
	err := c.cc.Invoke(ctx, Srv6_CreateMySidEntries_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *srv6Client) RemoveMySidEntries(ctx context.Context, in *RemoveMySidEntriesRequest, opts ...grpc.CallOption) (*RemoveMySidEntriesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RemoveMySidEntriesResponse)
	err := c.cc.Invoke(ctx, Srv6_RemoveMySidEntries_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Srv6Server is the server API for Srv6 service.
// All implementations should embed UnimplementedSrv6Server
// for forward compatibility.
type Srv6Server interface {
	CreateSrv6Sidlist(context.Context, *CreateSrv6SidlistRequest) (*CreateSrv6SidlistResponse, error)
	RemoveSrv6Sidlist(context.Context, *RemoveSrv6SidlistRequest) (*RemoveSrv6SidlistResponse, error)
	SetSrv6SidlistAttribute(context.Context, *SetSrv6SidlistAttributeRequest) (*SetSrv6SidlistAttributeResponse, error)
	GetSrv6SidlistAttribute(context.Context, *GetSrv6SidlistAttributeRequest) (*GetSrv6SidlistAttributeResponse, error)
	CreateSrv6Sidlists(context.Context, *CreateSrv6SidlistsRequest) (*CreateSrv6SidlistsResponse, error)
	RemoveSrv6Sidlists(context.Context, *RemoveSrv6SidlistsRequest) (*RemoveSrv6SidlistsResponse, error)
	GetSrv6SidlistStats(context.Context, *GetSrv6SidlistStatsRequest) (*GetSrv6SidlistStatsResponse, error)
	CreateMySidEntry(context.Context, *CreateMySidEntryRequest) (*CreateMySidEntryResponse, error)
	RemoveMySidEntry(context.Context, *RemoveMySidEntryRequest) (*RemoveMySidEntryResponse, error)
	SetMySidEntryAttribute(context.Context, *SetMySidEntryAttributeRequest) (*SetMySidEntryAttributeResponse, error)
	GetMySidEntryAttribute(context.Context, *GetMySidEntryAttributeRequest) (*GetMySidEntryAttributeResponse, error)
	CreateMySidEntries(context.Context, *CreateMySidEntriesRequest) (*CreateMySidEntriesResponse, error)
	RemoveMySidEntries(context.Context, *RemoveMySidEntriesRequest) (*RemoveMySidEntriesResponse, error)
}

// UnimplementedSrv6Server should be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedSrv6Server struct{}

func (UnimplementedSrv6Server) CreateSrv6Sidlist(context.Context, *CreateSrv6SidlistRequest) (*CreateSrv6SidlistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSrv6Sidlist not implemented")
}
func (UnimplementedSrv6Server) RemoveSrv6Sidlist(context.Context, *RemoveSrv6SidlistRequest) (*RemoveSrv6SidlistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveSrv6Sidlist not implemented")
}
func (UnimplementedSrv6Server) SetSrv6SidlistAttribute(context.Context, *SetSrv6SidlistAttributeRequest) (*SetSrv6SidlistAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSrv6SidlistAttribute not implemented")
}
func (UnimplementedSrv6Server) GetSrv6SidlistAttribute(context.Context, *GetSrv6SidlistAttributeRequest) (*GetSrv6SidlistAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSrv6SidlistAttribute not implemented")
}
func (UnimplementedSrv6Server) CreateSrv6Sidlists(context.Context, *CreateSrv6SidlistsRequest) (*CreateSrv6SidlistsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSrv6Sidlists not implemented")
}
func (UnimplementedSrv6Server) RemoveSrv6Sidlists(context.Context, *RemoveSrv6SidlistsRequest) (*RemoveSrv6SidlistsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveSrv6Sidlists not implemented")
}
func (UnimplementedSrv6Server) GetSrv6SidlistStats(context.Context, *GetSrv6SidlistStatsRequest) (*GetSrv6SidlistStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSrv6SidlistStats not implemented")
}
func (UnimplementedSrv6Server) CreateMySidEntry(context.Context, *CreateMySidEntryRequest) (*CreateMySidEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMySidEntry not implemented")
}
func (UnimplementedSrv6Server) RemoveMySidEntry(context.Context, *RemoveMySidEntryRequest) (*RemoveMySidEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveMySidEntry not implemented")
}
func (UnimplementedSrv6Server) SetMySidEntryAttribute(context.Context, *SetMySidEntryAttributeRequest) (*SetMySidEntryAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetMySidEntryAttribute not implemented")
}
func (UnimplementedSrv6Server) GetMySidEntryAttribute(context.Context, *GetMySidEntryAttributeRequest) (*GetMySidEntryAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMySidEntryAttribute not implemented")
}
func (UnimplementedSrv6Server) CreateMySidEntries(context.Context, *CreateMySidEntriesRequest) (*CreateMySidEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMySidEntries not implemented")
}
func (UnimplementedSrv6Server) RemoveMySidEntries(context.Context, *RemoveMySidEntriesRequest) (*RemoveMySidEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveMySidEntries not implemented")
}
func (UnimplementedSrv6Server) testEmbeddedByValue() {}

// UnsafeSrv6Server may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to Srv6Server will
// result in compilation errors.
type UnsafeSrv6Server interface {
	mustEmbedUnimplementedSrv6Server()
}

func RegisterSrv6Server(s grpc.ServiceRegistrar, srv Srv6Server) {
	// If the following call pancis, it indicates UnimplementedSrv6Server was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&Srv6_ServiceDesc, srv)
}

func _Srv6_CreateSrv6Sidlist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSrv6SidlistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).CreateSrv6Sidlist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Srv6_CreateSrv6Sidlist_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).CreateSrv6Sidlist(ctx, req.(*CreateSrv6SidlistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_RemoveSrv6Sidlist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveSrv6SidlistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).RemoveSrv6Sidlist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Srv6_RemoveSrv6Sidlist_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).RemoveSrv6Sidlist(ctx, req.(*RemoveSrv6SidlistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_SetSrv6SidlistAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSrv6SidlistAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).SetSrv6SidlistAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Srv6_SetSrv6SidlistAttribute_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).SetSrv6SidlistAttribute(ctx, req.(*SetSrv6SidlistAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_GetSrv6SidlistAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSrv6SidlistAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).GetSrv6SidlistAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Srv6_GetSrv6SidlistAttribute_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).GetSrv6SidlistAttribute(ctx, req.(*GetSrv6SidlistAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_CreateSrv6Sidlists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSrv6SidlistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).CreateSrv6Sidlists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Srv6_CreateSrv6Sidlists_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).CreateSrv6Sidlists(ctx, req.(*CreateSrv6SidlistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_RemoveSrv6Sidlists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveSrv6SidlistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).RemoveSrv6Sidlists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Srv6_RemoveSrv6Sidlists_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).RemoveSrv6Sidlists(ctx, req.(*RemoveSrv6SidlistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_GetSrv6SidlistStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSrv6SidlistStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).GetSrv6SidlistStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Srv6_GetSrv6SidlistStats_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).GetSrv6SidlistStats(ctx, req.(*GetSrv6SidlistStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_CreateMySidEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMySidEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).CreateMySidEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Srv6_CreateMySidEntry_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).CreateMySidEntry(ctx, req.(*CreateMySidEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_RemoveMySidEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveMySidEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).RemoveMySidEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Srv6_RemoveMySidEntry_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).RemoveMySidEntry(ctx, req.(*RemoveMySidEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_SetMySidEntryAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetMySidEntryAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).SetMySidEntryAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Srv6_SetMySidEntryAttribute_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).SetMySidEntryAttribute(ctx, req.(*SetMySidEntryAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_GetMySidEntryAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMySidEntryAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).GetMySidEntryAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Srv6_GetMySidEntryAttribute_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).GetMySidEntryAttribute(ctx, req.(*GetMySidEntryAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_CreateMySidEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMySidEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).CreateMySidEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Srv6_CreateMySidEntries_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).CreateMySidEntries(ctx, req.(*CreateMySidEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Srv6_RemoveMySidEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveMySidEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Srv6Server).RemoveMySidEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Srv6_RemoveMySidEntries_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Srv6Server).RemoveMySidEntries(ctx, req.(*RemoveMySidEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Srv6_ServiceDesc is the grpc.ServiceDesc for Srv6 service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Srv6_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "lemming.dataplane.sai.Srv6",
	HandlerType: (*Srv6Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSrv6Sidlist",
			Handler:    _Srv6_CreateSrv6Sidlist_Handler,
		},
		{
			MethodName: "RemoveSrv6Sidlist",
			Handler:    _Srv6_RemoveSrv6Sidlist_Handler,
		},
		{
			MethodName: "SetSrv6SidlistAttribute",
			Handler:    _Srv6_SetSrv6SidlistAttribute_Handler,
		},
		{
			MethodName: "GetSrv6SidlistAttribute",
			Handler:    _Srv6_GetSrv6SidlistAttribute_Handler,
		},
		{
			MethodName: "CreateSrv6Sidlists",
			Handler:    _Srv6_CreateSrv6Sidlists_Handler,
		},
		{
			MethodName: "RemoveSrv6Sidlists",
			Handler:    _Srv6_RemoveSrv6Sidlists_Handler,
		},
		{
			MethodName: "GetSrv6SidlistStats",
			Handler:    _Srv6_GetSrv6SidlistStats_Handler,
		},
		{
			MethodName: "CreateMySidEntry",
			Handler:    _Srv6_CreateMySidEntry_Handler,
		},
		{
			MethodName: "RemoveMySidEntry",
			Handler:    _Srv6_RemoveMySidEntry_Handler,
		},
		{
			MethodName: "SetMySidEntryAttribute",
			Handler:    _Srv6_SetMySidEntryAttribute_Handler,
		},
		{
			MethodName: "GetMySidEntryAttribute",
			Handler:    _Srv6_GetMySidEntryAttribute_Handler,
		},
		{
			MethodName: "CreateMySidEntries",
			Handler:    _Srv6_CreateMySidEntries_Handler,
		},
		{
			MethodName: "RemoveMySidEntries",
			Handler:    _Srv6_RemoveMySidEntries_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dataplane/proto/sai/srv6.proto",
}
