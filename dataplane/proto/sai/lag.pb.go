// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.12
// source: dataplane/proto/sai/lag.proto

package sai

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LagAttr int32

const (
	LagAttr_LAG_ATTR_UNSPECIFIED              LagAttr = 0
	LagAttr_LAG_ATTR_PORT_LIST                LagAttr = 1
	LagAttr_LAG_ATTR_INGRESS_ACL              LagAttr = 2
	LagAttr_LAG_ATTR_EGRESS_ACL               LagAttr = 3
	LagAttr_LAG_ATTR_PORT_VLAN_ID             LagAttr = 4
	LagAttr_LAG_ATTR_DEFAULT_VLAN_PRIORITY    LagAttr = 5
	LagAttr_LAG_ATTR_DROP_UNTAGGED            LagAttr = 6
	LagAttr_LAG_ATTR_DROP_TAGGED              LagAttr = 7
	LagAttr_LAG_ATTR_TPID                     LagAttr = 8
	LagAttr_LAG_ATTR_SYSTEM_PORT_AGGREGATE_ID LagAttr = 9
	LagAttr_LAG_ATTR_LABEL                    LagAttr = 10
)

// Enum value maps for LagAttr.
var (
	LagAttr_name = map[int32]string{
		0:  "LAG_ATTR_UNSPECIFIED",
		1:  "LAG_ATTR_PORT_LIST",
		2:  "LAG_ATTR_INGRESS_ACL",
		3:  "LAG_ATTR_EGRESS_ACL",
		4:  "LAG_ATTR_PORT_VLAN_ID",
		5:  "LAG_ATTR_DEFAULT_VLAN_PRIORITY",
		6:  "LAG_ATTR_DROP_UNTAGGED",
		7:  "LAG_ATTR_DROP_TAGGED",
		8:  "LAG_ATTR_TPID",
		9:  "LAG_ATTR_SYSTEM_PORT_AGGREGATE_ID",
		10: "LAG_ATTR_LABEL",
	}
	LagAttr_value = map[string]int32{
		"LAG_ATTR_UNSPECIFIED":              0,
		"LAG_ATTR_PORT_LIST":                1,
		"LAG_ATTR_INGRESS_ACL":              2,
		"LAG_ATTR_EGRESS_ACL":               3,
		"LAG_ATTR_PORT_VLAN_ID":             4,
		"LAG_ATTR_DEFAULT_VLAN_PRIORITY":    5,
		"LAG_ATTR_DROP_UNTAGGED":            6,
		"LAG_ATTR_DROP_TAGGED":              7,
		"LAG_ATTR_TPID":                     8,
		"LAG_ATTR_SYSTEM_PORT_AGGREGATE_ID": 9,
		"LAG_ATTR_LABEL":                    10,
	}
)

func (x LagAttr) Enum() *LagAttr {
	p := new(LagAttr)
	*p = x
	return p
}

func (x LagAttr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LagAttr) Descriptor() protoreflect.EnumDescriptor {
	return file_dataplane_proto_sai_lag_proto_enumTypes[0].Descriptor()
}

func (LagAttr) Type() protoreflect.EnumType {
	return &file_dataplane_proto_sai_lag_proto_enumTypes[0]
}

func (x LagAttr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LagAttr.Descriptor instead.
func (LagAttr) EnumDescriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{0}
}

type LagMemberAttr int32

const (
	LagMemberAttr_LAG_MEMBER_ATTR_UNSPECIFIED     LagMemberAttr = 0
	LagMemberAttr_LAG_MEMBER_ATTR_LAG_ID          LagMemberAttr = 1
	LagMemberAttr_LAG_MEMBER_ATTR_PORT_ID         LagMemberAttr = 2
	LagMemberAttr_LAG_MEMBER_ATTR_EGRESS_DISABLE  LagMemberAttr = 3
	LagMemberAttr_LAG_MEMBER_ATTR_INGRESS_DISABLE LagMemberAttr = 4
)

// Enum value maps for LagMemberAttr.
var (
	LagMemberAttr_name = map[int32]string{
		0: "LAG_MEMBER_ATTR_UNSPECIFIED",
		1: "LAG_MEMBER_ATTR_LAG_ID",
		2: "LAG_MEMBER_ATTR_PORT_ID",
		3: "LAG_MEMBER_ATTR_EGRESS_DISABLE",
		4: "LAG_MEMBER_ATTR_INGRESS_DISABLE",
	}
	LagMemberAttr_value = map[string]int32{
		"LAG_MEMBER_ATTR_UNSPECIFIED":     0,
		"LAG_MEMBER_ATTR_LAG_ID":          1,
		"LAG_MEMBER_ATTR_PORT_ID":         2,
		"LAG_MEMBER_ATTR_EGRESS_DISABLE":  3,
		"LAG_MEMBER_ATTR_INGRESS_DISABLE": 4,
	}
)

func (x LagMemberAttr) Enum() *LagMemberAttr {
	p := new(LagMemberAttr)
	*p = x
	return p
}

func (x LagMemberAttr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LagMemberAttr) Descriptor() protoreflect.EnumDescriptor {
	return file_dataplane_proto_sai_lag_proto_enumTypes[1].Descriptor()
}

func (LagMemberAttr) Type() protoreflect.EnumType {
	return &file_dataplane_proto_sai_lag_proto_enumTypes[1]
}

func (x LagMemberAttr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LagMemberAttr.Descriptor instead.
func (LagMemberAttr) EnumDescriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{1}
}

type CreateLagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Switch                uint64  `protobuf:"varint,1,opt,name=switch,proto3" json:"switch,omitempty"`
	IngressAcl            *uint64 `protobuf:"varint,2,opt,name=ingress_acl,json=ingressAcl,proto3,oneof" json:"ingress_acl,omitempty"`
	EgressAcl             *uint64 `protobuf:"varint,3,opt,name=egress_acl,json=egressAcl,proto3,oneof" json:"egress_acl,omitempty"`
	PortVlanId            *uint32 `protobuf:"varint,4,opt,name=port_vlan_id,json=portVlanId,proto3,oneof" json:"port_vlan_id,omitempty"`
	DefaultVlanPriority   *uint32 `protobuf:"varint,5,opt,name=default_vlan_priority,json=defaultVlanPriority,proto3,oneof" json:"default_vlan_priority,omitempty"`
	DropUntagged          *bool   `protobuf:"varint,6,opt,name=drop_untagged,json=dropUntagged,proto3,oneof" json:"drop_untagged,omitempty"`
	DropTagged            *bool   `protobuf:"varint,7,opt,name=drop_tagged,json=dropTagged,proto3,oneof" json:"drop_tagged,omitempty"`
	Tpid                  *uint32 `protobuf:"varint,8,opt,name=tpid,proto3,oneof" json:"tpid,omitempty"`
	SystemPortAggregateId *uint32 `protobuf:"varint,9,opt,name=system_port_aggregate_id,json=systemPortAggregateId,proto3,oneof" json:"system_port_aggregate_id,omitempty"`
	Label                 []byte  `protobuf:"bytes,10,opt,name=label,proto3,oneof" json:"label,omitempty"`
}

func (x *CreateLagRequest) Reset() {
	*x = CreateLagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_lag_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLagRequest) ProtoMessage() {}

func (x *CreateLagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_lag_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLagRequest.ProtoReflect.Descriptor instead.
func (*CreateLagRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{0}
}

func (x *CreateLagRequest) GetSwitch() uint64 {
	if x != nil {
		return x.Switch
	}
	return 0
}

func (x *CreateLagRequest) GetIngressAcl() uint64 {
	if x != nil && x.IngressAcl != nil {
		return *x.IngressAcl
	}
	return 0
}

func (x *CreateLagRequest) GetEgressAcl() uint64 {
	if x != nil && x.EgressAcl != nil {
		return *x.EgressAcl
	}
	return 0
}

func (x *CreateLagRequest) GetPortVlanId() uint32 {
	if x != nil && x.PortVlanId != nil {
		return *x.PortVlanId
	}
	return 0
}

func (x *CreateLagRequest) GetDefaultVlanPriority() uint32 {
	if x != nil && x.DefaultVlanPriority != nil {
		return *x.DefaultVlanPriority
	}
	return 0
}

func (x *CreateLagRequest) GetDropUntagged() bool {
	if x != nil && x.DropUntagged != nil {
		return *x.DropUntagged
	}
	return false
}

func (x *CreateLagRequest) GetDropTagged() bool {
	if x != nil && x.DropTagged != nil {
		return *x.DropTagged
	}
	return false
}

func (x *CreateLagRequest) GetTpid() uint32 {
	if x != nil && x.Tpid != nil {
		return *x.Tpid
	}
	return 0
}

func (x *CreateLagRequest) GetSystemPortAggregateId() uint32 {
	if x != nil && x.SystemPortAggregateId != nil {
		return *x.SystemPortAggregateId
	}
	return 0
}

func (x *CreateLagRequest) GetLabel() []byte {
	if x != nil {
		return x.Label
	}
	return nil
}

type CreateLagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *CreateLagResponse) Reset() {
	*x = CreateLagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_lag_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLagResponse) ProtoMessage() {}

func (x *CreateLagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_lag_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLagResponse.ProtoReflect.Descriptor instead.
func (*CreateLagResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{1}
}

func (x *CreateLagResponse) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type RemoveLagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *RemoveLagRequest) Reset() {
	*x = RemoveLagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_lag_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveLagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLagRequest) ProtoMessage() {}

func (x *RemoveLagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_lag_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLagRequest.ProtoReflect.Descriptor instead.
func (*RemoveLagRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveLagRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type RemoveLagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveLagResponse) Reset() {
	*x = RemoveLagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_lag_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveLagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLagResponse) ProtoMessage() {}

func (x *RemoveLagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_lag_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLagResponse.ProtoReflect.Descriptor instead.
func (*RemoveLagResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{3}
}

type SetLagAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid                 uint64  `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	IngressAcl          *uint64 `protobuf:"varint,2,opt,name=ingress_acl,json=ingressAcl,proto3,oneof" json:"ingress_acl,omitempty"`
	EgressAcl           *uint64 `protobuf:"varint,3,opt,name=egress_acl,json=egressAcl,proto3,oneof" json:"egress_acl,omitempty"`
	PortVlanId          *uint32 `protobuf:"varint,4,opt,name=port_vlan_id,json=portVlanId,proto3,oneof" json:"port_vlan_id,omitempty"`
	DefaultVlanPriority *uint32 `protobuf:"varint,5,opt,name=default_vlan_priority,json=defaultVlanPriority,proto3,oneof" json:"default_vlan_priority,omitempty"`
	DropUntagged        *bool   `protobuf:"varint,6,opt,name=drop_untagged,json=dropUntagged,proto3,oneof" json:"drop_untagged,omitempty"`
	DropTagged          *bool   `protobuf:"varint,7,opt,name=drop_tagged,json=dropTagged,proto3,oneof" json:"drop_tagged,omitempty"`
	Tpid                *uint32 `protobuf:"varint,8,opt,name=tpid,proto3,oneof" json:"tpid,omitempty"`
	Label               []byte  `protobuf:"bytes,9,opt,name=label,proto3,oneof" json:"label,omitempty"`
}

func (x *SetLagAttributeRequest) Reset() {
	*x = SetLagAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_lag_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLagAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLagAttributeRequest) ProtoMessage() {}

func (x *SetLagAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_lag_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLagAttributeRequest.ProtoReflect.Descriptor instead.
func (*SetLagAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{4}
}

func (x *SetLagAttributeRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *SetLagAttributeRequest) GetIngressAcl() uint64 {
	if x != nil && x.IngressAcl != nil {
		return *x.IngressAcl
	}
	return 0
}

func (x *SetLagAttributeRequest) GetEgressAcl() uint64 {
	if x != nil && x.EgressAcl != nil {
		return *x.EgressAcl
	}
	return 0
}

func (x *SetLagAttributeRequest) GetPortVlanId() uint32 {
	if x != nil && x.PortVlanId != nil {
		return *x.PortVlanId
	}
	return 0
}

func (x *SetLagAttributeRequest) GetDefaultVlanPriority() uint32 {
	if x != nil && x.DefaultVlanPriority != nil {
		return *x.DefaultVlanPriority
	}
	return 0
}

func (x *SetLagAttributeRequest) GetDropUntagged() bool {
	if x != nil && x.DropUntagged != nil {
		return *x.DropUntagged
	}
	return false
}

func (x *SetLagAttributeRequest) GetDropTagged() bool {
	if x != nil && x.DropTagged != nil {
		return *x.DropTagged
	}
	return false
}

func (x *SetLagAttributeRequest) GetTpid() uint32 {
	if x != nil && x.Tpid != nil {
		return *x.Tpid
	}
	return 0
}

func (x *SetLagAttributeRequest) GetLabel() []byte {
	if x != nil {
		return x.Label
	}
	return nil
}

type SetLagAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetLagAttributeResponse) Reset() {
	*x = SetLagAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_lag_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLagAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLagAttributeResponse) ProtoMessage() {}

func (x *SetLagAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_lag_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLagAttributeResponse.ProtoReflect.Descriptor instead.
func (*SetLagAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{5}
}

type GetLagAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid      uint64    `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	AttrType []LagAttr `protobuf:"varint,2,rep,packed,name=attr_type,json=attrType,proto3,enum=lemming.dataplane.sai.LagAttr" json:"attr_type,omitempty"`
}

func (x *GetLagAttributeRequest) Reset() {
	*x = GetLagAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_lag_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLagAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLagAttributeRequest) ProtoMessage() {}

func (x *GetLagAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_lag_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLagAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetLagAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{6}
}

func (x *GetLagAttributeRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *GetLagAttributeRequest) GetAttrType() []LagAttr {
	if x != nil {
		return x.AttrType
	}
	return nil
}

type GetLagAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr *LagAttribute `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr,omitempty"`
}

func (x *GetLagAttributeResponse) Reset() {
	*x = GetLagAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_lag_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLagAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLagAttributeResponse) ProtoMessage() {}

func (x *GetLagAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_lag_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLagAttributeResponse.ProtoReflect.Descriptor instead.
func (*GetLagAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{7}
}

func (x *GetLagAttributeResponse) GetAttr() *LagAttribute {
	if x != nil {
		return x.Attr
	}
	return nil
}

type CreateLagMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Switch         uint64  `protobuf:"varint,1,opt,name=switch,proto3" json:"switch,omitempty"`
	LagId          *uint64 `protobuf:"varint,2,opt,name=lag_id,json=lagId,proto3,oneof" json:"lag_id,omitempty"`
	PortId         *uint64 `protobuf:"varint,3,opt,name=port_id,json=portId,proto3,oneof" json:"port_id,omitempty"`
	EgressDisable  *bool   `protobuf:"varint,4,opt,name=egress_disable,json=egressDisable,proto3,oneof" json:"egress_disable,omitempty"`
	IngressDisable *bool   `protobuf:"varint,5,opt,name=ingress_disable,json=ingressDisable,proto3,oneof" json:"ingress_disable,omitempty"`
}

func (x *CreateLagMemberRequest) Reset() {
	*x = CreateLagMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_lag_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLagMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLagMemberRequest) ProtoMessage() {}

func (x *CreateLagMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_lag_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLagMemberRequest.ProtoReflect.Descriptor instead.
func (*CreateLagMemberRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{8}
}

func (x *CreateLagMemberRequest) GetSwitch() uint64 {
	if x != nil {
		return x.Switch
	}
	return 0
}

func (x *CreateLagMemberRequest) GetLagId() uint64 {
	if x != nil && x.LagId != nil {
		return *x.LagId
	}
	return 0
}

func (x *CreateLagMemberRequest) GetPortId() uint64 {
	if x != nil && x.PortId != nil {
		return *x.PortId
	}
	return 0
}

func (x *CreateLagMemberRequest) GetEgressDisable() bool {
	if x != nil && x.EgressDisable != nil {
		return *x.EgressDisable
	}
	return false
}

func (x *CreateLagMemberRequest) GetIngressDisable() bool {
	if x != nil && x.IngressDisable != nil {
		return *x.IngressDisable
	}
	return false
}

type CreateLagMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *CreateLagMemberResponse) Reset() {
	*x = CreateLagMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_lag_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLagMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLagMemberResponse) ProtoMessage() {}

func (x *CreateLagMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_lag_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLagMemberResponse.ProtoReflect.Descriptor instead.
func (*CreateLagMemberResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{9}
}

func (x *CreateLagMemberResponse) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type RemoveLagMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *RemoveLagMemberRequest) Reset() {
	*x = RemoveLagMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_lag_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveLagMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLagMemberRequest) ProtoMessage() {}

func (x *RemoveLagMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_lag_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLagMemberRequest.ProtoReflect.Descriptor instead.
func (*RemoveLagMemberRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveLagMemberRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type RemoveLagMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveLagMemberResponse) Reset() {
	*x = RemoveLagMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_lag_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveLagMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLagMemberResponse) ProtoMessage() {}

func (x *RemoveLagMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_lag_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLagMemberResponse.ProtoReflect.Descriptor instead.
func (*RemoveLagMemberResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{11}
}

type SetLagMemberAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid            uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	EgressDisable  *bool  `protobuf:"varint,2,opt,name=egress_disable,json=egressDisable,proto3,oneof" json:"egress_disable,omitempty"`
	IngressDisable *bool  `protobuf:"varint,3,opt,name=ingress_disable,json=ingressDisable,proto3,oneof" json:"ingress_disable,omitempty"`
}

func (x *SetLagMemberAttributeRequest) Reset() {
	*x = SetLagMemberAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_lag_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLagMemberAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLagMemberAttributeRequest) ProtoMessage() {}

func (x *SetLagMemberAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_lag_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLagMemberAttributeRequest.ProtoReflect.Descriptor instead.
func (*SetLagMemberAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{12}
}

func (x *SetLagMemberAttributeRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *SetLagMemberAttributeRequest) GetEgressDisable() bool {
	if x != nil && x.EgressDisable != nil {
		return *x.EgressDisable
	}
	return false
}

func (x *SetLagMemberAttributeRequest) GetIngressDisable() bool {
	if x != nil && x.IngressDisable != nil {
		return *x.IngressDisable
	}
	return false
}

type SetLagMemberAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetLagMemberAttributeResponse) Reset() {
	*x = SetLagMemberAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_lag_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLagMemberAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLagMemberAttributeResponse) ProtoMessage() {}

func (x *SetLagMemberAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_lag_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLagMemberAttributeResponse.ProtoReflect.Descriptor instead.
func (*SetLagMemberAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{13}
}

type GetLagMemberAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid      uint64          `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	AttrType []LagMemberAttr `protobuf:"varint,2,rep,packed,name=attr_type,json=attrType,proto3,enum=lemming.dataplane.sai.LagMemberAttr" json:"attr_type,omitempty"`
}

func (x *GetLagMemberAttributeRequest) Reset() {
	*x = GetLagMemberAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_lag_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLagMemberAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLagMemberAttributeRequest) ProtoMessage() {}

func (x *GetLagMemberAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_lag_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLagMemberAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetLagMemberAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{14}
}

func (x *GetLagMemberAttributeRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *GetLagMemberAttributeRequest) GetAttrType() []LagMemberAttr {
	if x != nil {
		return x.AttrType
	}
	return nil
}

type GetLagMemberAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr *LagMemberAttribute `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr,omitempty"`
}

func (x *GetLagMemberAttributeResponse) Reset() {
	*x = GetLagMemberAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_lag_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLagMemberAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLagMemberAttributeResponse) ProtoMessage() {}

func (x *GetLagMemberAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_lag_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLagMemberAttributeResponse.ProtoReflect.Descriptor instead.
func (*GetLagMemberAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{15}
}

func (x *GetLagMemberAttributeResponse) GetAttr() *LagMemberAttribute {
	if x != nil {
		return x.Attr
	}
	return nil
}

type CreateLagMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reqs []*CreateLagMemberRequest `protobuf:"bytes,1,rep,name=reqs,proto3" json:"reqs,omitempty"`
}

func (x *CreateLagMembersRequest) Reset() {
	*x = CreateLagMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_lag_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLagMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLagMembersRequest) ProtoMessage() {}

func (x *CreateLagMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_lag_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLagMembersRequest.ProtoReflect.Descriptor instead.
func (*CreateLagMembersRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{16}
}

func (x *CreateLagMembersRequest) GetReqs() []*CreateLagMemberRequest {
	if x != nil {
		return x.Reqs
	}
	return nil
}

type CreateLagMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resps []*CreateLagMemberResponse `protobuf:"bytes,1,rep,name=resps,proto3" json:"resps,omitempty"`
}

func (x *CreateLagMembersResponse) Reset() {
	*x = CreateLagMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_sai_lag_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLagMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLagMembersResponse) ProtoMessage() {}

func (x *CreateLagMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_sai_lag_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLagMembersResponse.ProtoReflect.Descriptor instead.
func (*CreateLagMembersResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_sai_lag_proto_rawDescGZIP(), []int{17}
}

func (x *CreateLagMembersResponse) GetResps() []*CreateLagMemberResponse {
	if x != nil {
		return x.Resps
	}
	return nil
}

var File_dataplane_proto_sai_lag_proto protoreflect.FileDescriptor

var file_dataplane_proto_sai_lag_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x73, 0x61, 0x69, 0x2f, 0x6c, 0x61, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x15, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x1a, 0x20, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x61, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x05, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x2c, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x61, 0x63, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xf0, 0xdc, 0x93, 0xad,
	0x0f, 0x02, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x41, 0x63, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0a, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x63,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xf0, 0xdc, 0x93, 0xad, 0x0f, 0x03, 0x48,
	0x01, 0x52, 0x09, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x41, 0x63, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x2d, 0x0a, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xf0, 0xdc, 0x93, 0xad, 0x0f, 0x04, 0x48, 0x02, 0x52,
	0x0a, 0x70, 0x6f, 0x72, 0x74, 0x56, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3f,
	0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xf0,
	0xdc, 0x93, 0xad, 0x0f, 0x05, 0x48, 0x03, 0x52, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x6c, 0x61, 0x6e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x30, 0x0a, 0x0d, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x75, 0x6e, 0x74, 0x61, 0x67, 0x67, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x42, 0x06, 0xf0, 0xdc, 0x93, 0xad, 0x0f, 0x06, 0x48, 0x04,
	0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x55, 0x6e, 0x74, 0x61, 0x67, 0x67, 0x65, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x2c, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x42, 0x06, 0xf0, 0xdc, 0x93, 0xad, 0x0f, 0x07, 0x48, 0x05,
	0x52, 0x0a, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x67, 0x67, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x04, 0x74, 0x70, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xf0,
	0xdc, 0x93, 0xad, 0x0f, 0x08, 0x48, 0x06, 0x52, 0x04, 0x74, 0x70, 0x69, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x44, 0x0a, 0x18, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x06, 0xf0, 0xdc, 0x93, 0xad, 0x0f, 0x09, 0x48, 0x07, 0x52, 0x15, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0xf0, 0xdc, 0x93, 0xad, 0x0f, 0x0a, 0x48, 0x08, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x3a, 0x06, 0xa0, 0xa9, 0x90, 0xad, 0x0f,
	0x03, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x63,
	0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x63, 0x6c,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x69,
	0x64, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x6c,
	0x61, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x64, 0x72, 0x6f, 0x70, 0x5f, 0x75, 0x6e, 0x74, 0x61, 0x67, 0x67, 0x65, 0x64, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x64, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x74, 0x70, 0x69, 0x64, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x25, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x6f, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x97, 0x04, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x0b,
	0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x63, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x06, 0xf0, 0xdc, 0x93, 0xad, 0x0f, 0x02, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x41, 0x63, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0a, 0x65, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x63, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06,
	0xf0, 0xdc, 0x93, 0xad, 0x0f, 0x03, 0x48, 0x01, 0x52, 0x09, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x41, 0x63, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x76,
	0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xf0, 0xdc,
	0x93, 0xad, 0x0f, 0x04, 0x48, 0x02, 0x52, 0x0a, 0x70, 0x6f, 0x72, 0x74, 0x56, 0x6c, 0x61, 0x6e,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xf0, 0xdc, 0x93, 0xad, 0x0f, 0x05, 0x48, 0x03, 0x52, 0x13,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x6c, 0x61, 0x6e, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x0d, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x75,
	0x6e, 0x74, 0x61, 0x67, 0x67, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x42, 0x06, 0xf0,
	0xdc, 0x93, 0xad, 0x0f, 0x06, 0x48, 0x04, 0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x55, 0x6e, 0x74,
	0x61, 0x67, 0x67, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70,
	0x5f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x42, 0x06, 0xf0,
	0xdc, 0x93, 0xad, 0x0f, 0x07, 0x48, 0x05, 0x52, 0x0a, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x67,
	0x67, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x70, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xf0, 0xdc, 0x93, 0xad, 0x0f, 0x08, 0x48, 0x06, 0x52, 0x04,
	0x74, 0x70, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0xf0, 0xdc, 0x93, 0xad, 0x0f, 0x0a, 0x48, 0x07,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x69,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x63, 0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x65,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x63, 0x6c, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x75, 0x6e,
	0x74, 0x61, 0x67, 0x67, 0x65, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x5f,
	0x74, 0x61, 0x67, 0x67, 0x65, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x70, 0x69, 0x64, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x65, 0x74,
	0x4c, 0x61, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x67, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64,
	0x12, 0x3b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4c, 0x61, 0x67, 0x41,
	0x74, 0x74, 0x72, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x52, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4c,
	0x61, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x04, 0x61, 0x74, 0x74,
	0x72, 0x22, 0xaa, 0x02, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x67, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x12, 0x22, 0x0a, 0x06, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xf0, 0xdc, 0x93, 0xad, 0x0f, 0x01, 0x48, 0x00, 0x52, 0x05,
	0x6c, 0x61, 0x67, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xf0, 0xdc, 0x93, 0xad, 0x0f,
	0x02, 0x48, 0x01, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x32,
	0x0a, 0x0e, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x06, 0xf0, 0xdc, 0x93, 0xad, 0x0f, 0x03, 0x48, 0x02,
	0x52, 0x0d, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x34, 0x0a, 0x0f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x06, 0xf0, 0xdc, 0x93,
	0xad, 0x0f, 0x04, 0x48, 0x03, 0x52, 0x0e, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x3a, 0x06, 0xa0, 0xa9, 0x90, 0xad, 0x0f, 0x1c,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x65, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x69,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x2b,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x16, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x0e, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x06, 0xf0,
	0xdc, 0x93, 0xad, 0x0f, 0x03, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x0f, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x06, 0xf0, 0xdc, 0x93, 0xad, 0x0f, 0x04, 0x48, 0x01, 0x52, 0x0e, 0x69, 0x6e,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x67,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x73, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x09, 0x61, 0x74, 0x74,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6c,
	0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5e, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x65,
	0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x73, 0x61, 0x69, 0x2e, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x22, 0x5c, 0x0a, 0x17,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x04, 0x72, 0x65, 0x71, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x72, 0x65, 0x71, 0x73, 0x22, 0x60, 0x0a, 0x18, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x70, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x72, 0x65, 0x73, 0x70, 0x73, 0x2a, 0xb1, 0x02, 0x0a,
	0x07, 0x4c, 0x61, 0x67, 0x41, 0x74, 0x74, 0x72, 0x12, 0x18, 0x0a, 0x14, 0x4c, 0x41, 0x47, 0x5f,
	0x41, 0x54, 0x54, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x41, 0x47, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4c, 0x41,
	0x47, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x49, 0x4e, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x41,
	0x43, 0x4c, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x41, 0x47, 0x5f, 0x41, 0x54, 0x54, 0x52,
	0x5f, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x41, 0x43, 0x4c, 0x10, 0x03, 0x12, 0x19, 0x0a,
	0x15, 0x4c, 0x41, 0x47, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x56,
	0x4c, 0x41, 0x4e, 0x5f, 0x49, 0x44, 0x10, 0x04, 0x12, 0x22, 0x0a, 0x1e, 0x4c, 0x41, 0x47, 0x5f,
	0x41, 0x54, 0x54, 0x52, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x56, 0x4c, 0x41,
	0x4e, 0x5f, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16,
	0x4c, 0x41, 0x47, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x55, 0x4e,
	0x54, 0x41, 0x47, 0x47, 0x45, 0x44, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x4c, 0x41, 0x47, 0x5f,
	0x41, 0x54, 0x54, 0x52, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x54, 0x41, 0x47, 0x47, 0x45, 0x44,
	0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x41, 0x47, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x54,
	0x50, 0x49, 0x44, 0x10, 0x08, 0x12, 0x25, 0x0a, 0x21, 0x4c, 0x41, 0x47, 0x5f, 0x41, 0x54, 0x54,
	0x52, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x41, 0x47,
	0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e,
	0x4c, 0x41, 0x47, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x10, 0x0a,
	0x2a, 0xb2, 0x01, 0x0a, 0x0d, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x12, 0x1f, 0x0a, 0x1b, 0x4c, 0x41, 0x47, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52,
	0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4c, 0x41, 0x47, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45,
	0x52, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x4c, 0x41, 0x47, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12,
	0x1b, 0x0a, 0x17, 0x4c, 0x41, 0x47, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x41, 0x54,
	0x54, 0x52, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x49, 0x44, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e,
	0x4c, 0x41, 0x47, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f,
	0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x03,
	0x12, 0x23, 0x0a, 0x1f, 0x4c, 0x41, 0x47, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x41,
	0x54, 0x54, 0x52, 0x5f, 0x49, 0x4e, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x44, 0x49, 0x53, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x04, 0x32, 0x9e, 0x08, 0x0a, 0x03, 0x4c, 0x61, 0x67, 0x12, 0x60, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x67, 0x12, 0x27, 0x2e, 0x6c, 0x65, 0x6d,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73,
	0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x60, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61, 0x67, 0x12, 0x27, 0x2e, 0x6c,
	0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x72, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x74,
	0x4c, 0x61, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x4c,
	0x61, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x67, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69,
	0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x67, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x0f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x6c,
	0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x67, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6c, 0x65,
	0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a,
	0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x2d, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c,
	0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61,
	0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x84, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x33, 0x2e, 0x6c, 0x65,
	0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x73, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x67, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x33, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x75, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x12, 0x2e, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x61, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f,
	0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x61, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_dataplane_proto_sai_lag_proto_rawDescOnce sync.Once
	file_dataplane_proto_sai_lag_proto_rawDescData = file_dataplane_proto_sai_lag_proto_rawDesc
)

func file_dataplane_proto_sai_lag_proto_rawDescGZIP() []byte {
	file_dataplane_proto_sai_lag_proto_rawDescOnce.Do(func() {
		file_dataplane_proto_sai_lag_proto_rawDescData = protoimpl.X.CompressGZIP(file_dataplane_proto_sai_lag_proto_rawDescData)
	})
	return file_dataplane_proto_sai_lag_proto_rawDescData
}

var file_dataplane_proto_sai_lag_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_dataplane_proto_sai_lag_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_dataplane_proto_sai_lag_proto_goTypes = []interface{}{
	(LagAttr)(0),                          // 0: lemming.dataplane.sai.LagAttr
	(LagMemberAttr)(0),                    // 1: lemming.dataplane.sai.LagMemberAttr
	(*CreateLagRequest)(nil),              // 2: lemming.dataplane.sai.CreateLagRequest
	(*CreateLagResponse)(nil),             // 3: lemming.dataplane.sai.CreateLagResponse
	(*RemoveLagRequest)(nil),              // 4: lemming.dataplane.sai.RemoveLagRequest
	(*RemoveLagResponse)(nil),             // 5: lemming.dataplane.sai.RemoveLagResponse
	(*SetLagAttributeRequest)(nil),        // 6: lemming.dataplane.sai.SetLagAttributeRequest
	(*SetLagAttributeResponse)(nil),       // 7: lemming.dataplane.sai.SetLagAttributeResponse
	(*GetLagAttributeRequest)(nil),        // 8: lemming.dataplane.sai.GetLagAttributeRequest
	(*GetLagAttributeResponse)(nil),       // 9: lemming.dataplane.sai.GetLagAttributeResponse
	(*CreateLagMemberRequest)(nil),        // 10: lemming.dataplane.sai.CreateLagMemberRequest
	(*CreateLagMemberResponse)(nil),       // 11: lemming.dataplane.sai.CreateLagMemberResponse
	(*RemoveLagMemberRequest)(nil),        // 12: lemming.dataplane.sai.RemoveLagMemberRequest
	(*RemoveLagMemberResponse)(nil),       // 13: lemming.dataplane.sai.RemoveLagMemberResponse
	(*SetLagMemberAttributeRequest)(nil),  // 14: lemming.dataplane.sai.SetLagMemberAttributeRequest
	(*SetLagMemberAttributeResponse)(nil), // 15: lemming.dataplane.sai.SetLagMemberAttributeResponse
	(*GetLagMemberAttributeRequest)(nil),  // 16: lemming.dataplane.sai.GetLagMemberAttributeRequest
	(*GetLagMemberAttributeResponse)(nil), // 17: lemming.dataplane.sai.GetLagMemberAttributeResponse
	(*CreateLagMembersRequest)(nil),       // 18: lemming.dataplane.sai.CreateLagMembersRequest
	(*CreateLagMembersResponse)(nil),      // 19: lemming.dataplane.sai.CreateLagMembersResponse
	(*LagAttribute)(nil),                  // 20: lemming.dataplane.sai.LagAttribute
	(*LagMemberAttribute)(nil),            // 21: lemming.dataplane.sai.LagMemberAttribute
}
var file_dataplane_proto_sai_lag_proto_depIdxs = []int32{
	0,  // 0: lemming.dataplane.sai.GetLagAttributeRequest.attr_type:type_name -> lemming.dataplane.sai.LagAttr
	20, // 1: lemming.dataplane.sai.GetLagAttributeResponse.attr:type_name -> lemming.dataplane.sai.LagAttribute
	1,  // 2: lemming.dataplane.sai.GetLagMemberAttributeRequest.attr_type:type_name -> lemming.dataplane.sai.LagMemberAttr
	21, // 3: lemming.dataplane.sai.GetLagMemberAttributeResponse.attr:type_name -> lemming.dataplane.sai.LagMemberAttribute
	10, // 4: lemming.dataplane.sai.CreateLagMembersRequest.reqs:type_name -> lemming.dataplane.sai.CreateLagMemberRequest
	11, // 5: lemming.dataplane.sai.CreateLagMembersResponse.resps:type_name -> lemming.dataplane.sai.CreateLagMemberResponse
	2,  // 6: lemming.dataplane.sai.Lag.CreateLag:input_type -> lemming.dataplane.sai.CreateLagRequest
	4,  // 7: lemming.dataplane.sai.Lag.RemoveLag:input_type -> lemming.dataplane.sai.RemoveLagRequest
	6,  // 8: lemming.dataplane.sai.Lag.SetLagAttribute:input_type -> lemming.dataplane.sai.SetLagAttributeRequest
	8,  // 9: lemming.dataplane.sai.Lag.GetLagAttribute:input_type -> lemming.dataplane.sai.GetLagAttributeRequest
	10, // 10: lemming.dataplane.sai.Lag.CreateLagMember:input_type -> lemming.dataplane.sai.CreateLagMemberRequest
	12, // 11: lemming.dataplane.sai.Lag.RemoveLagMember:input_type -> lemming.dataplane.sai.RemoveLagMemberRequest
	14, // 12: lemming.dataplane.sai.Lag.SetLagMemberAttribute:input_type -> lemming.dataplane.sai.SetLagMemberAttributeRequest
	16, // 13: lemming.dataplane.sai.Lag.GetLagMemberAttribute:input_type -> lemming.dataplane.sai.GetLagMemberAttributeRequest
	18, // 14: lemming.dataplane.sai.Lag.CreateLagMembers:input_type -> lemming.dataplane.sai.CreateLagMembersRequest
	3,  // 15: lemming.dataplane.sai.Lag.CreateLag:output_type -> lemming.dataplane.sai.CreateLagResponse
	5,  // 16: lemming.dataplane.sai.Lag.RemoveLag:output_type -> lemming.dataplane.sai.RemoveLagResponse
	7,  // 17: lemming.dataplane.sai.Lag.SetLagAttribute:output_type -> lemming.dataplane.sai.SetLagAttributeResponse
	9,  // 18: lemming.dataplane.sai.Lag.GetLagAttribute:output_type -> lemming.dataplane.sai.GetLagAttributeResponse
	11, // 19: lemming.dataplane.sai.Lag.CreateLagMember:output_type -> lemming.dataplane.sai.CreateLagMemberResponse
	13, // 20: lemming.dataplane.sai.Lag.RemoveLagMember:output_type -> lemming.dataplane.sai.RemoveLagMemberResponse
	15, // 21: lemming.dataplane.sai.Lag.SetLagMemberAttribute:output_type -> lemming.dataplane.sai.SetLagMemberAttributeResponse
	17, // 22: lemming.dataplane.sai.Lag.GetLagMemberAttribute:output_type -> lemming.dataplane.sai.GetLagMemberAttributeResponse
	19, // 23: lemming.dataplane.sai.Lag.CreateLagMembers:output_type -> lemming.dataplane.sai.CreateLagMembersResponse
	15, // [15:24] is the sub-list for method output_type
	6,  // [6:15] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_dataplane_proto_sai_lag_proto_init() }
func file_dataplane_proto_sai_lag_proto_init() {
	if File_dataplane_proto_sai_lag_proto != nil {
		return
	}
	file_dataplane_proto_sai_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dataplane_proto_sai_lag_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_lag_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_lag_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveLagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_lag_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveLagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_lag_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLagAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_lag_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLagAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_lag_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLagAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_lag_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLagAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_lag_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLagMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_lag_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLagMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_lag_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveLagMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_lag_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveLagMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_lag_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLagMemberAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_lag_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLagMemberAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_lag_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLagMemberAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_lag_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLagMemberAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_lag_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLagMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_sai_lag_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLagMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dataplane_proto_sai_lag_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_dataplane_proto_sai_lag_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_dataplane_proto_sai_lag_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_dataplane_proto_sai_lag_proto_msgTypes[12].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dataplane_proto_sai_lag_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dataplane_proto_sai_lag_proto_goTypes,
		DependencyIndexes: file_dataplane_proto_sai_lag_proto_depIdxs,
		EnumInfos:         file_dataplane_proto_sai_lag_proto_enumTypes,
		MessageInfos:      file_dataplane_proto_sai_lag_proto_msgTypes,
	}.Build()
	File_dataplane_proto_sai_lag_proto = out.File
	file_dataplane_proto_sai_lag_proto_rawDesc = nil
	file_dataplane_proto_sai_lag_proto_goTypes = nil
	file_dataplane_proto_sai_lag_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LagClient is the client API for Lag service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LagClient interface {
	CreateLag(ctx context.Context, in *CreateLagRequest, opts ...grpc.CallOption) (*CreateLagResponse, error)
	RemoveLag(ctx context.Context, in *RemoveLagRequest, opts ...grpc.CallOption) (*RemoveLagResponse, error)
	SetLagAttribute(ctx context.Context, in *SetLagAttributeRequest, opts ...grpc.CallOption) (*SetLagAttributeResponse, error)
	GetLagAttribute(ctx context.Context, in *GetLagAttributeRequest, opts ...grpc.CallOption) (*GetLagAttributeResponse, error)
	CreateLagMember(ctx context.Context, in *CreateLagMemberRequest, opts ...grpc.CallOption) (*CreateLagMemberResponse, error)
	RemoveLagMember(ctx context.Context, in *RemoveLagMemberRequest, opts ...grpc.CallOption) (*RemoveLagMemberResponse, error)
	SetLagMemberAttribute(ctx context.Context, in *SetLagMemberAttributeRequest, opts ...grpc.CallOption) (*SetLagMemberAttributeResponse, error)
	GetLagMemberAttribute(ctx context.Context, in *GetLagMemberAttributeRequest, opts ...grpc.CallOption) (*GetLagMemberAttributeResponse, error)
	CreateLagMembers(ctx context.Context, in *CreateLagMembersRequest, opts ...grpc.CallOption) (*CreateLagMembersResponse, error)
}

type lagClient struct {
	cc grpc.ClientConnInterface
}

func NewLagClient(cc grpc.ClientConnInterface) LagClient {
	return &lagClient{cc}
}

func (c *lagClient) CreateLag(ctx context.Context, in *CreateLagRequest, opts ...grpc.CallOption) (*CreateLagResponse, error) {
	out := new(CreateLagResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Lag/CreateLag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lagClient) RemoveLag(ctx context.Context, in *RemoveLagRequest, opts ...grpc.CallOption) (*RemoveLagResponse, error) {
	out := new(RemoveLagResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Lag/RemoveLag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lagClient) SetLagAttribute(ctx context.Context, in *SetLagAttributeRequest, opts ...grpc.CallOption) (*SetLagAttributeResponse, error) {
	out := new(SetLagAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Lag/SetLagAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lagClient) GetLagAttribute(ctx context.Context, in *GetLagAttributeRequest, opts ...grpc.CallOption) (*GetLagAttributeResponse, error) {
	out := new(GetLagAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Lag/GetLagAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lagClient) CreateLagMember(ctx context.Context, in *CreateLagMemberRequest, opts ...grpc.CallOption) (*CreateLagMemberResponse, error) {
	out := new(CreateLagMemberResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Lag/CreateLagMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lagClient) RemoveLagMember(ctx context.Context, in *RemoveLagMemberRequest, opts ...grpc.CallOption) (*RemoveLagMemberResponse, error) {
	out := new(RemoveLagMemberResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Lag/RemoveLagMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lagClient) SetLagMemberAttribute(ctx context.Context, in *SetLagMemberAttributeRequest, opts ...grpc.CallOption) (*SetLagMemberAttributeResponse, error) {
	out := new(SetLagMemberAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Lag/SetLagMemberAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lagClient) GetLagMemberAttribute(ctx context.Context, in *GetLagMemberAttributeRequest, opts ...grpc.CallOption) (*GetLagMemberAttributeResponse, error) {
	out := new(GetLagMemberAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Lag/GetLagMemberAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lagClient) CreateLagMembers(ctx context.Context, in *CreateLagMembersRequest, opts ...grpc.CallOption) (*CreateLagMembersResponse, error) {
	out := new(CreateLagMembersResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Lag/CreateLagMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LagServer is the server API for Lag service.
type LagServer interface {
	CreateLag(context.Context, *CreateLagRequest) (*CreateLagResponse, error)
	RemoveLag(context.Context, *RemoveLagRequest) (*RemoveLagResponse, error)
	SetLagAttribute(context.Context, *SetLagAttributeRequest) (*SetLagAttributeResponse, error)
	GetLagAttribute(context.Context, *GetLagAttributeRequest) (*GetLagAttributeResponse, error)
	CreateLagMember(context.Context, *CreateLagMemberRequest) (*CreateLagMemberResponse, error)
	RemoveLagMember(context.Context, *RemoveLagMemberRequest) (*RemoveLagMemberResponse, error)
	SetLagMemberAttribute(context.Context, *SetLagMemberAttributeRequest) (*SetLagMemberAttributeResponse, error)
	GetLagMemberAttribute(context.Context, *GetLagMemberAttributeRequest) (*GetLagMemberAttributeResponse, error)
	CreateLagMembers(context.Context, *CreateLagMembersRequest) (*CreateLagMembersResponse, error)
}

// UnimplementedLagServer can be embedded to have forward compatible implementations.
type UnimplementedLagServer struct {
}

func (*UnimplementedLagServer) CreateLag(context.Context, *CreateLagRequest) (*CreateLagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLag not implemented")
}
func (*UnimplementedLagServer) RemoveLag(context.Context, *RemoveLagRequest) (*RemoveLagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveLag not implemented")
}
func (*UnimplementedLagServer) SetLagAttribute(context.Context, *SetLagAttributeRequest) (*SetLagAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetLagAttribute not implemented")
}
func (*UnimplementedLagServer) GetLagAttribute(context.Context, *GetLagAttributeRequest) (*GetLagAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLagAttribute not implemented")
}
func (*UnimplementedLagServer) CreateLagMember(context.Context, *CreateLagMemberRequest) (*CreateLagMemberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLagMember not implemented")
}
func (*UnimplementedLagServer) RemoveLagMember(context.Context, *RemoveLagMemberRequest) (*RemoveLagMemberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveLagMember not implemented")
}
func (*UnimplementedLagServer) SetLagMemberAttribute(context.Context, *SetLagMemberAttributeRequest) (*SetLagMemberAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetLagMemberAttribute not implemented")
}
func (*UnimplementedLagServer) GetLagMemberAttribute(context.Context, *GetLagMemberAttributeRequest) (*GetLagMemberAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLagMemberAttribute not implemented")
}
func (*UnimplementedLagServer) CreateLagMembers(context.Context, *CreateLagMembersRequest) (*CreateLagMembersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLagMembers not implemented")
}

func RegisterLagServer(s *grpc.Server, srv LagServer) {
	s.RegisterService(&_Lag_serviceDesc, srv)
}

func _Lag_CreateLag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LagServer).CreateLag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Lag/CreateLag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LagServer).CreateLag(ctx, req.(*CreateLagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lag_RemoveLag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveLagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LagServer).RemoveLag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Lag/RemoveLag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LagServer).RemoveLag(ctx, req.(*RemoveLagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lag_SetLagAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetLagAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LagServer).SetLagAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Lag/SetLagAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LagServer).SetLagAttribute(ctx, req.(*SetLagAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lag_GetLagAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLagAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LagServer).GetLagAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Lag/GetLagAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LagServer).GetLagAttribute(ctx, req.(*GetLagAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lag_CreateLagMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLagMemberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LagServer).CreateLagMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Lag/CreateLagMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LagServer).CreateLagMember(ctx, req.(*CreateLagMemberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lag_RemoveLagMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveLagMemberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LagServer).RemoveLagMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Lag/RemoveLagMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LagServer).RemoveLagMember(ctx, req.(*RemoveLagMemberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lag_SetLagMemberAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetLagMemberAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LagServer).SetLagMemberAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Lag/SetLagMemberAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LagServer).SetLagMemberAttribute(ctx, req.(*SetLagMemberAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lag_GetLagMemberAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLagMemberAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LagServer).GetLagMemberAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Lag/GetLagMemberAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LagServer).GetLagMemberAttribute(ctx, req.(*GetLagMemberAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lag_CreateLagMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLagMembersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LagServer).CreateLagMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Lag/CreateLagMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LagServer).CreateLagMembers(ctx, req.(*CreateLagMembersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Lag_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lemming.dataplane.sai.Lag",
	HandlerType: (*LagServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateLag",
			Handler:    _Lag_CreateLag_Handler,
		},
		{
			MethodName: "RemoveLag",
			Handler:    _Lag_RemoveLag_Handler,
		},
		{
			MethodName: "SetLagAttribute",
			Handler:    _Lag_SetLagAttribute_Handler,
		},
		{
			MethodName: "GetLagAttribute",
			Handler:    _Lag_GetLagAttribute_Handler,
		},
		{
			MethodName: "CreateLagMember",
			Handler:    _Lag_CreateLagMember_Handler,
		},
		{
			MethodName: "RemoveLagMember",
			Handler:    _Lag_RemoveLagMember_Handler,
		},
		{
			MethodName: "SetLagMemberAttribute",
			Handler:    _Lag_SetLagMemberAttribute_Handler,
		},
		{
			MethodName: "GetLagMemberAttribute",
			Handler:    _Lag_GetLagMemberAttribute_Handler,
		},
		{
			MethodName: "CreateLagMembers",
			Handler:    _Lag_CreateLagMembers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dataplane/proto/sai/lag.proto",
}
