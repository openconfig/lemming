// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.3
// source: dataplane/proto/sai/buffer.proto

package sai

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	Buffer_CreateBufferPool_FullMethodName                 = "/lemming.dataplane.sai.Buffer/CreateBufferPool"
	Buffer_RemoveBufferPool_FullMethodName                 = "/lemming.dataplane.sai.Buffer/RemoveBufferPool"
	Buffer_SetBufferPoolAttribute_FullMethodName           = "/lemming.dataplane.sai.Buffer/SetBufferPoolAttribute"
	Buffer_GetBufferPoolAttribute_FullMethodName           = "/lemming.dataplane.sai.Buffer/GetBufferPoolAttribute"
	Buffer_GetBufferPoolStats_FullMethodName               = "/lemming.dataplane.sai.Buffer/GetBufferPoolStats"
	Buffer_CreateIngressPriorityGroup_FullMethodName       = "/lemming.dataplane.sai.Buffer/CreateIngressPriorityGroup"
	Buffer_RemoveIngressPriorityGroup_FullMethodName       = "/lemming.dataplane.sai.Buffer/RemoveIngressPriorityGroup"
	Buffer_SetIngressPriorityGroupAttribute_FullMethodName = "/lemming.dataplane.sai.Buffer/SetIngressPriorityGroupAttribute"
	Buffer_GetIngressPriorityGroupAttribute_FullMethodName = "/lemming.dataplane.sai.Buffer/GetIngressPriorityGroupAttribute"
	Buffer_GetIngressPriorityGroupStats_FullMethodName     = "/lemming.dataplane.sai.Buffer/GetIngressPriorityGroupStats"
	Buffer_CreateBufferProfile_FullMethodName              = "/lemming.dataplane.sai.Buffer/CreateBufferProfile"
	Buffer_RemoveBufferProfile_FullMethodName              = "/lemming.dataplane.sai.Buffer/RemoveBufferProfile"
	Buffer_SetBufferProfileAttribute_FullMethodName        = "/lemming.dataplane.sai.Buffer/SetBufferProfileAttribute"
	Buffer_GetBufferProfileAttribute_FullMethodName        = "/lemming.dataplane.sai.Buffer/GetBufferProfileAttribute"
)

// BufferClient is the client API for Buffer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BufferClient interface {
	CreateBufferPool(ctx context.Context, in *CreateBufferPoolRequest, opts ...grpc.CallOption) (*CreateBufferPoolResponse, error)
	RemoveBufferPool(ctx context.Context, in *RemoveBufferPoolRequest, opts ...grpc.CallOption) (*RemoveBufferPoolResponse, error)
	SetBufferPoolAttribute(ctx context.Context, in *SetBufferPoolAttributeRequest, opts ...grpc.CallOption) (*SetBufferPoolAttributeResponse, error)
	GetBufferPoolAttribute(ctx context.Context, in *GetBufferPoolAttributeRequest, opts ...grpc.CallOption) (*GetBufferPoolAttributeResponse, error)
	GetBufferPoolStats(ctx context.Context, in *GetBufferPoolStatsRequest, opts ...grpc.CallOption) (*GetBufferPoolStatsResponse, error)
	CreateIngressPriorityGroup(ctx context.Context, in *CreateIngressPriorityGroupRequest, opts ...grpc.CallOption) (*CreateIngressPriorityGroupResponse, error)
	RemoveIngressPriorityGroup(ctx context.Context, in *RemoveIngressPriorityGroupRequest, opts ...grpc.CallOption) (*RemoveIngressPriorityGroupResponse, error)
	SetIngressPriorityGroupAttribute(ctx context.Context, in *SetIngressPriorityGroupAttributeRequest, opts ...grpc.CallOption) (*SetIngressPriorityGroupAttributeResponse, error)
	GetIngressPriorityGroupAttribute(ctx context.Context, in *GetIngressPriorityGroupAttributeRequest, opts ...grpc.CallOption) (*GetIngressPriorityGroupAttributeResponse, error)
	GetIngressPriorityGroupStats(ctx context.Context, in *GetIngressPriorityGroupStatsRequest, opts ...grpc.CallOption) (*GetIngressPriorityGroupStatsResponse, error)
	CreateBufferProfile(ctx context.Context, in *CreateBufferProfileRequest, opts ...grpc.CallOption) (*CreateBufferProfileResponse, error)
	RemoveBufferProfile(ctx context.Context, in *RemoveBufferProfileRequest, opts ...grpc.CallOption) (*RemoveBufferProfileResponse, error)
	SetBufferProfileAttribute(ctx context.Context, in *SetBufferProfileAttributeRequest, opts ...grpc.CallOption) (*SetBufferProfileAttributeResponse, error)
	GetBufferProfileAttribute(ctx context.Context, in *GetBufferProfileAttributeRequest, opts ...grpc.CallOption) (*GetBufferProfileAttributeResponse, error)
}

type bufferClient struct {
	cc grpc.ClientConnInterface
}

func NewBufferClient(cc grpc.ClientConnInterface) BufferClient {
	return &bufferClient{cc}
}

func (c *bufferClient) CreateBufferPool(ctx context.Context, in *CreateBufferPoolRequest, opts ...grpc.CallOption) (*CreateBufferPoolResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateBufferPoolResponse)
	err := c.cc.Invoke(ctx, Buffer_CreateBufferPool_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bufferClient) RemoveBufferPool(ctx context.Context, in *RemoveBufferPoolRequest, opts ...grpc.CallOption) (*RemoveBufferPoolResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RemoveBufferPoolResponse)
	err := c.cc.Invoke(ctx, Buffer_RemoveBufferPool_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bufferClient) SetBufferPoolAttribute(ctx context.Context, in *SetBufferPoolAttributeRequest, opts ...grpc.CallOption) (*SetBufferPoolAttributeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SetBufferPoolAttributeResponse)
	err := c.cc.Invoke(ctx, Buffer_SetBufferPoolAttribute_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bufferClient) GetBufferPoolAttribute(ctx context.Context, in *GetBufferPoolAttributeRequest, opts ...grpc.CallOption) (*GetBufferPoolAttributeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetBufferPoolAttributeResponse)
	err := c.cc.Invoke(ctx, Buffer_GetBufferPoolAttribute_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bufferClient) GetBufferPoolStats(ctx context.Context, in *GetBufferPoolStatsRequest, opts ...grpc.CallOption) (*GetBufferPoolStatsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetBufferPoolStatsResponse)
	err := c.cc.Invoke(ctx, Buffer_GetBufferPoolStats_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bufferClient) CreateIngressPriorityGroup(ctx context.Context, in *CreateIngressPriorityGroupRequest, opts ...grpc.CallOption) (*CreateIngressPriorityGroupResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateIngressPriorityGroupResponse)
	err := c.cc.Invoke(ctx, Buffer_CreateIngressPriorityGroup_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bufferClient) RemoveIngressPriorityGroup(ctx context.Context, in *RemoveIngressPriorityGroupRequest, opts ...grpc.CallOption) (*RemoveIngressPriorityGroupResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RemoveIngressPriorityGroupResponse)
	err := c.cc.Invoke(ctx, Buffer_RemoveIngressPriorityGroup_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bufferClient) SetIngressPriorityGroupAttribute(ctx context.Context, in *SetIngressPriorityGroupAttributeRequest, opts ...grpc.CallOption) (*SetIngressPriorityGroupAttributeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SetIngressPriorityGroupAttributeResponse)
	err := c.cc.Invoke(ctx, Buffer_SetIngressPriorityGroupAttribute_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bufferClient) GetIngressPriorityGroupAttribute(ctx context.Context, in *GetIngressPriorityGroupAttributeRequest, opts ...grpc.CallOption) (*GetIngressPriorityGroupAttributeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetIngressPriorityGroupAttributeResponse)
	err := c.cc.Invoke(ctx, Buffer_GetIngressPriorityGroupAttribute_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bufferClient) GetIngressPriorityGroupStats(ctx context.Context, in *GetIngressPriorityGroupStatsRequest, opts ...grpc.CallOption) (*GetIngressPriorityGroupStatsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetIngressPriorityGroupStatsResponse)
	err := c.cc.Invoke(ctx, Buffer_GetIngressPriorityGroupStats_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bufferClient) CreateBufferProfile(ctx context.Context, in *CreateBufferProfileRequest, opts ...grpc.CallOption) (*CreateBufferProfileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateBufferProfileResponse)
	err := c.cc.Invoke(ctx, Buffer_CreateBufferProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bufferClient) RemoveBufferProfile(ctx context.Context, in *RemoveBufferProfileRequest, opts ...grpc.CallOption) (*RemoveBufferProfileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RemoveBufferProfileResponse)
	err := c.cc.Invoke(ctx, Buffer_RemoveBufferProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bufferClient) SetBufferProfileAttribute(ctx context.Context, in *SetBufferProfileAttributeRequest, opts ...grpc.CallOption) (*SetBufferProfileAttributeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SetBufferProfileAttributeResponse)
	err := c.cc.Invoke(ctx, Buffer_SetBufferProfileAttribute_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bufferClient) GetBufferProfileAttribute(ctx context.Context, in *GetBufferProfileAttributeRequest, opts ...grpc.CallOption) (*GetBufferProfileAttributeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetBufferProfileAttributeResponse)
	err := c.cc.Invoke(ctx, Buffer_GetBufferProfileAttribute_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BufferServer is the server API for Buffer service.
// All implementations should embed UnimplementedBufferServer
// for forward compatibility.
type BufferServer interface {
	CreateBufferPool(context.Context, *CreateBufferPoolRequest) (*CreateBufferPoolResponse, error)
	RemoveBufferPool(context.Context, *RemoveBufferPoolRequest) (*RemoveBufferPoolResponse, error)
	SetBufferPoolAttribute(context.Context, *SetBufferPoolAttributeRequest) (*SetBufferPoolAttributeResponse, error)
	GetBufferPoolAttribute(context.Context, *GetBufferPoolAttributeRequest) (*GetBufferPoolAttributeResponse, error)
	GetBufferPoolStats(context.Context, *GetBufferPoolStatsRequest) (*GetBufferPoolStatsResponse, error)
	CreateIngressPriorityGroup(context.Context, *CreateIngressPriorityGroupRequest) (*CreateIngressPriorityGroupResponse, error)
	RemoveIngressPriorityGroup(context.Context, *RemoveIngressPriorityGroupRequest) (*RemoveIngressPriorityGroupResponse, error)
	SetIngressPriorityGroupAttribute(context.Context, *SetIngressPriorityGroupAttributeRequest) (*SetIngressPriorityGroupAttributeResponse, error)
	GetIngressPriorityGroupAttribute(context.Context, *GetIngressPriorityGroupAttributeRequest) (*GetIngressPriorityGroupAttributeResponse, error)
	GetIngressPriorityGroupStats(context.Context, *GetIngressPriorityGroupStatsRequest) (*GetIngressPriorityGroupStatsResponse, error)
	CreateBufferProfile(context.Context, *CreateBufferProfileRequest) (*CreateBufferProfileResponse, error)
	RemoveBufferProfile(context.Context, *RemoveBufferProfileRequest) (*RemoveBufferProfileResponse, error)
	SetBufferProfileAttribute(context.Context, *SetBufferProfileAttributeRequest) (*SetBufferProfileAttributeResponse, error)
	GetBufferProfileAttribute(context.Context, *GetBufferProfileAttributeRequest) (*GetBufferProfileAttributeResponse, error)
}

// UnimplementedBufferServer should be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedBufferServer struct{}

func (UnimplementedBufferServer) CreateBufferPool(context.Context, *CreateBufferPoolRequest) (*CreateBufferPoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBufferPool not implemented")
}
func (UnimplementedBufferServer) RemoveBufferPool(context.Context, *RemoveBufferPoolRequest) (*RemoveBufferPoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveBufferPool not implemented")
}
func (UnimplementedBufferServer) SetBufferPoolAttribute(context.Context, *SetBufferPoolAttributeRequest) (*SetBufferPoolAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBufferPoolAttribute not implemented")
}
func (UnimplementedBufferServer) GetBufferPoolAttribute(context.Context, *GetBufferPoolAttributeRequest) (*GetBufferPoolAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBufferPoolAttribute not implemented")
}
func (UnimplementedBufferServer) GetBufferPoolStats(context.Context, *GetBufferPoolStatsRequest) (*GetBufferPoolStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBufferPoolStats not implemented")
}
func (UnimplementedBufferServer) CreateIngressPriorityGroup(context.Context, *CreateIngressPriorityGroupRequest) (*CreateIngressPriorityGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateIngressPriorityGroup not implemented")
}
func (UnimplementedBufferServer) RemoveIngressPriorityGroup(context.Context, *RemoveIngressPriorityGroupRequest) (*RemoveIngressPriorityGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveIngressPriorityGroup not implemented")
}
func (UnimplementedBufferServer) SetIngressPriorityGroupAttribute(context.Context, *SetIngressPriorityGroupAttributeRequest) (*SetIngressPriorityGroupAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetIngressPriorityGroupAttribute not implemented")
}
func (UnimplementedBufferServer) GetIngressPriorityGroupAttribute(context.Context, *GetIngressPriorityGroupAttributeRequest) (*GetIngressPriorityGroupAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIngressPriorityGroupAttribute not implemented")
}
func (UnimplementedBufferServer) GetIngressPriorityGroupStats(context.Context, *GetIngressPriorityGroupStatsRequest) (*GetIngressPriorityGroupStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIngressPriorityGroupStats not implemented")
}
func (UnimplementedBufferServer) CreateBufferProfile(context.Context, *CreateBufferProfileRequest) (*CreateBufferProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBufferProfile not implemented")
}
func (UnimplementedBufferServer) RemoveBufferProfile(context.Context, *RemoveBufferProfileRequest) (*RemoveBufferProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveBufferProfile not implemented")
}
func (UnimplementedBufferServer) SetBufferProfileAttribute(context.Context, *SetBufferProfileAttributeRequest) (*SetBufferProfileAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBufferProfileAttribute not implemented")
}
func (UnimplementedBufferServer) GetBufferProfileAttribute(context.Context, *GetBufferProfileAttributeRequest) (*GetBufferProfileAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBufferProfileAttribute not implemented")
}
func (UnimplementedBufferServer) testEmbeddedByValue() {}

// UnsafeBufferServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BufferServer will
// result in compilation errors.
type UnsafeBufferServer interface {
	mustEmbedUnimplementedBufferServer()
}

func RegisterBufferServer(s grpc.ServiceRegistrar, srv BufferServer) {
	// If the following call pancis, it indicates UnimplementedBufferServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&Buffer_ServiceDesc, srv)
}

func _Buffer_CreateBufferPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBufferPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BufferServer).CreateBufferPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Buffer_CreateBufferPool_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BufferServer).CreateBufferPool(ctx, req.(*CreateBufferPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Buffer_RemoveBufferPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveBufferPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BufferServer).RemoveBufferPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Buffer_RemoveBufferPool_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BufferServer).RemoveBufferPool(ctx, req.(*RemoveBufferPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Buffer_SetBufferPoolAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetBufferPoolAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BufferServer).SetBufferPoolAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Buffer_SetBufferPoolAttribute_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BufferServer).SetBufferPoolAttribute(ctx, req.(*SetBufferPoolAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Buffer_GetBufferPoolAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBufferPoolAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BufferServer).GetBufferPoolAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Buffer_GetBufferPoolAttribute_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BufferServer).GetBufferPoolAttribute(ctx, req.(*GetBufferPoolAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Buffer_GetBufferPoolStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBufferPoolStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BufferServer).GetBufferPoolStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Buffer_GetBufferPoolStats_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BufferServer).GetBufferPoolStats(ctx, req.(*GetBufferPoolStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Buffer_CreateIngressPriorityGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIngressPriorityGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BufferServer).CreateIngressPriorityGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Buffer_CreateIngressPriorityGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BufferServer).CreateIngressPriorityGroup(ctx, req.(*CreateIngressPriorityGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Buffer_RemoveIngressPriorityGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveIngressPriorityGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BufferServer).RemoveIngressPriorityGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Buffer_RemoveIngressPriorityGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BufferServer).RemoveIngressPriorityGroup(ctx, req.(*RemoveIngressPriorityGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Buffer_SetIngressPriorityGroupAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetIngressPriorityGroupAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BufferServer).SetIngressPriorityGroupAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Buffer_SetIngressPriorityGroupAttribute_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BufferServer).SetIngressPriorityGroupAttribute(ctx, req.(*SetIngressPriorityGroupAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Buffer_GetIngressPriorityGroupAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIngressPriorityGroupAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BufferServer).GetIngressPriorityGroupAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Buffer_GetIngressPriorityGroupAttribute_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BufferServer).GetIngressPriorityGroupAttribute(ctx, req.(*GetIngressPriorityGroupAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Buffer_GetIngressPriorityGroupStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIngressPriorityGroupStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BufferServer).GetIngressPriorityGroupStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Buffer_GetIngressPriorityGroupStats_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BufferServer).GetIngressPriorityGroupStats(ctx, req.(*GetIngressPriorityGroupStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Buffer_CreateBufferProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBufferProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BufferServer).CreateBufferProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Buffer_CreateBufferProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BufferServer).CreateBufferProfile(ctx, req.(*CreateBufferProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Buffer_RemoveBufferProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveBufferProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BufferServer).RemoveBufferProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Buffer_RemoveBufferProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BufferServer).RemoveBufferProfile(ctx, req.(*RemoveBufferProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Buffer_SetBufferProfileAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetBufferProfileAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BufferServer).SetBufferProfileAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Buffer_SetBufferProfileAttribute_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BufferServer).SetBufferProfileAttribute(ctx, req.(*SetBufferProfileAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Buffer_GetBufferProfileAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBufferProfileAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BufferServer).GetBufferProfileAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Buffer_GetBufferProfileAttribute_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BufferServer).GetBufferProfileAttribute(ctx, req.(*GetBufferProfileAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Buffer_ServiceDesc is the grpc.ServiceDesc for Buffer service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Buffer_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "lemming.dataplane.sai.Buffer",
	HandlerType: (*BufferServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBufferPool",
			Handler:    _Buffer_CreateBufferPool_Handler,
		},
		{
			MethodName: "RemoveBufferPool",
			Handler:    _Buffer_RemoveBufferPool_Handler,
		},
		{
			MethodName: "SetBufferPoolAttribute",
			Handler:    _Buffer_SetBufferPoolAttribute_Handler,
		},
		{
			MethodName: "GetBufferPoolAttribute",
			Handler:    _Buffer_GetBufferPoolAttribute_Handler,
		},
		{
			MethodName: "GetBufferPoolStats",
			Handler:    _Buffer_GetBufferPoolStats_Handler,
		},
		{
			MethodName: "CreateIngressPriorityGroup",
			Handler:    _Buffer_CreateIngressPriorityGroup_Handler,
		},
		{
			MethodName: "RemoveIngressPriorityGroup",
			Handler:    _Buffer_RemoveIngressPriorityGroup_Handler,
		},
		{
			MethodName: "SetIngressPriorityGroupAttribute",
			Handler:    _Buffer_SetIngressPriorityGroupAttribute_Handler,
		},
		{
			MethodName: "GetIngressPriorityGroupAttribute",
			Handler:    _Buffer_GetIngressPriorityGroupAttribute_Handler,
		},
		{
			MethodName: "GetIngressPriorityGroupStats",
			Handler:    _Buffer_GetIngressPriorityGroupStats_Handler,
		},
		{
			MethodName: "CreateBufferProfile",
			Handler:    _Buffer_CreateBufferProfile_Handler,
		},
		{
			MethodName: "RemoveBufferProfile",
			Handler:    _Buffer_RemoveBufferProfile_Handler,
		},
		{
			MethodName: "SetBufferProfileAttribute",
			Handler:    _Buffer_SetBufferProfileAttribute_Handler,
		},
		{
			MethodName: "GetBufferProfileAttribute",
			Handler:    _Buffer_GetBufferProfileAttribute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dataplane/proto/sai/buffer.proto",
}
