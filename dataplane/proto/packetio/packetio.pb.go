// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.12
// source: dataplane/proto/packetio/packetio.proto

package packetio

import (
	context "context"
	status "google.golang.org/genproto/googleapis/rpc/status"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status1 "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HostPortControlInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostPortControlInit) Reset() {
	*x = HostPortControlInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_packetio_packetio_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostPortControlInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostPortControlInit) ProtoMessage() {}

func (x *HostPortControlInit) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_packetio_packetio_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostPortControlInit.ProtoReflect.Descriptor instead.
func (*HostPortControlInit) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_packetio_packetio_proto_rawDescGZIP(), []int{0}
}

type HostPortControlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//
	//	*HostPortControlRequest_Init
	//	*HostPortControlRequest_Status
	Msg isHostPortControlRequest_Msg `protobuf_oneof:"msg"`
}

func (x *HostPortControlRequest) Reset() {
	*x = HostPortControlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_packetio_packetio_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostPortControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostPortControlRequest) ProtoMessage() {}

func (x *HostPortControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_packetio_packetio_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostPortControlRequest.ProtoReflect.Descriptor instead.
func (*HostPortControlRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_packetio_packetio_proto_rawDescGZIP(), []int{1}
}

func (m *HostPortControlRequest) GetMsg() isHostPortControlRequest_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *HostPortControlRequest) GetInit() *HostPortControlInit {
	if x, ok := x.GetMsg().(*HostPortControlRequest_Init); ok {
		return x.Init
	}
	return nil
}

func (x *HostPortControlRequest) GetStatus() *status.Status {
	if x, ok := x.GetMsg().(*HostPortControlRequest_Status); ok {
		return x.Status
	}
	return nil
}

type isHostPortControlRequest_Msg interface {
	isHostPortControlRequest_Msg()
}

type HostPortControlRequest_Init struct {
	Init *HostPortControlInit `protobuf:"bytes,1,opt,name=init,proto3,oneof"`
}

type HostPortControlRequest_Status struct {
	Status *status.Status `protobuf:"bytes,2,opt,name=status,proto3,oneof"`
}

func (*HostPortControlRequest_Init) isHostPortControlRequest_Msg() {}

func (*HostPortControlRequest_Status) isHostPortControlRequest_Msg() {}

type NetdevPort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *NetdevPort) Reset() {
	*x = NetdevPort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_packetio_packetio_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetdevPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetdevPort) ProtoMessage() {}

func (x *NetdevPort) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_packetio_packetio_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetdevPort.ProtoReflect.Descriptor instead.
func (*NetdevPort) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_packetio_packetio_proto_rawDescGZIP(), []int{2}
}

func (x *NetdevPort) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GenetlinkPort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Family string `protobuf:"bytes,1,opt,name=family,proto3" json:"family,omitempty"`
	Group  string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GenetlinkPort) Reset() {
	*x = GenetlinkPort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_packetio_packetio_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenetlinkPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenetlinkPort) ProtoMessage() {}

func (x *GenetlinkPort) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_packetio_packetio_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenetlinkPort.ProtoReflect.Descriptor instead.
func (*GenetlinkPort) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_packetio_packetio_proto_rawDescGZIP(), []int{3}
}

func (x *GenetlinkPort) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *GenetlinkPort) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type HostPortControlMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId        uint64 `protobuf:"varint,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	DataplanePort uint64 `protobuf:"varint,2,opt,name=dataplane_port,json=dataplanePort,proto3" json:"dataplane_port,omitempty"`
	Create        bool   `protobuf:"varint,3,opt,name=create,proto3" json:"create,omitempty"`
	// Types that are assignable to Port:
	//
	//	*HostPortControlMessage_Netdev
	//	*HostPortControlMessage_Genetlink
	Port isHostPortControlMessage_Port `protobuf_oneof:"port"`
}

func (x *HostPortControlMessage) Reset() {
	*x = HostPortControlMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_packetio_packetio_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostPortControlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostPortControlMessage) ProtoMessage() {}

func (x *HostPortControlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_packetio_packetio_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostPortControlMessage.ProtoReflect.Descriptor instead.
func (*HostPortControlMessage) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_packetio_packetio_proto_rawDescGZIP(), []int{4}
}

func (x *HostPortControlMessage) GetPortId() uint64 {
	if x != nil {
		return x.PortId
	}
	return 0
}

func (x *HostPortControlMessage) GetDataplanePort() uint64 {
	if x != nil {
		return x.DataplanePort
	}
	return 0
}

func (x *HostPortControlMessage) GetCreate() bool {
	if x != nil {
		return x.Create
	}
	return false
}

func (m *HostPortControlMessage) GetPort() isHostPortControlMessage_Port {
	if m != nil {
		return m.Port
	}
	return nil
}

func (x *HostPortControlMessage) GetNetdev() *NetdevPort {
	if x, ok := x.GetPort().(*HostPortControlMessage_Netdev); ok {
		return x.Netdev
	}
	return nil
}

func (x *HostPortControlMessage) GetGenetlink() *GenetlinkPort {
	if x, ok := x.GetPort().(*HostPortControlMessage_Genetlink); ok {
		return x.Genetlink
	}
	return nil
}

type isHostPortControlMessage_Port interface {
	isHostPortControlMessage_Port()
}

type HostPortControlMessage_Netdev struct {
	Netdev *NetdevPort `protobuf:"bytes,4,opt,name=netdev,proto3,oneof"`
}

type HostPortControlMessage_Genetlink struct {
	Genetlink *GenetlinkPort `protobuf:"bytes,5,opt,name=genetlink,proto3,oneof"`
}

func (*HostPortControlMessage_Netdev) isHostPortControlMessage_Port() {}

func (*HostPortControlMessage_Genetlink) isHostPortControlMessage_Port() {}

type Packet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostPort   uint64 `protobuf:"varint,1,opt,name=host_port,json=hostPort,proto3" json:"host_port,omitempty"`
	InputPort  uint64 `protobuf:"varint,2,opt,name=input_port,json=inputPort,proto3" json:"input_port,omitempty"`
	OutputPort uint64 `protobuf:"varint,3,opt,name=output_port,json=outputPort,proto3" json:"output_port,omitempty"`
	Frame      []byte `protobuf:"bytes,4,opt,name=frame,proto3" json:"frame,omitempty"`
}

func (x *Packet) Reset() {
	*x = Packet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_packetio_packetio_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_packetio_packetio_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_packetio_packetio_proto_rawDescGZIP(), []int{5}
}

func (x *Packet) GetHostPort() uint64 {
	if x != nil {
		return x.HostPort
	}
	return 0
}

func (x *Packet) GetInputPort() uint64 {
	if x != nil {
		return x.InputPort
	}
	return 0
}

func (x *Packet) GetOutputPort() uint64 {
	if x != nil {
		return x.OutputPort
	}
	return 0
}

func (x *Packet) GetFrame() []byte {
	if x != nil {
		return x.Frame
	}
	return nil
}

type PacketStreamInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PacketStreamInit) Reset() {
	*x = PacketStreamInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_packetio_packetio_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketStreamInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketStreamInit) ProtoMessage() {}

func (x *PacketStreamInit) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_packetio_packetio_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketStreamInit.ProtoReflect.Descriptor instead.
func (*PacketStreamInit) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_packetio_packetio_proto_rawDescGZIP(), []int{6}
}

type PacketIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//
	//	*PacketIn_Init
	//	*PacketIn_Packet
	Msg isPacketIn_Msg `protobuf_oneof:"msg"`
}

func (x *PacketIn) Reset() {
	*x = PacketIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_packetio_packetio_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketIn) ProtoMessage() {}

func (x *PacketIn) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_packetio_packetio_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketIn.ProtoReflect.Descriptor instead.
func (*PacketIn) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_packetio_packetio_proto_rawDescGZIP(), []int{7}
}

func (m *PacketIn) GetMsg() isPacketIn_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *PacketIn) GetInit() *PacketStreamInit {
	if x, ok := x.GetMsg().(*PacketIn_Init); ok {
		return x.Init
	}
	return nil
}

func (x *PacketIn) GetPacket() *Packet {
	if x, ok := x.GetMsg().(*PacketIn_Packet); ok {
		return x.Packet
	}
	return nil
}

type isPacketIn_Msg interface {
	isPacketIn_Msg()
}

type PacketIn_Init struct {
	Init *PacketStreamInit `protobuf:"bytes,1,opt,name=init,proto3,oneof"`
}

type PacketIn_Packet struct {
	Packet *Packet `protobuf:"bytes,2,opt,name=packet,proto3,oneof"`
}

func (*PacketIn_Init) isPacketIn_Msg() {}

func (*PacketIn_Packet) isPacketIn_Msg() {}

type PacketOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packet *Packet `protobuf:"bytes,1,opt,name=packet,proto3" json:"packet,omitempty"`
}

func (x *PacketOut) Reset() {
	*x = PacketOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_packetio_packetio_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketOut) ProtoMessage() {}

func (x *PacketOut) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_packetio_packetio_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketOut.ProtoReflect.Descriptor instead.
func (*PacketOut) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_packetio_packetio_proto_rawDescGZIP(), []int{8}
}

func (x *PacketOut) GetPacket() *Packet {
	if x != nil {
		return x.Packet
	}
	return nil
}

var File_dataplane_proto_packetio_packetio_proto protoreflect.FileDescriptor

var file_dataplane_proto_packetio_packetio_proto_rawDesc = []byte{
	0x0a, 0x27, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6f, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x6c, 0x75, 0x63, 0x69, 0x75,
	0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x69, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x15, 0x0a,
	0x13, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x49, 0x6e, 0x69, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x16, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x44, 0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x6c, 0x75, 0x63, 0x69, 0x75, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6f, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x00, 0x52,
	0x04, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x20, 0x0a, 0x0a, 0x4e, 0x65,
	0x74, 0x64, 0x65, 0x76, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x0d,
	0x47, 0x65, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x83, 0x02, 0x0a, 0x16,
	0x48, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x3f,
	0x0a, 0x06, 0x6e, 0x65, 0x74, 0x64, 0x65, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x6c, 0x75, 0x63, 0x69, 0x75, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x64, 0x65,
	0x76, 0x50, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x65, 0x74, 0x64, 0x65, 0x76, 0x12,
	0x48, 0x0a, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x75, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6f, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x50, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x09,
	0x67, 0x65, 0x6e, 0x65, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x42, 0x06, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x22, 0x7b, 0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x12,
	0x0a, 0x10, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e,
	0x69, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x12,
	0x41, 0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x6c, 0x75, 0x63, 0x69, 0x75, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6f, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e,
	0x69, 0x74, 0x12, 0x3b, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x75, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6f, 0x2e, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x42,
	0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x46, 0x0a, 0x09, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x4f, 0x75, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x75, 0x73, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6f, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x32, 0xed,
	0x01, 0x0a, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x4f, 0x12, 0x7d, 0x0a, 0x0f, 0x48,
	0x6f, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x31,
	0x2e, 0x6c, 0x75, 0x63, 0x69, 0x75, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6f, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x31, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x75, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6f, 0x2e, 0x48, 0x6f,
	0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x62, 0x0a, 0x0f, 0x43, 0x50,
	0x55, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x23, 0x2e,
	0x6c, 0x75, 0x63, 0x69, 0x75, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6f, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x6e, 0x1a, 0x24, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x75, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6f, 0x2e, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x38,
	0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65,
	0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x69, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dataplane_proto_packetio_packetio_proto_rawDescOnce sync.Once
	file_dataplane_proto_packetio_packetio_proto_rawDescData = file_dataplane_proto_packetio_packetio_proto_rawDesc
)

func file_dataplane_proto_packetio_packetio_proto_rawDescGZIP() []byte {
	file_dataplane_proto_packetio_packetio_proto_rawDescOnce.Do(func() {
		file_dataplane_proto_packetio_packetio_proto_rawDescData = protoimpl.X.CompressGZIP(file_dataplane_proto_packetio_packetio_proto_rawDescData)
	})
	return file_dataplane_proto_packetio_packetio_proto_rawDescData
}

var file_dataplane_proto_packetio_packetio_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_dataplane_proto_packetio_packetio_proto_goTypes = []interface{}{
	(*HostPortControlInit)(nil),    // 0: lucius.dataplane.packetio.HostPortControlInit
	(*HostPortControlRequest)(nil), // 1: lucius.dataplane.packetio.HostPortControlRequest
	(*NetdevPort)(nil),             // 2: lucius.dataplane.packetio.NetdevPort
	(*GenetlinkPort)(nil),          // 3: lucius.dataplane.packetio.GenetlinkPort
	(*HostPortControlMessage)(nil), // 4: lucius.dataplane.packetio.HostPortControlMessage
	(*Packet)(nil),                 // 5: lucius.dataplane.packetio.Packet
	(*PacketStreamInit)(nil),       // 6: lucius.dataplane.packetio.PacketStreamInit
	(*PacketIn)(nil),               // 7: lucius.dataplane.packetio.PacketIn
	(*PacketOut)(nil),              // 8: lucius.dataplane.packetio.PacketOut
	(*status.Status)(nil),          // 9: google.rpc.Status
}
var file_dataplane_proto_packetio_packetio_proto_depIdxs = []int32{
	0, // 0: lucius.dataplane.packetio.HostPortControlRequest.init:type_name -> lucius.dataplane.packetio.HostPortControlInit
	9, // 1: lucius.dataplane.packetio.HostPortControlRequest.status:type_name -> google.rpc.Status
	2, // 2: lucius.dataplane.packetio.HostPortControlMessage.netdev:type_name -> lucius.dataplane.packetio.NetdevPort
	3, // 3: lucius.dataplane.packetio.HostPortControlMessage.genetlink:type_name -> lucius.dataplane.packetio.GenetlinkPort
	6, // 4: lucius.dataplane.packetio.PacketIn.init:type_name -> lucius.dataplane.packetio.PacketStreamInit
	5, // 5: lucius.dataplane.packetio.PacketIn.packet:type_name -> lucius.dataplane.packetio.Packet
	5, // 6: lucius.dataplane.packetio.PacketOut.packet:type_name -> lucius.dataplane.packetio.Packet
	1, // 7: lucius.dataplane.packetio.PacketIO.HostPortControl:input_type -> lucius.dataplane.packetio.HostPortControlRequest
	7, // 8: lucius.dataplane.packetio.PacketIO.CPUPacketStream:input_type -> lucius.dataplane.packetio.PacketIn
	4, // 9: lucius.dataplane.packetio.PacketIO.HostPortControl:output_type -> lucius.dataplane.packetio.HostPortControlMessage
	8, // 10: lucius.dataplane.packetio.PacketIO.CPUPacketStream:output_type -> lucius.dataplane.packetio.PacketOut
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_dataplane_proto_packetio_packetio_proto_init() }
func file_dataplane_proto_packetio_packetio_proto_init() {
	if File_dataplane_proto_packetio_packetio_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dataplane_proto_packetio_packetio_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostPortControlInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_packetio_packetio_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostPortControlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_packetio_packetio_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetdevPort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_packetio_packetio_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenetlinkPort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_packetio_packetio_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostPortControlMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_packetio_packetio_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Packet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_packetio_packetio_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketStreamInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_packetio_packetio_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_packetio_packetio_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dataplane_proto_packetio_packetio_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*HostPortControlRequest_Init)(nil),
		(*HostPortControlRequest_Status)(nil),
	}
	file_dataplane_proto_packetio_packetio_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*HostPortControlMessage_Netdev)(nil),
		(*HostPortControlMessage_Genetlink)(nil),
	}
	file_dataplane_proto_packetio_packetio_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*PacketIn_Init)(nil),
		(*PacketIn_Packet)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dataplane_proto_packetio_packetio_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dataplane_proto_packetio_packetio_proto_goTypes,
		DependencyIndexes: file_dataplane_proto_packetio_packetio_proto_depIdxs,
		MessageInfos:      file_dataplane_proto_packetio_packetio_proto_msgTypes,
	}.Build()
	File_dataplane_proto_packetio_packetio_proto = out.File
	file_dataplane_proto_packetio_packetio_proto_rawDesc = nil
	file_dataplane_proto_packetio_packetio_proto_goTypes = nil
	file_dataplane_proto_packetio_packetio_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PacketIOClient is the client API for PacketIO service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PacketIOClient interface {
	HostPortControl(ctx context.Context, opts ...grpc.CallOption) (PacketIO_HostPortControlClient, error)
	CPUPacketStream(ctx context.Context, opts ...grpc.CallOption) (PacketIO_CPUPacketStreamClient, error)
}

type packetIOClient struct {
	cc grpc.ClientConnInterface
}

func NewPacketIOClient(cc grpc.ClientConnInterface) PacketIOClient {
	return &packetIOClient{cc}
}

func (c *packetIOClient) HostPortControl(ctx context.Context, opts ...grpc.CallOption) (PacketIO_HostPortControlClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PacketIO_serviceDesc.Streams[0], "/lucius.dataplane.packetio.PacketIO/HostPortControl", opts...)
	if err != nil {
		return nil, err
	}
	x := &packetIOHostPortControlClient{stream}
	return x, nil
}

type PacketIO_HostPortControlClient interface {
	Send(*HostPortControlRequest) error
	Recv() (*HostPortControlMessage, error)
	grpc.ClientStream
}

type packetIOHostPortControlClient struct {
	grpc.ClientStream
}

func (x *packetIOHostPortControlClient) Send(m *HostPortControlRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *packetIOHostPortControlClient) Recv() (*HostPortControlMessage, error) {
	m := new(HostPortControlMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *packetIOClient) CPUPacketStream(ctx context.Context, opts ...grpc.CallOption) (PacketIO_CPUPacketStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PacketIO_serviceDesc.Streams[1], "/lucius.dataplane.packetio.PacketIO/CPUPacketStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &packetIOCPUPacketStreamClient{stream}
	return x, nil
}

type PacketIO_CPUPacketStreamClient interface {
	Send(*PacketIn) error
	Recv() (*PacketOut, error)
	grpc.ClientStream
}

type packetIOCPUPacketStreamClient struct {
	grpc.ClientStream
}

func (x *packetIOCPUPacketStreamClient) Send(m *PacketIn) error {
	return x.ClientStream.SendMsg(m)
}

func (x *packetIOCPUPacketStreamClient) Recv() (*PacketOut, error) {
	m := new(PacketOut)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PacketIOServer is the server API for PacketIO service.
type PacketIOServer interface {
	HostPortControl(PacketIO_HostPortControlServer) error
	CPUPacketStream(PacketIO_CPUPacketStreamServer) error
}

// UnimplementedPacketIOServer can be embedded to have forward compatible implementations.
type UnimplementedPacketIOServer struct {
}

func (*UnimplementedPacketIOServer) HostPortControl(PacketIO_HostPortControlServer) error {
	return status1.Errorf(codes.Unimplemented, "method HostPortControl not implemented")
}
func (*UnimplementedPacketIOServer) CPUPacketStream(PacketIO_CPUPacketStreamServer) error {
	return status1.Errorf(codes.Unimplemented, "method CPUPacketStream not implemented")
}

func RegisterPacketIOServer(s *grpc.Server, srv PacketIOServer) {
	s.RegisterService(&_PacketIO_serviceDesc, srv)
}

func _PacketIO_HostPortControl_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PacketIOServer).HostPortControl(&packetIOHostPortControlServer{stream})
}

type PacketIO_HostPortControlServer interface {
	Send(*HostPortControlMessage) error
	Recv() (*HostPortControlRequest, error)
	grpc.ServerStream
}

type packetIOHostPortControlServer struct {
	grpc.ServerStream
}

func (x *packetIOHostPortControlServer) Send(m *HostPortControlMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *packetIOHostPortControlServer) Recv() (*HostPortControlRequest, error) {
	m := new(HostPortControlRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _PacketIO_CPUPacketStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PacketIOServer).CPUPacketStream(&packetIOCPUPacketStreamServer{stream})
}

type PacketIO_CPUPacketStreamServer interface {
	Send(*PacketOut) error
	Recv() (*PacketIn, error)
	grpc.ServerStream
}

type packetIOCPUPacketStreamServer struct {
	grpc.ServerStream
}

func (x *packetIOCPUPacketStreamServer) Send(m *PacketOut) error {
	return x.ServerStream.SendMsg(m)
}

func (x *packetIOCPUPacketStreamServer) Recv() (*PacketIn, error) {
	m := new(PacketIn)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _PacketIO_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lucius.dataplane.packetio.PacketIO",
	HandlerType: (*PacketIOServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "HostPortControl",
			Handler:       _PacketIO_HostPortControl_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "CPUPacketStream",
			Handler:       _PacketIO_CPUPacketStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "dataplane/proto/packetio/packetio.proto",
}
