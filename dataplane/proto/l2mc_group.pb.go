// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: dataplane/proto/l2mc_group.proto

package sai

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type L2McGroupAttr int32

const (
	L2McGroupAttr_L2MC_GROUP_ATTR_UNSPECIFIED       L2McGroupAttr = 0
	L2McGroupAttr_L2MC_GROUP_ATTR_L2MC_OUTPUT_COUNT L2McGroupAttr = 1
	L2McGroupAttr_L2MC_GROUP_ATTR_L2MC_MEMBER_LIST  L2McGroupAttr = 2
)

// Enum value maps for L2McGroupAttr.
var (
	L2McGroupAttr_name = map[int32]string{
		0: "L2MC_GROUP_ATTR_UNSPECIFIED",
		1: "L2MC_GROUP_ATTR_L2MC_OUTPUT_COUNT",
		2: "L2MC_GROUP_ATTR_L2MC_MEMBER_LIST",
	}
	L2McGroupAttr_value = map[string]int32{
		"L2MC_GROUP_ATTR_UNSPECIFIED":       0,
		"L2MC_GROUP_ATTR_L2MC_OUTPUT_COUNT": 1,
		"L2MC_GROUP_ATTR_L2MC_MEMBER_LIST":  2,
	}
)

func (x L2McGroupAttr) Enum() *L2McGroupAttr {
	p := new(L2McGroupAttr)
	*p = x
	return p
}

func (x L2McGroupAttr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (L2McGroupAttr) Descriptor() protoreflect.EnumDescriptor {
	return file_dataplane_proto_l2mc_group_proto_enumTypes[0].Descriptor()
}

func (L2McGroupAttr) Type() protoreflect.EnumType {
	return &file_dataplane_proto_l2mc_group_proto_enumTypes[0]
}

func (x L2McGroupAttr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use L2McGroupAttr.Descriptor instead.
func (L2McGroupAttr) EnumDescriptor() ([]byte, []int) {
	return file_dataplane_proto_l2mc_group_proto_rawDescGZIP(), []int{0}
}

type L2McGroupMemberAttr int32

const (
	L2McGroupMemberAttr_L2MC_GROUP_MEMBER_ATTR_UNSPECIFIED      L2McGroupMemberAttr = 0
	L2McGroupMemberAttr_L2MC_GROUP_MEMBER_ATTR_L2MC_GROUP_ID    L2McGroupMemberAttr = 1
	L2McGroupMemberAttr_L2MC_GROUP_MEMBER_ATTR_L2MC_OUTPUT_ID   L2McGroupMemberAttr = 2
	L2McGroupMemberAttr_L2MC_GROUP_MEMBER_ATTR_L2MC_ENDPOINT_IP L2McGroupMemberAttr = 3
)

// Enum value maps for L2McGroupMemberAttr.
var (
	L2McGroupMemberAttr_name = map[int32]string{
		0: "L2MC_GROUP_MEMBER_ATTR_UNSPECIFIED",
		1: "L2MC_GROUP_MEMBER_ATTR_L2MC_GROUP_ID",
		2: "L2MC_GROUP_MEMBER_ATTR_L2MC_OUTPUT_ID",
		3: "L2MC_GROUP_MEMBER_ATTR_L2MC_ENDPOINT_IP",
	}
	L2McGroupMemberAttr_value = map[string]int32{
		"L2MC_GROUP_MEMBER_ATTR_UNSPECIFIED":      0,
		"L2MC_GROUP_MEMBER_ATTR_L2MC_GROUP_ID":    1,
		"L2MC_GROUP_MEMBER_ATTR_L2MC_OUTPUT_ID":   2,
		"L2MC_GROUP_MEMBER_ATTR_L2MC_ENDPOINT_IP": 3,
	}
)

func (x L2McGroupMemberAttr) Enum() *L2McGroupMemberAttr {
	p := new(L2McGroupMemberAttr)
	*p = x
	return p
}

func (x L2McGroupMemberAttr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (L2McGroupMemberAttr) Descriptor() protoreflect.EnumDescriptor {
	return file_dataplane_proto_l2mc_group_proto_enumTypes[1].Descriptor()
}

func (L2McGroupMemberAttr) Type() protoreflect.EnumType {
	return &file_dataplane_proto_l2mc_group_proto_enumTypes[1]
}

func (x L2McGroupMemberAttr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use L2McGroupMemberAttr.Descriptor instead.
func (L2McGroupMemberAttr) EnumDescriptor() ([]byte, []int) {
	return file_dataplane_proto_l2mc_group_proto_rawDescGZIP(), []int{1}
}

type CreateL2McGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Switch uint64 `protobuf:"varint,1,opt,name=switch,proto3" json:"switch,omitempty"`
}

func (x *CreateL2McGroupRequest) Reset() {
	*x = CreateL2McGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateL2McGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateL2McGroupRequest) ProtoMessage() {}

func (x *CreateL2McGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateL2McGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateL2McGroupRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_l2mc_group_proto_rawDescGZIP(), []int{0}
}

func (x *CreateL2McGroupRequest) GetSwitch() uint64 {
	if x != nil {
		return x.Switch
	}
	return 0
}

type CreateL2McGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *CreateL2McGroupResponse) Reset() {
	*x = CreateL2McGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateL2McGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateL2McGroupResponse) ProtoMessage() {}

func (x *CreateL2McGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateL2McGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateL2McGroupResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_l2mc_group_proto_rawDescGZIP(), []int{1}
}

func (x *CreateL2McGroupResponse) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type RemoveL2McGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *RemoveL2McGroupRequest) Reset() {
	*x = RemoveL2McGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveL2McGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveL2McGroupRequest) ProtoMessage() {}

func (x *RemoveL2McGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveL2McGroupRequest.ProtoReflect.Descriptor instead.
func (*RemoveL2McGroupRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_l2mc_group_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveL2McGroupRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type RemoveL2McGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveL2McGroupResponse) Reset() {
	*x = RemoveL2McGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveL2McGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveL2McGroupResponse) ProtoMessage() {}

func (x *RemoveL2McGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveL2McGroupResponse.ProtoReflect.Descriptor instead.
func (*RemoveL2McGroupResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_l2mc_group_proto_rawDescGZIP(), []int{3}
}

type GetL2McGroupAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid      uint64          `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	AttrType []L2McGroupAttr `protobuf:"varint,2,rep,packed,name=attr_type,json=attrType,proto3,enum=lemming.dataplane.sai.L2McGroupAttr" json:"attr_type,omitempty"`
}

func (x *GetL2McGroupAttributeRequest) Reset() {
	*x = GetL2McGroupAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetL2McGroupAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetL2McGroupAttributeRequest) ProtoMessage() {}

func (x *GetL2McGroupAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetL2McGroupAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetL2McGroupAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_l2mc_group_proto_rawDescGZIP(), []int{4}
}

func (x *GetL2McGroupAttributeRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *GetL2McGroupAttributeRequest) GetAttrType() []L2McGroupAttr {
	if x != nil {
		return x.AttrType
	}
	return nil
}

type GetL2McGroupAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr *L2McGroupAttribute `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr,omitempty"`
}

func (x *GetL2McGroupAttributeResponse) Reset() {
	*x = GetL2McGroupAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetL2McGroupAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetL2McGroupAttributeResponse) ProtoMessage() {}

func (x *GetL2McGroupAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetL2McGroupAttributeResponse.ProtoReflect.Descriptor instead.
func (*GetL2McGroupAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_l2mc_group_proto_rawDescGZIP(), []int{5}
}

func (x *GetL2McGroupAttributeResponse) GetAttr() *L2McGroupAttribute {
	if x != nil {
		return x.Attr
	}
	return nil
}

type CreateL2McGroupMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Switch         uint64  `protobuf:"varint,1,opt,name=switch,proto3" json:"switch,omitempty"`
	L2McGroupId    *uint64 `protobuf:"varint,2,opt,name=l2mc_group_id,json=l2mcGroupId,proto3,oneof" json:"l2mc_group_id,omitempty"`
	L2McOutputId   *uint64 `protobuf:"varint,3,opt,name=l2mc_output_id,json=l2mcOutputId,proto3,oneof" json:"l2mc_output_id,omitempty"`
	L2McEndpointIp []byte  `protobuf:"bytes,4,opt,name=l2mc_endpoint_ip,json=l2mcEndpointIp,proto3,oneof" json:"l2mc_endpoint_ip,omitempty"`
}

func (x *CreateL2McGroupMemberRequest) Reset() {
	*x = CreateL2McGroupMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateL2McGroupMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateL2McGroupMemberRequest) ProtoMessage() {}

func (x *CreateL2McGroupMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateL2McGroupMemberRequest.ProtoReflect.Descriptor instead.
func (*CreateL2McGroupMemberRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_l2mc_group_proto_rawDescGZIP(), []int{6}
}

func (x *CreateL2McGroupMemberRequest) GetSwitch() uint64 {
	if x != nil {
		return x.Switch
	}
	return 0
}

func (x *CreateL2McGroupMemberRequest) GetL2McGroupId() uint64 {
	if x != nil && x.L2McGroupId != nil {
		return *x.L2McGroupId
	}
	return 0
}

func (x *CreateL2McGroupMemberRequest) GetL2McOutputId() uint64 {
	if x != nil && x.L2McOutputId != nil {
		return *x.L2McOutputId
	}
	return 0
}

func (x *CreateL2McGroupMemberRequest) GetL2McEndpointIp() []byte {
	if x != nil {
		return x.L2McEndpointIp
	}
	return nil
}

type CreateL2McGroupMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *CreateL2McGroupMemberResponse) Reset() {
	*x = CreateL2McGroupMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateL2McGroupMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateL2McGroupMemberResponse) ProtoMessage() {}

func (x *CreateL2McGroupMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateL2McGroupMemberResponse.ProtoReflect.Descriptor instead.
func (*CreateL2McGroupMemberResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_l2mc_group_proto_rawDescGZIP(), []int{7}
}

func (x *CreateL2McGroupMemberResponse) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type RemoveL2McGroupMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *RemoveL2McGroupMemberRequest) Reset() {
	*x = RemoveL2McGroupMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveL2McGroupMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveL2McGroupMemberRequest) ProtoMessage() {}

func (x *RemoveL2McGroupMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveL2McGroupMemberRequest.ProtoReflect.Descriptor instead.
func (*RemoveL2McGroupMemberRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_l2mc_group_proto_rawDescGZIP(), []int{8}
}

func (x *RemoveL2McGroupMemberRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type RemoveL2McGroupMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveL2McGroupMemberResponse) Reset() {
	*x = RemoveL2McGroupMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveL2McGroupMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveL2McGroupMemberResponse) ProtoMessage() {}

func (x *RemoveL2McGroupMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveL2McGroupMemberResponse.ProtoReflect.Descriptor instead.
func (*RemoveL2McGroupMemberResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_l2mc_group_proto_rawDescGZIP(), []int{9}
}

type GetL2McGroupMemberAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid      uint64                `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	AttrType []L2McGroupMemberAttr `protobuf:"varint,2,rep,packed,name=attr_type,json=attrType,proto3,enum=lemming.dataplane.sai.L2McGroupMemberAttr" json:"attr_type,omitempty"`
}

func (x *GetL2McGroupMemberAttributeRequest) Reset() {
	*x = GetL2McGroupMemberAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetL2McGroupMemberAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetL2McGroupMemberAttributeRequest) ProtoMessage() {}

func (x *GetL2McGroupMemberAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetL2McGroupMemberAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetL2McGroupMemberAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_l2mc_group_proto_rawDescGZIP(), []int{10}
}

func (x *GetL2McGroupMemberAttributeRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *GetL2McGroupMemberAttributeRequest) GetAttrType() []L2McGroupMemberAttr {
	if x != nil {
		return x.AttrType
	}
	return nil
}

type GetL2McGroupMemberAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr *L2McGroupMemberAttribute `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr,omitempty"`
}

func (x *GetL2McGroupMemberAttributeResponse) Reset() {
	*x = GetL2McGroupMemberAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetL2McGroupMemberAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetL2McGroupMemberAttributeResponse) ProtoMessage() {}

func (x *GetL2McGroupMemberAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_l2mc_group_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetL2McGroupMemberAttributeResponse.ProtoReflect.Descriptor instead.
func (*GetL2McGroupMemberAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_l2mc_group_proto_rawDescGZIP(), []int{11}
}

func (x *GetL2McGroupMemberAttributeResponse) GetAttr() *L2McGroupMemberAttribute {
	if x != nil {
		return x.Attr
	}
	return nil
}

var File_dataplane_proto_l2mc_group_proto protoreflect.FileDescriptor

var file_dataplane_proto_l2mc_group_proto_rawDesc = []byte{
	0x0a, 0x20, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x6c, 0x32, 0x6d, 0x63, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x15, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x1a, 0x1c, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x3a, 0x04, 0x88, 0xb5, 0x18, 0x32, 0x22,
	0x2b, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x16,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x73, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69,
	0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69,
	0x2e, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x52, 0x08,
	0x61, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5e, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c,
	0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x61, 0x74, 0x74,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e,
	0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x22, 0x8b, 0x02, 0x0a, 0x1c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x12, 0x2d, 0x0a, 0x0d, 0x6c, 0x32, 0x6d, 0x63, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x48, 0x00,
	0x52, 0x0b, 0x6c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x2f, 0x0a, 0x0e, 0x6c, 0x32, 0x6d, 0x63, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x02, 0x48, 0x01,
	0x52, 0x0c, 0x6c, 0x32, 0x6d, 0x63, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x33, 0x0a, 0x10, 0x6c, 0x32, 0x6d, 0x63, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x04, 0x80, 0xb5, 0x18,
	0x03, 0x48, 0x02, 0x52, 0x0e, 0x6c, 0x32, 0x6d, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x49, 0x70, 0x88, 0x01, 0x01, 0x3a, 0x04, 0x88, 0xb5, 0x18, 0x33, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x6c, 0x32, 0x6d, 0x63, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x6c, 0x32, 0x6d, 0x63, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x69,
	0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6c, 0x32, 0x6d, 0x63, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x22, 0x31, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x1c, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x1f, 0x0a, 0x1d, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7f, 0x0a, 0x22,
	0x47, 0x65, 0x74, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x6f, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e,
	0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x74, 0x74, 0x72, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x6a, 0x0a,
	0x23, 0x47, 0x65, 0x74, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x4c, 0x32, 0x6d, 0x63, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x2a, 0x7d, 0x0a, 0x0d, 0x4c, 0x32, 0x6d,
	0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x12, 0x1f, 0x0a, 0x1b, 0x4c, 0x32,
	0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x4c,
	0x32, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x4c,
	0x32, 0x4d, 0x43, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x10, 0x01, 0x12, 0x24, 0x0a, 0x20, 0x4c, 0x32, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x4c, 0x32, 0x4d, 0x43, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45,
	0x52, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x02, 0x2a, 0xbf, 0x01, 0x0a, 0x13, 0x4c, 0x32, 0x6d,
	0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x12, 0x26, 0x0a, 0x22, 0x4c, 0x32, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4d,
	0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x28, 0x0a, 0x24, 0x4c, 0x32, 0x4d, 0x43,
	0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x41, 0x54,
	0x54, 0x52, 0x5f, 0x4c, 0x32, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x49, 0x44,
	0x10, 0x01, 0x12, 0x29, 0x0a, 0x25, 0x4c, 0x32, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x4c, 0x32, 0x4d,
	0x43, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x5f, 0x49, 0x44, 0x10, 0x02, 0x12, 0x2b, 0x0a,
	0x27, 0x4c, 0x32, 0x4d, 0x43, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4d, 0x45, 0x4d, 0x42,
	0x45, 0x52, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x4c, 0x32, 0x4d, 0x43, 0x5f, 0x45, 0x4e, 0x44,
	0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x49, 0x50, 0x10, 0x03, 0x32, 0xa1, 0x06, 0x0a, 0x09, 0x4c,
	0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x72, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2d, 0x2e, 0x6c, 0x65,
	0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6c, 0x65, 0x6d,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73,
	0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x0f,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x2d, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x32,
	0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x32, 0x6d,
	0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x84, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x33, 0x2e, 0x6c, 0x65, 0x6d,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73,
	0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x32, 0x6d, 0x63, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x33, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84,
	0x01, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x33, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69,
	0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x32, 0x6d, 0x63,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x32, 0x6d,
	0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x39, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x32, 0x6d, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3a, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x32, 0x6d, 0x63,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x33,
	0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65,
	0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b,
	0x73, 0x61, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dataplane_proto_l2mc_group_proto_rawDescOnce sync.Once
	file_dataplane_proto_l2mc_group_proto_rawDescData = file_dataplane_proto_l2mc_group_proto_rawDesc
)

func file_dataplane_proto_l2mc_group_proto_rawDescGZIP() []byte {
	file_dataplane_proto_l2mc_group_proto_rawDescOnce.Do(func() {
		file_dataplane_proto_l2mc_group_proto_rawDescData = protoimpl.X.CompressGZIP(file_dataplane_proto_l2mc_group_proto_rawDescData)
	})
	return file_dataplane_proto_l2mc_group_proto_rawDescData
}

var file_dataplane_proto_l2mc_group_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_dataplane_proto_l2mc_group_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_dataplane_proto_l2mc_group_proto_goTypes = []interface{}{
	(L2McGroupAttr)(0),                          // 0: lemming.dataplane.sai.L2mcGroupAttr
	(L2McGroupMemberAttr)(0),                    // 1: lemming.dataplane.sai.L2mcGroupMemberAttr
	(*CreateL2McGroupRequest)(nil),              // 2: lemming.dataplane.sai.CreateL2mcGroupRequest
	(*CreateL2McGroupResponse)(nil),             // 3: lemming.dataplane.sai.CreateL2mcGroupResponse
	(*RemoveL2McGroupRequest)(nil),              // 4: lemming.dataplane.sai.RemoveL2mcGroupRequest
	(*RemoveL2McGroupResponse)(nil),             // 5: lemming.dataplane.sai.RemoveL2mcGroupResponse
	(*GetL2McGroupAttributeRequest)(nil),        // 6: lemming.dataplane.sai.GetL2mcGroupAttributeRequest
	(*GetL2McGroupAttributeResponse)(nil),       // 7: lemming.dataplane.sai.GetL2mcGroupAttributeResponse
	(*CreateL2McGroupMemberRequest)(nil),        // 8: lemming.dataplane.sai.CreateL2mcGroupMemberRequest
	(*CreateL2McGroupMemberResponse)(nil),       // 9: lemming.dataplane.sai.CreateL2mcGroupMemberResponse
	(*RemoveL2McGroupMemberRequest)(nil),        // 10: lemming.dataplane.sai.RemoveL2mcGroupMemberRequest
	(*RemoveL2McGroupMemberResponse)(nil),       // 11: lemming.dataplane.sai.RemoveL2mcGroupMemberResponse
	(*GetL2McGroupMemberAttributeRequest)(nil),  // 12: lemming.dataplane.sai.GetL2mcGroupMemberAttributeRequest
	(*GetL2McGroupMemberAttributeResponse)(nil), // 13: lemming.dataplane.sai.GetL2mcGroupMemberAttributeResponse
	(*L2McGroupAttribute)(nil),                  // 14: lemming.dataplane.sai.L2mcGroupAttribute
	(*L2McGroupMemberAttribute)(nil),            // 15: lemming.dataplane.sai.L2mcGroupMemberAttribute
}
var file_dataplane_proto_l2mc_group_proto_depIdxs = []int32{
	0,  // 0: lemming.dataplane.sai.GetL2mcGroupAttributeRequest.attr_type:type_name -> lemming.dataplane.sai.L2mcGroupAttr
	14, // 1: lemming.dataplane.sai.GetL2mcGroupAttributeResponse.attr:type_name -> lemming.dataplane.sai.L2mcGroupAttribute
	1,  // 2: lemming.dataplane.sai.GetL2mcGroupMemberAttributeRequest.attr_type:type_name -> lemming.dataplane.sai.L2mcGroupMemberAttr
	15, // 3: lemming.dataplane.sai.GetL2mcGroupMemberAttributeResponse.attr:type_name -> lemming.dataplane.sai.L2mcGroupMemberAttribute
	2,  // 4: lemming.dataplane.sai.L2mcGroup.CreateL2mcGroup:input_type -> lemming.dataplane.sai.CreateL2mcGroupRequest
	4,  // 5: lemming.dataplane.sai.L2mcGroup.RemoveL2mcGroup:input_type -> lemming.dataplane.sai.RemoveL2mcGroupRequest
	6,  // 6: lemming.dataplane.sai.L2mcGroup.GetL2mcGroupAttribute:input_type -> lemming.dataplane.sai.GetL2mcGroupAttributeRequest
	8,  // 7: lemming.dataplane.sai.L2mcGroup.CreateL2mcGroupMember:input_type -> lemming.dataplane.sai.CreateL2mcGroupMemberRequest
	10, // 8: lemming.dataplane.sai.L2mcGroup.RemoveL2mcGroupMember:input_type -> lemming.dataplane.sai.RemoveL2mcGroupMemberRequest
	12, // 9: lemming.dataplane.sai.L2mcGroup.GetL2mcGroupMemberAttribute:input_type -> lemming.dataplane.sai.GetL2mcGroupMemberAttributeRequest
	3,  // 10: lemming.dataplane.sai.L2mcGroup.CreateL2mcGroup:output_type -> lemming.dataplane.sai.CreateL2mcGroupResponse
	5,  // 11: lemming.dataplane.sai.L2mcGroup.RemoveL2mcGroup:output_type -> lemming.dataplane.sai.RemoveL2mcGroupResponse
	7,  // 12: lemming.dataplane.sai.L2mcGroup.GetL2mcGroupAttribute:output_type -> lemming.dataplane.sai.GetL2mcGroupAttributeResponse
	9,  // 13: lemming.dataplane.sai.L2mcGroup.CreateL2mcGroupMember:output_type -> lemming.dataplane.sai.CreateL2mcGroupMemberResponse
	11, // 14: lemming.dataplane.sai.L2mcGroup.RemoveL2mcGroupMember:output_type -> lemming.dataplane.sai.RemoveL2mcGroupMemberResponse
	13, // 15: lemming.dataplane.sai.L2mcGroup.GetL2mcGroupMemberAttribute:output_type -> lemming.dataplane.sai.GetL2mcGroupMemberAttributeResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_dataplane_proto_l2mc_group_proto_init() }
func file_dataplane_proto_l2mc_group_proto_init() {
	if File_dataplane_proto_l2mc_group_proto != nil {
		return
	}
	file_dataplane_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dataplane_proto_l2mc_group_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateL2McGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_l2mc_group_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateL2McGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_l2mc_group_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveL2McGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_l2mc_group_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveL2McGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_l2mc_group_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetL2McGroupAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_l2mc_group_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetL2McGroupAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_l2mc_group_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateL2McGroupMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_l2mc_group_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateL2McGroupMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_l2mc_group_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveL2McGroupMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_l2mc_group_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveL2McGroupMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_l2mc_group_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetL2McGroupMemberAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_l2mc_group_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetL2McGroupMemberAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dataplane_proto_l2mc_group_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dataplane_proto_l2mc_group_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dataplane_proto_l2mc_group_proto_goTypes,
		DependencyIndexes: file_dataplane_proto_l2mc_group_proto_depIdxs,
		EnumInfos:         file_dataplane_proto_l2mc_group_proto_enumTypes,
		MessageInfos:      file_dataplane_proto_l2mc_group_proto_msgTypes,
	}.Build()
	File_dataplane_proto_l2mc_group_proto = out.File
	file_dataplane_proto_l2mc_group_proto_rawDesc = nil
	file_dataplane_proto_l2mc_group_proto_goTypes = nil
	file_dataplane_proto_l2mc_group_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// L2McGroupClient is the client API for L2McGroup service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type L2McGroupClient interface {
	CreateL2McGroup(ctx context.Context, in *CreateL2McGroupRequest, opts ...grpc.CallOption) (*CreateL2McGroupResponse, error)
	RemoveL2McGroup(ctx context.Context, in *RemoveL2McGroupRequest, opts ...grpc.CallOption) (*RemoveL2McGroupResponse, error)
	GetL2McGroupAttribute(ctx context.Context, in *GetL2McGroupAttributeRequest, opts ...grpc.CallOption) (*GetL2McGroupAttributeResponse, error)
	CreateL2McGroupMember(ctx context.Context, in *CreateL2McGroupMemberRequest, opts ...grpc.CallOption) (*CreateL2McGroupMemberResponse, error)
	RemoveL2McGroupMember(ctx context.Context, in *RemoveL2McGroupMemberRequest, opts ...grpc.CallOption) (*RemoveL2McGroupMemberResponse, error)
	GetL2McGroupMemberAttribute(ctx context.Context, in *GetL2McGroupMemberAttributeRequest, opts ...grpc.CallOption) (*GetL2McGroupMemberAttributeResponse, error)
}

type l2McGroupClient struct {
	cc grpc.ClientConnInterface
}

func NewL2McGroupClient(cc grpc.ClientConnInterface) L2McGroupClient {
	return &l2McGroupClient{cc}
}

func (c *l2McGroupClient) CreateL2McGroup(ctx context.Context, in *CreateL2McGroupRequest, opts ...grpc.CallOption) (*CreateL2McGroupResponse, error) {
	out := new(CreateL2McGroupResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.L2mcGroup/CreateL2mcGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *l2McGroupClient) RemoveL2McGroup(ctx context.Context, in *RemoveL2McGroupRequest, opts ...grpc.CallOption) (*RemoveL2McGroupResponse, error) {
	out := new(RemoveL2McGroupResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.L2mcGroup/RemoveL2mcGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *l2McGroupClient) GetL2McGroupAttribute(ctx context.Context, in *GetL2McGroupAttributeRequest, opts ...grpc.CallOption) (*GetL2McGroupAttributeResponse, error) {
	out := new(GetL2McGroupAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.L2mcGroup/GetL2mcGroupAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *l2McGroupClient) CreateL2McGroupMember(ctx context.Context, in *CreateL2McGroupMemberRequest, opts ...grpc.CallOption) (*CreateL2McGroupMemberResponse, error) {
	out := new(CreateL2McGroupMemberResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.L2mcGroup/CreateL2mcGroupMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *l2McGroupClient) RemoveL2McGroupMember(ctx context.Context, in *RemoveL2McGroupMemberRequest, opts ...grpc.CallOption) (*RemoveL2McGroupMemberResponse, error) {
	out := new(RemoveL2McGroupMemberResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.L2mcGroup/RemoveL2mcGroupMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *l2McGroupClient) GetL2McGroupMemberAttribute(ctx context.Context, in *GetL2McGroupMemberAttributeRequest, opts ...grpc.CallOption) (*GetL2McGroupMemberAttributeResponse, error) {
	out := new(GetL2McGroupMemberAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.L2mcGroup/GetL2mcGroupMemberAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// L2McGroupServer is the server API for L2McGroup service.
type L2McGroupServer interface {
	CreateL2McGroup(context.Context, *CreateL2McGroupRequest) (*CreateL2McGroupResponse, error)
	RemoveL2McGroup(context.Context, *RemoveL2McGroupRequest) (*RemoveL2McGroupResponse, error)
	GetL2McGroupAttribute(context.Context, *GetL2McGroupAttributeRequest) (*GetL2McGroupAttributeResponse, error)
	CreateL2McGroupMember(context.Context, *CreateL2McGroupMemberRequest) (*CreateL2McGroupMemberResponse, error)
	RemoveL2McGroupMember(context.Context, *RemoveL2McGroupMemberRequest) (*RemoveL2McGroupMemberResponse, error)
	GetL2McGroupMemberAttribute(context.Context, *GetL2McGroupMemberAttributeRequest) (*GetL2McGroupMemberAttributeResponse, error)
}

// UnimplementedL2McGroupServer can be embedded to have forward compatible implementations.
type UnimplementedL2McGroupServer struct {
}

func (*UnimplementedL2McGroupServer) CreateL2McGroup(context.Context, *CreateL2McGroupRequest) (*CreateL2McGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateL2McGroup not implemented")
}
func (*UnimplementedL2McGroupServer) RemoveL2McGroup(context.Context, *RemoveL2McGroupRequest) (*RemoveL2McGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveL2McGroup not implemented")
}
func (*UnimplementedL2McGroupServer) GetL2McGroupAttribute(context.Context, *GetL2McGroupAttributeRequest) (*GetL2McGroupAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetL2McGroupAttribute not implemented")
}
func (*UnimplementedL2McGroupServer) CreateL2McGroupMember(context.Context, *CreateL2McGroupMemberRequest) (*CreateL2McGroupMemberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateL2McGroupMember not implemented")
}
func (*UnimplementedL2McGroupServer) RemoveL2McGroupMember(context.Context, *RemoveL2McGroupMemberRequest) (*RemoveL2McGroupMemberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveL2McGroupMember not implemented")
}
func (*UnimplementedL2McGroupServer) GetL2McGroupMemberAttribute(context.Context, *GetL2McGroupMemberAttributeRequest) (*GetL2McGroupMemberAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetL2McGroupMemberAttribute not implemented")
}

func RegisterL2McGroupServer(s *grpc.Server, srv L2McGroupServer) {
	s.RegisterService(&_L2McGroup_serviceDesc, srv)
}

func _L2McGroup_CreateL2McGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateL2McGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(L2McGroupServer).CreateL2McGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.L2mcGroup/CreateL2McGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(L2McGroupServer).CreateL2McGroup(ctx, req.(*CreateL2McGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _L2McGroup_RemoveL2McGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveL2McGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(L2McGroupServer).RemoveL2McGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.L2mcGroup/RemoveL2McGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(L2McGroupServer).RemoveL2McGroup(ctx, req.(*RemoveL2McGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _L2McGroup_GetL2McGroupAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetL2McGroupAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(L2McGroupServer).GetL2McGroupAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.L2mcGroup/GetL2McGroupAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(L2McGroupServer).GetL2McGroupAttribute(ctx, req.(*GetL2McGroupAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _L2McGroup_CreateL2McGroupMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateL2McGroupMemberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(L2McGroupServer).CreateL2McGroupMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.L2mcGroup/CreateL2McGroupMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(L2McGroupServer).CreateL2McGroupMember(ctx, req.(*CreateL2McGroupMemberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _L2McGroup_RemoveL2McGroupMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveL2McGroupMemberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(L2McGroupServer).RemoveL2McGroupMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.L2mcGroup/RemoveL2McGroupMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(L2McGroupServer).RemoveL2McGroupMember(ctx, req.(*RemoveL2McGroupMemberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _L2McGroup_GetL2McGroupMemberAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetL2McGroupMemberAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(L2McGroupServer).GetL2McGroupMemberAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.L2mcGroup/GetL2McGroupMemberAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(L2McGroupServer).GetL2McGroupMemberAttribute(ctx, req.(*GetL2McGroupMemberAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _L2McGroup_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lemming.dataplane.sai.L2mcGroup",
	HandlerType: (*L2McGroupServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateL2mcGroup",
			Handler:    _L2McGroup_CreateL2McGroup_Handler,
		},
		{
			MethodName: "RemoveL2mcGroup",
			Handler:    _L2McGroup_RemoveL2McGroup_Handler,
		},
		{
			MethodName: "GetL2mcGroupAttribute",
			Handler:    _L2McGroup_GetL2McGroupAttribute_Handler,
		},
		{
			MethodName: "CreateL2mcGroupMember",
			Handler:    _L2McGroup_CreateL2McGroupMember_Handler,
		},
		{
			MethodName: "RemoveL2mcGroupMember",
			Handler:    _L2McGroup_RemoveL2McGroupMember_Handler,
		},
		{
			MethodName: "GetL2mcGroupMemberAttribute",
			Handler:    _L2McGroup_GetL2McGroupMemberAttribute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dataplane/proto/l2mc_group.proto",
}
