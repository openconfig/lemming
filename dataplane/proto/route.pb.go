// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: dataplane/proto/route.proto

package sai

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RouteEntryAttr int32

const (
	RouteEntryAttr_ROUTE_ENTRY_ATTR_UNSPECIFIED    RouteEntryAttr = 0
	RouteEntryAttr_ROUTE_ENTRY_ATTR_PACKET_ACTION  RouteEntryAttr = 1
	RouteEntryAttr_ROUTE_ENTRY_ATTR_USER_TRAP_ID   RouteEntryAttr = 2
	RouteEntryAttr_ROUTE_ENTRY_ATTR_NEXT_HOP_ID    RouteEntryAttr = 3
	RouteEntryAttr_ROUTE_ENTRY_ATTR_META_DATA      RouteEntryAttr = 4
	RouteEntryAttr_ROUTE_ENTRY_ATTR_IP_ADDR_FAMILY RouteEntryAttr = 5
	RouteEntryAttr_ROUTE_ENTRY_ATTR_COUNTER_ID     RouteEntryAttr = 6
)

// Enum value maps for RouteEntryAttr.
var (
	RouteEntryAttr_name = map[int32]string{
		0: "ROUTE_ENTRY_ATTR_UNSPECIFIED",
		1: "ROUTE_ENTRY_ATTR_PACKET_ACTION",
		2: "ROUTE_ENTRY_ATTR_USER_TRAP_ID",
		3: "ROUTE_ENTRY_ATTR_NEXT_HOP_ID",
		4: "ROUTE_ENTRY_ATTR_META_DATA",
		5: "ROUTE_ENTRY_ATTR_IP_ADDR_FAMILY",
		6: "ROUTE_ENTRY_ATTR_COUNTER_ID",
	}
	RouteEntryAttr_value = map[string]int32{
		"ROUTE_ENTRY_ATTR_UNSPECIFIED":    0,
		"ROUTE_ENTRY_ATTR_PACKET_ACTION":  1,
		"ROUTE_ENTRY_ATTR_USER_TRAP_ID":   2,
		"ROUTE_ENTRY_ATTR_NEXT_HOP_ID":    3,
		"ROUTE_ENTRY_ATTR_META_DATA":      4,
		"ROUTE_ENTRY_ATTR_IP_ADDR_FAMILY": 5,
		"ROUTE_ENTRY_ATTR_COUNTER_ID":     6,
	}
)

func (x RouteEntryAttr) Enum() *RouteEntryAttr {
	p := new(RouteEntryAttr)
	*p = x
	return p
}

func (x RouteEntryAttr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RouteEntryAttr) Descriptor() protoreflect.EnumDescriptor {
	return file_dataplane_proto_route_proto_enumTypes[0].Descriptor()
}

func (RouteEntryAttr) Type() protoreflect.EnumType {
	return &file_dataplane_proto_route_proto_enumTypes[0]
}

func (x RouteEntryAttr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RouteEntryAttr.Descriptor instead.
func (RouteEntryAttr) EnumDescriptor() ([]byte, []int) {
	return file_dataplane_proto_route_proto_rawDescGZIP(), []int{0}
}

type CreateRouteEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry        *RouteEntry   `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	PacketAction *PacketAction `protobuf:"varint,2,opt,name=packet_action,json=packetAction,proto3,enum=lemming.dataplane.sai.PacketAction,oneof" json:"packet_action,omitempty"`
	UserTrapId   *uint64       `protobuf:"varint,3,opt,name=user_trap_id,json=userTrapId,proto3,oneof" json:"user_trap_id,omitempty"`
	NextHopId    *uint64       `protobuf:"varint,4,opt,name=next_hop_id,json=nextHopId,proto3,oneof" json:"next_hop_id,omitempty"`
	MetaData     *uint32       `protobuf:"varint,5,opt,name=meta_data,json=metaData,proto3,oneof" json:"meta_data,omitempty"`
	CounterId    *uint64       `protobuf:"varint,6,opt,name=counter_id,json=counterId,proto3,oneof" json:"counter_id,omitempty"`
}

func (x *CreateRouteEntryRequest) Reset() {
	*x = CreateRouteEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_route_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRouteEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouteEntryRequest) ProtoMessage() {}

func (x *CreateRouteEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_route_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouteEntryRequest.ProtoReflect.Descriptor instead.
func (*CreateRouteEntryRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_route_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRouteEntryRequest) GetEntry() *RouteEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *CreateRouteEntryRequest) GetPacketAction() PacketAction {
	if x != nil && x.PacketAction != nil {
		return *x.PacketAction
	}
	return PacketAction_PACKET_ACTION_UNSPECIFIED
}

func (x *CreateRouteEntryRequest) GetUserTrapId() uint64 {
	if x != nil && x.UserTrapId != nil {
		return *x.UserTrapId
	}
	return 0
}

func (x *CreateRouteEntryRequest) GetNextHopId() uint64 {
	if x != nil && x.NextHopId != nil {
		return *x.NextHopId
	}
	return 0
}

func (x *CreateRouteEntryRequest) GetMetaData() uint32 {
	if x != nil && x.MetaData != nil {
		return *x.MetaData
	}
	return 0
}

func (x *CreateRouteEntryRequest) GetCounterId() uint64 {
	if x != nil && x.CounterId != nil {
		return *x.CounterId
	}
	return 0
}

type CreateRouteEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRouteEntryResponse) Reset() {
	*x = CreateRouteEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_route_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRouteEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouteEntryResponse) ProtoMessage() {}

func (x *CreateRouteEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_route_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouteEntryResponse.ProtoReflect.Descriptor instead.
func (*CreateRouteEntryResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_route_proto_rawDescGZIP(), []int{1}
}

type RemoveRouteEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry *RouteEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *RemoveRouteEntryRequest) Reset() {
	*x = RemoveRouteEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_route_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRouteEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRouteEntryRequest) ProtoMessage() {}

func (x *RemoveRouteEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_route_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRouteEntryRequest.ProtoReflect.Descriptor instead.
func (*RemoveRouteEntryRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_route_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveRouteEntryRequest) GetEntry() *RouteEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type RemoveRouteEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveRouteEntryResponse) Reset() {
	*x = RemoveRouteEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_route_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRouteEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRouteEntryResponse) ProtoMessage() {}

func (x *RemoveRouteEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_route_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRouteEntryResponse.ProtoReflect.Descriptor instead.
func (*RemoveRouteEntryResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_route_proto_rawDescGZIP(), []int{3}
}

type SetRouteEntryAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry        *RouteEntry   `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	PacketAction *PacketAction `protobuf:"varint,2,opt,name=packet_action,json=packetAction,proto3,enum=lemming.dataplane.sai.PacketAction,oneof" json:"packet_action,omitempty"`
	UserTrapId   *uint64       `protobuf:"varint,3,opt,name=user_trap_id,json=userTrapId,proto3,oneof" json:"user_trap_id,omitempty"`
	NextHopId    *uint64       `protobuf:"varint,4,opt,name=next_hop_id,json=nextHopId,proto3,oneof" json:"next_hop_id,omitempty"`
	MetaData     *uint32       `protobuf:"varint,5,opt,name=meta_data,json=metaData,proto3,oneof" json:"meta_data,omitempty"`
	CounterId    *uint64       `protobuf:"varint,6,opt,name=counter_id,json=counterId,proto3,oneof" json:"counter_id,omitempty"`
}

func (x *SetRouteEntryAttributeRequest) Reset() {
	*x = SetRouteEntryAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_route_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRouteEntryAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRouteEntryAttributeRequest) ProtoMessage() {}

func (x *SetRouteEntryAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_route_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRouteEntryAttributeRequest.ProtoReflect.Descriptor instead.
func (*SetRouteEntryAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_route_proto_rawDescGZIP(), []int{4}
}

func (x *SetRouteEntryAttributeRequest) GetEntry() *RouteEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *SetRouteEntryAttributeRequest) GetPacketAction() PacketAction {
	if x != nil && x.PacketAction != nil {
		return *x.PacketAction
	}
	return PacketAction_PACKET_ACTION_UNSPECIFIED
}

func (x *SetRouteEntryAttributeRequest) GetUserTrapId() uint64 {
	if x != nil && x.UserTrapId != nil {
		return *x.UserTrapId
	}
	return 0
}

func (x *SetRouteEntryAttributeRequest) GetNextHopId() uint64 {
	if x != nil && x.NextHopId != nil {
		return *x.NextHopId
	}
	return 0
}

func (x *SetRouteEntryAttributeRequest) GetMetaData() uint32 {
	if x != nil && x.MetaData != nil {
		return *x.MetaData
	}
	return 0
}

func (x *SetRouteEntryAttributeRequest) GetCounterId() uint64 {
	if x != nil && x.CounterId != nil {
		return *x.CounterId
	}
	return 0
}

type SetRouteEntryAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetRouteEntryAttributeResponse) Reset() {
	*x = SetRouteEntryAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_route_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRouteEntryAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRouteEntryAttributeResponse) ProtoMessage() {}

func (x *SetRouteEntryAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_route_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRouteEntryAttributeResponse.ProtoReflect.Descriptor instead.
func (*SetRouteEntryAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_route_proto_rawDescGZIP(), []int{5}
}

type GetRouteEntryAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry    *RouteEntry      `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	AttrType []RouteEntryAttr `protobuf:"varint,2,rep,packed,name=attr_type,json=attrType,proto3,enum=lemming.dataplane.sai.RouteEntryAttr" json:"attr_type,omitempty"`
}

func (x *GetRouteEntryAttributeRequest) Reset() {
	*x = GetRouteEntryAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_route_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouteEntryAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteEntryAttributeRequest) ProtoMessage() {}

func (x *GetRouteEntryAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_route_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteEntryAttributeRequest.ProtoReflect.Descriptor instead.
func (*GetRouteEntryAttributeRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_route_proto_rawDescGZIP(), []int{6}
}

func (x *GetRouteEntryAttributeRequest) GetEntry() *RouteEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *GetRouteEntryAttributeRequest) GetAttrType() []RouteEntryAttr {
	if x != nil {
		return x.AttrType
	}
	return nil
}

type GetRouteEntryAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr *RouteEntryAttribute `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr,omitempty"`
}

func (x *GetRouteEntryAttributeResponse) Reset() {
	*x = GetRouteEntryAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_route_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouteEntryAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteEntryAttributeResponse) ProtoMessage() {}

func (x *GetRouteEntryAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_route_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteEntryAttributeResponse.ProtoReflect.Descriptor instead.
func (*GetRouteEntryAttributeResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_route_proto_rawDescGZIP(), []int{7}
}

func (x *GetRouteEntryAttributeResponse) GetAttr() *RouteEntryAttribute {
	if x != nil {
		return x.Attr
	}
	return nil
}

type CreateRouteEntriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reqs []*CreateRouteEntryRequest `protobuf:"bytes,1,rep,name=reqs,proto3" json:"reqs,omitempty"`
}

func (x *CreateRouteEntriesRequest) Reset() {
	*x = CreateRouteEntriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_route_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRouteEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouteEntriesRequest) ProtoMessage() {}

func (x *CreateRouteEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_route_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouteEntriesRequest.ProtoReflect.Descriptor instead.
func (*CreateRouteEntriesRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_route_proto_rawDescGZIP(), []int{8}
}

func (x *CreateRouteEntriesRequest) GetReqs() []*CreateRouteEntryRequest {
	if x != nil {
		return x.Reqs
	}
	return nil
}

type CreateRouteEntriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resps []*CreateRouteEntryResponse `protobuf:"bytes,1,rep,name=resps,proto3" json:"resps,omitempty"`
}

func (x *CreateRouteEntriesResponse) Reset() {
	*x = CreateRouteEntriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_route_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRouteEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouteEntriesResponse) ProtoMessage() {}

func (x *CreateRouteEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_route_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouteEntriesResponse.ProtoReflect.Descriptor instead.
func (*CreateRouteEntriesResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_route_proto_rawDescGZIP(), []int{9}
}

func (x *CreateRouteEntriesResponse) GetResps() []*CreateRouteEntryResponse {
	if x != nil {
		return x.Resps
	}
	return nil
}

var File_dataplane_proto_route_proto protoreflect.FileDescriptor

var file_dataplane_proto_route_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6c,
	0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x73, 0x61, 0x69, 0x1a, 0x1c, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa7, 0x03, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37,
	0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x53, 0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23,
	0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x02, 0x48, 0x01, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x72, 0x61, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0b, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04,
	0x80, 0xb5, 0x18, 0x03, 0x48, 0x02, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x04, 0x48, 0x03, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0a,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x04, 0x80, 0xb5, 0x18, 0x06, 0x48, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x3a, 0x04, 0x88, 0xb5, 0x18, 0x26, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x1a, 0x0a, 0x18,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa7, 0x03, 0x0a, 0x1d, 0x53, 0x65, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x65, 0x6d, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61,
	0x69, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x53, 0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6c, 0x65, 0x6d,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73,
	0x61, 0x69, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x04, 0x80, 0xb5, 0x18, 0x01, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x74, 0x72, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04,
	0x80, 0xb5, 0x18, 0x02, 0x48, 0x01, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x70,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x03,
	0x48, 0x02, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x26, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x04, 0x80, 0xb5, 0x18, 0x04, 0x48, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0x80, 0xb5,
	0x18, 0x06, 0x48, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x72,
	0x61, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68,
	0x6f, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x42, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x60, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x04, 0x61, 0x74, 0x74, 0x72, 0x22, 0x5f, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x42, 0x0a, 0x04, 0x72, 0x65, 0x71, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x04, 0x72, 0x65, 0x71, 0x73, 0x22, 0x63, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x70, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x72, 0x65, 0x73, 0x70, 0x73, 0x2a, 0x81, 0x02, 0x0a, 0x0e,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x12, 0x20,
	0x0a, 0x1c, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54,
	0x54, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x22, 0x0a, 0x1e, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f,
	0x41, 0x54, 0x54, 0x52, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x45, 0x4e,
	0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x52,
	0x41, 0x50, 0x5f, 0x49, 0x44, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x4f, 0x55, 0x54, 0x45,
	0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x4e, 0x45, 0x58, 0x54,
	0x5f, 0x48, 0x4f, 0x50, 0x5f, 0x49, 0x44, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x4f, 0x55,
	0x54, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x4d, 0x45,
	0x54, 0x41, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x04, 0x12, 0x23, 0x0a, 0x1f, 0x52, 0x4f, 0x55,
	0x54, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x5f, 0x49, 0x50,
	0x5f, 0x41, 0x44, 0x44, 0x52, 0x5f, 0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x10, 0x05, 0x12, 0x1f,
	0x0a, 0x1b, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x54,
	0x54, 0x52, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x10, 0x06, 0x32,
	0x86, 0x05, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x75, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2e, 0x2e,
	0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x75, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x2e, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x34, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69,
	0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69,
	0x2e, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x87, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x34, 0x2e, 0x6c,
	0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x73, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x30, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x73, 0x61, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2f, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x73, 0x61, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dataplane_proto_route_proto_rawDescOnce sync.Once
	file_dataplane_proto_route_proto_rawDescData = file_dataplane_proto_route_proto_rawDesc
)

func file_dataplane_proto_route_proto_rawDescGZIP() []byte {
	file_dataplane_proto_route_proto_rawDescOnce.Do(func() {
		file_dataplane_proto_route_proto_rawDescData = protoimpl.X.CompressGZIP(file_dataplane_proto_route_proto_rawDescData)
	})
	return file_dataplane_proto_route_proto_rawDescData
}

var file_dataplane_proto_route_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dataplane_proto_route_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_dataplane_proto_route_proto_goTypes = []interface{}{
	(RouteEntryAttr)(0),                    // 0: lemming.dataplane.sai.RouteEntryAttr
	(*CreateRouteEntryRequest)(nil),        // 1: lemming.dataplane.sai.CreateRouteEntryRequest
	(*CreateRouteEntryResponse)(nil),       // 2: lemming.dataplane.sai.CreateRouteEntryResponse
	(*RemoveRouteEntryRequest)(nil),        // 3: lemming.dataplane.sai.RemoveRouteEntryRequest
	(*RemoveRouteEntryResponse)(nil),       // 4: lemming.dataplane.sai.RemoveRouteEntryResponse
	(*SetRouteEntryAttributeRequest)(nil),  // 5: lemming.dataplane.sai.SetRouteEntryAttributeRequest
	(*SetRouteEntryAttributeResponse)(nil), // 6: lemming.dataplane.sai.SetRouteEntryAttributeResponse
	(*GetRouteEntryAttributeRequest)(nil),  // 7: lemming.dataplane.sai.GetRouteEntryAttributeRequest
	(*GetRouteEntryAttributeResponse)(nil), // 8: lemming.dataplane.sai.GetRouteEntryAttributeResponse
	(*CreateRouteEntriesRequest)(nil),      // 9: lemming.dataplane.sai.CreateRouteEntriesRequest
	(*CreateRouteEntriesResponse)(nil),     // 10: lemming.dataplane.sai.CreateRouteEntriesResponse
	(*RouteEntry)(nil),                     // 11: lemming.dataplane.sai.RouteEntry
	(PacketAction)(0),                      // 12: lemming.dataplane.sai.PacketAction
	(*RouteEntryAttribute)(nil),            // 13: lemming.dataplane.sai.RouteEntryAttribute
}
var file_dataplane_proto_route_proto_depIdxs = []int32{
	11, // 0: lemming.dataplane.sai.CreateRouteEntryRequest.entry:type_name -> lemming.dataplane.sai.RouteEntry
	12, // 1: lemming.dataplane.sai.CreateRouteEntryRequest.packet_action:type_name -> lemming.dataplane.sai.PacketAction
	11, // 2: lemming.dataplane.sai.RemoveRouteEntryRequest.entry:type_name -> lemming.dataplane.sai.RouteEntry
	11, // 3: lemming.dataplane.sai.SetRouteEntryAttributeRequest.entry:type_name -> lemming.dataplane.sai.RouteEntry
	12, // 4: lemming.dataplane.sai.SetRouteEntryAttributeRequest.packet_action:type_name -> lemming.dataplane.sai.PacketAction
	11, // 5: lemming.dataplane.sai.GetRouteEntryAttributeRequest.entry:type_name -> lemming.dataplane.sai.RouteEntry
	0,  // 6: lemming.dataplane.sai.GetRouteEntryAttributeRequest.attr_type:type_name -> lemming.dataplane.sai.RouteEntryAttr
	13, // 7: lemming.dataplane.sai.GetRouteEntryAttributeResponse.attr:type_name -> lemming.dataplane.sai.RouteEntryAttribute
	1,  // 8: lemming.dataplane.sai.CreateRouteEntriesRequest.reqs:type_name -> lemming.dataplane.sai.CreateRouteEntryRequest
	2,  // 9: lemming.dataplane.sai.CreateRouteEntriesResponse.resps:type_name -> lemming.dataplane.sai.CreateRouteEntryResponse
	1,  // 10: lemming.dataplane.sai.Route.CreateRouteEntry:input_type -> lemming.dataplane.sai.CreateRouteEntryRequest
	3,  // 11: lemming.dataplane.sai.Route.RemoveRouteEntry:input_type -> lemming.dataplane.sai.RemoveRouteEntryRequest
	5,  // 12: lemming.dataplane.sai.Route.SetRouteEntryAttribute:input_type -> lemming.dataplane.sai.SetRouteEntryAttributeRequest
	7,  // 13: lemming.dataplane.sai.Route.GetRouteEntryAttribute:input_type -> lemming.dataplane.sai.GetRouteEntryAttributeRequest
	9,  // 14: lemming.dataplane.sai.Route.CreateRouteEntries:input_type -> lemming.dataplane.sai.CreateRouteEntriesRequest
	2,  // 15: lemming.dataplane.sai.Route.CreateRouteEntry:output_type -> lemming.dataplane.sai.CreateRouteEntryResponse
	4,  // 16: lemming.dataplane.sai.Route.RemoveRouteEntry:output_type -> lemming.dataplane.sai.RemoveRouteEntryResponse
	6,  // 17: lemming.dataplane.sai.Route.SetRouteEntryAttribute:output_type -> lemming.dataplane.sai.SetRouteEntryAttributeResponse
	8,  // 18: lemming.dataplane.sai.Route.GetRouteEntryAttribute:output_type -> lemming.dataplane.sai.GetRouteEntryAttributeResponse
	10, // 19: lemming.dataplane.sai.Route.CreateRouteEntries:output_type -> lemming.dataplane.sai.CreateRouteEntriesResponse
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_dataplane_proto_route_proto_init() }
func file_dataplane_proto_route_proto_init() {
	if File_dataplane_proto_route_proto != nil {
		return
	}
	file_dataplane_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dataplane_proto_route_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRouteEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_route_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRouteEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_route_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRouteEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_route_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRouteEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_route_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRouteEntryAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_route_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRouteEntryAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_route_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouteEntryAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_route_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouteEntryAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_route_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRouteEntriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_route_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRouteEntriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dataplane_proto_route_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_dataplane_proto_route_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dataplane_proto_route_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dataplane_proto_route_proto_goTypes,
		DependencyIndexes: file_dataplane_proto_route_proto_depIdxs,
		EnumInfos:         file_dataplane_proto_route_proto_enumTypes,
		MessageInfos:      file_dataplane_proto_route_proto_msgTypes,
	}.Build()
	File_dataplane_proto_route_proto = out.File
	file_dataplane_proto_route_proto_rawDesc = nil
	file_dataplane_proto_route_proto_goTypes = nil
	file_dataplane_proto_route_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RouteClient is the client API for Route service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RouteClient interface {
	CreateRouteEntry(ctx context.Context, in *CreateRouteEntryRequest, opts ...grpc.CallOption) (*CreateRouteEntryResponse, error)
	RemoveRouteEntry(ctx context.Context, in *RemoveRouteEntryRequest, opts ...grpc.CallOption) (*RemoveRouteEntryResponse, error)
	SetRouteEntryAttribute(ctx context.Context, in *SetRouteEntryAttributeRequest, opts ...grpc.CallOption) (*SetRouteEntryAttributeResponse, error)
	GetRouteEntryAttribute(ctx context.Context, in *GetRouteEntryAttributeRequest, opts ...grpc.CallOption) (*GetRouteEntryAttributeResponse, error)
	CreateRouteEntries(ctx context.Context, in *CreateRouteEntriesRequest, opts ...grpc.CallOption) (*CreateRouteEntriesResponse, error)
}

type routeClient struct {
	cc grpc.ClientConnInterface
}

func NewRouteClient(cc grpc.ClientConnInterface) RouteClient {
	return &routeClient{cc}
}

func (c *routeClient) CreateRouteEntry(ctx context.Context, in *CreateRouteEntryRequest, opts ...grpc.CallOption) (*CreateRouteEntryResponse, error) {
	out := new(CreateRouteEntryResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Route/CreateRouteEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routeClient) RemoveRouteEntry(ctx context.Context, in *RemoveRouteEntryRequest, opts ...grpc.CallOption) (*RemoveRouteEntryResponse, error) {
	out := new(RemoveRouteEntryResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Route/RemoveRouteEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routeClient) SetRouteEntryAttribute(ctx context.Context, in *SetRouteEntryAttributeRequest, opts ...grpc.CallOption) (*SetRouteEntryAttributeResponse, error) {
	out := new(SetRouteEntryAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Route/SetRouteEntryAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routeClient) GetRouteEntryAttribute(ctx context.Context, in *GetRouteEntryAttributeRequest, opts ...grpc.CallOption) (*GetRouteEntryAttributeResponse, error) {
	out := new(GetRouteEntryAttributeResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Route/GetRouteEntryAttribute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routeClient) CreateRouteEntries(ctx context.Context, in *CreateRouteEntriesRequest, opts ...grpc.CallOption) (*CreateRouteEntriesResponse, error) {
	out := new(CreateRouteEntriesResponse)
	err := c.cc.Invoke(ctx, "/lemming.dataplane.sai.Route/CreateRouteEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RouteServer is the server API for Route service.
type RouteServer interface {
	CreateRouteEntry(context.Context, *CreateRouteEntryRequest) (*CreateRouteEntryResponse, error)
	RemoveRouteEntry(context.Context, *RemoveRouteEntryRequest) (*RemoveRouteEntryResponse, error)
	SetRouteEntryAttribute(context.Context, *SetRouteEntryAttributeRequest) (*SetRouteEntryAttributeResponse, error)
	GetRouteEntryAttribute(context.Context, *GetRouteEntryAttributeRequest) (*GetRouteEntryAttributeResponse, error)
	CreateRouteEntries(context.Context, *CreateRouteEntriesRequest) (*CreateRouteEntriesResponse, error)
}

// UnimplementedRouteServer can be embedded to have forward compatible implementations.
type UnimplementedRouteServer struct {
}

func (*UnimplementedRouteServer) CreateRouteEntry(context.Context, *CreateRouteEntryRequest) (*CreateRouteEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRouteEntry not implemented")
}
func (*UnimplementedRouteServer) RemoveRouteEntry(context.Context, *RemoveRouteEntryRequest) (*RemoveRouteEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveRouteEntry not implemented")
}
func (*UnimplementedRouteServer) SetRouteEntryAttribute(context.Context, *SetRouteEntryAttributeRequest) (*SetRouteEntryAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRouteEntryAttribute not implemented")
}
func (*UnimplementedRouteServer) GetRouteEntryAttribute(context.Context, *GetRouteEntryAttributeRequest) (*GetRouteEntryAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRouteEntryAttribute not implemented")
}
func (*UnimplementedRouteServer) CreateRouteEntries(context.Context, *CreateRouteEntriesRequest) (*CreateRouteEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRouteEntries not implemented")
}

func RegisterRouteServer(s *grpc.Server, srv RouteServer) {
	s.RegisterService(&_Route_serviceDesc, srv)
}

func _Route_CreateRouteEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRouteEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteServer).CreateRouteEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Route/CreateRouteEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteServer).CreateRouteEntry(ctx, req.(*CreateRouteEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Route_RemoveRouteEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRouteEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteServer).RemoveRouteEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Route/RemoveRouteEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteServer).RemoveRouteEntry(ctx, req.(*RemoveRouteEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Route_SetRouteEntryAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRouteEntryAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteServer).SetRouteEntryAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Route/SetRouteEntryAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteServer).SetRouteEntryAttribute(ctx, req.(*SetRouteEntryAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Route_GetRouteEntryAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRouteEntryAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteServer).GetRouteEntryAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Route/GetRouteEntryAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteServer).GetRouteEntryAttribute(ctx, req.(*GetRouteEntryAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Route_CreateRouteEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRouteEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteServer).CreateRouteEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lemming.dataplane.sai.Route/CreateRouteEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteServer).CreateRouteEntries(ctx, req.(*CreateRouteEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Route_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lemming.dataplane.sai.Route",
	HandlerType: (*RouteServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRouteEntry",
			Handler:    _Route_CreateRouteEntry_Handler,
		},
		{
			MethodName: "RemoveRouteEntry",
			Handler:    _Route_RemoveRouteEntry_Handler,
		},
		{
			MethodName: "SetRouteEntryAttribute",
			Handler:    _Route_SetRouteEntryAttribute_Handler,
		},
		{
			MethodName: "GetRouteEntryAttribute",
			Handler:    _Route_GetRouteEntryAttribute_Handler,
		},
		{
			MethodName: "CreateRouteEntries",
			Handler:    _Route_CreateRouteEntries_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dataplane/proto/route.proto",
}
