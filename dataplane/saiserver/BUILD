load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "saiserver",
    srcs = [
        "acl.go",
        "hostif.go",
        "isolation_group.go",
        "l2.go",
        "policer.go",
        "ports.go",
        "routing.go",
        "saiserver.go",
        "switch.go",
        "tunnel.go",
        "udf.go",
    ],
    importpath = "github.com/openconfig/lemming/dataplane/saiserver",
    visibility = ["//visibility:public"],
    deps = [
        "//dataplane/dplaneopts",
        "//dataplane/forwarding",
        "//dataplane/forwarding/fwdconfig",
        "//dataplane/forwarding/infra/fwdcontext",
        "//dataplane/proto/packetio",
        "//dataplane/proto/sai",
        "//dataplane/saiserver/attrmgr",
        "//proto/forwarding",
        "@io_opentelemetry_go_otel//:otel",
        "@io_opentelemetry_go_otel_trace//:trace",
        "@openconfig_gnmi//errlist",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//proto",
    ],
)

go_test(
    name = "saiserver_test",
    srcs = [
        "acl_test.go",
        "hostif_test.go",
        "l2mc_test.go",
        "policer_test.go",
        "ports_test.go",
        "routing_test.go",
        "switch_test.go",
        "tunnel_test.go",
        "udf_test.go",
        "vlan_test.go",
    ],
    embed = [":saiserver"],
    deps = [
        "//dataplane/dplaneopts",
        "//dataplane/forwarding/fwdport",
        "//dataplane/forwarding/infra/fwdcontext",
        "//dataplane/forwarding/infra/fwdobject",
        "//dataplane/forwarding/infra/fwdpacket",
        "//dataplane/proto/packetio",
        "//dataplane/proto/sai",
        "//dataplane/saiserver/attrmgr",
        "//proto/forwarding",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_gopacket//:gopacket",
        "@com_github_google_gopacket//layers",
        "@openconfig_gnmi//errdiff",
        "@org_golang_google_genproto_googleapis_rpc//status",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//credentials/insecure",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//reflect/protoreflect",
        "@org_golang_google_protobuf//testing/protocmp",
    ],
)
