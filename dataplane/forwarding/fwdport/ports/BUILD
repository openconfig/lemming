load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "ports",
    srcs = [
        "cpu.go",
        "doc.go",
        "fake.go",
        "genetlink.go",
        "group.go",
        "kernel.go",
        "tap.go",
    ],
    importpath = "github.com/openconfig/lemming/dataplane/forwarding/fwdport/ports",
    visibility = ["//visibility:public"],
    deps = [
        "//dataplane/forwarding/fwdaction",
        "//dataplane/forwarding/fwdport",
        "//dataplane/forwarding/infra/deadlock",
        "//dataplane/forwarding/infra/fwdcontext",
        "//dataplane/forwarding/infra/fwdobject",
        "//dataplane/forwarding/infra/fwdpacket",
        "//dataplane/forwarding/util/hash/crc16",
        "//dataplane/forwarding/util/queue",
        "//dataplane/proto/packetio",
        "//internal/debug",
        "//proto/forwarding",
        "@com_github_golang_glog//:glog",
        "@com_github_google_gopacket//:gopacket",
        "@com_github_google_gopacket//layers",
        "@com_github_google_gopacket//pcapgo",
    ] + select({
        "@io_bazel_rules_go//go/platform:android": [
            "//dataplane/kernel",
            "@com_github_google_gopacket//afpacket",
            "@com_github_vishvananda_netlink//:netlink",
            "@org_golang_x_sys//unix",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "//dataplane/kernel",
            "@com_github_google_gopacket//afpacket",
            "@com_github_vishvananda_netlink//:netlink",
            "@org_golang_x_sys//unix",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "ports_test",
    size = "small",
    srcs = [
        "cpu_test.go",
        "fake_test.go",
        "group_test.go",
        "kernel_test.go",
    ],
    embed = [":ports"],
    deps = [
        "//dataplane/forwarding/fwdaction",
        "//dataplane/forwarding/fwdport",
        "//dataplane/forwarding/fwdport/mock_fwdpacket",
        "//dataplane/forwarding/fwdport/porttestutil",
        "//dataplane/forwarding/infra/fwdcontext",
        "//dataplane/forwarding/infra/fwdobject",
        "//dataplane/forwarding/infra/fwdpacket",
        "//dataplane/forwarding/protocol/arp",
        "//dataplane/forwarding/protocol/ethernet",
        "//dataplane/forwarding/protocol/metadata",
        "//dataplane/forwarding/protocol/opaque",
        "//dataplane/proto/packetio",
        "//proto/forwarding",
        "@com_github_go_logr_logr//testr",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_gopacket//:gopacket",
        "@com_github_google_gopacket//layers",
        "@com_github_google_gopacket//pcapgo",
        "@com_github_openconfig_gnmi//errdiff",
        "@org_uber_go_mock//gomock",
    ],
)
