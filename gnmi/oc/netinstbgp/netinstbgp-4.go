/*
Package netinstbgp is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema.

This package was generated by ygnmi version: v0.11.1: (ygot: v0.29.19)
using the following YANG input files:
  - public/release/models/acl/openconfig-acl.yang
  - public/release/models/acl/openconfig-packet-match.yang
  - public/release/models/aft/openconfig-aft-network-instance.yang
  - public/release/models/aft/openconfig-aft-summary.yang
  - public/release/models/aft/openconfig-aft.yang
  - public/release/models/bfd/openconfig-bfd.yang
  - public/release/models/bgp/openconfig-bgp-policy.yang
  - public/release/models/bgp/openconfig-bgp-types.yang
  - public/release/models/extensions/openconfig-metadata.yang
  - public/release/models/gnsi/openconfig-gnsi-acctz.yang
  - public/release/models/gnsi/openconfig-gnsi-authz.yang
  - public/release/models/gnsi/openconfig-gnsi-certz.yang
  - public/release/models/gnsi/openconfig-gnsi-credentialz.yang
  - public/release/models/gnsi/openconfig-gnsi-pathz.yang
  - public/release/models/gnsi/openconfig-gnsi.yang
  - public/release/models/gribi/openconfig-gribi.yang
  - public/release/models/interfaces/openconfig-if-aggregate.yang
  - public/release/models/interfaces/openconfig-if-ethernet-ext.yang
  - public/release/models/interfaces/openconfig-if-ethernet.yang
  - public/release/models/interfaces/openconfig-if-ip-ext.yang
  - public/release/models/interfaces/openconfig-if-ip.yang
  - public/release/models/interfaces/openconfig-if-sdn-ext.yang
  - public/release/models/interfaces/openconfig-interfaces.yang
  - public/release/models/isis/openconfig-isis-policy.yang
  - public/release/models/isis/openconfig-isis.yang
  - public/release/models/lacp/openconfig-lacp.yang
  - public/release/models/lldp/openconfig-lldp-types.yang
  - public/release/models/lldp/openconfig-lldp.yang
  - public/release/models/local-routing/openconfig-local-routing.yang
  - public/release/models/mpls/openconfig-mpls-types.yang
  - public/release/models/multicast/openconfig-pim.yang
  - public/release/models/network-instance/openconfig-network-instance.yang
  - public/release/models/openconfig-extensions.yang
  - public/release/models/optical-transport/openconfig-transport-types.yang
  - public/release/models/ospf/openconfig-ospf-policy.yang
  - public/release/models/ospf/openconfig-ospfv2.yang
  - public/release/models/p4rt/openconfig-p4rt.yang
  - public/release/models/platform/openconfig-platform-common.yang
  - public/release/models/platform/openconfig-platform-controller-card.yang
  - public/release/models/platform/openconfig-platform-cpu.yang
  - public/release/models/platform/openconfig-platform-ext.yang
  - public/release/models/platform/openconfig-platform-fabric.yang
  - public/release/models/platform/openconfig-platform-fan.yang
  - public/release/models/platform/openconfig-platform-integrated-circuit.yang
  - public/release/models/platform/openconfig-platform-linecard.yang
  - public/release/models/platform/openconfig-platform-pipeline-counters.yang
  - public/release/models/platform/openconfig-platform-psu.yang
  - public/release/models/platform/openconfig-platform-software.yang
  - public/release/models/platform/openconfig-platform-transceiver.yang
  - public/release/models/platform/openconfig-platform.yang
  - public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
  - public/release/models/policy/openconfig-policy-types.yang
  - public/release/models/qos/openconfig-qos-elements.yang
  - public/release/models/qos/openconfig-qos-interfaces.yang
  - public/release/models/qos/openconfig-qos-types.yang
  - public/release/models/qos/openconfig-qos.yang
  - public/release/models/relay-agent/openconfig-relay-agent.yang
  - public/release/models/rib/openconfig-rib-bgp.yang
  - public/release/models/sampling/openconfig-sampling-sflow.yang
  - public/release/models/segment-routing/openconfig-segment-routing-types.yang
  - public/release/models/system/openconfig-system-bootz.yang
  - public/release/models/system/openconfig-system-controlplane.yang
  - public/release/models/system/openconfig-system-utilization.yang
  - public/release/models/system/openconfig-system.yang
  - public/release/models/types/openconfig-inet-types.yang
  - public/release/models/types/openconfig-types.yang
  - public/release/models/types/openconfig-yang-types.yang
  - public/release/models/vlan/openconfig-vlan.yang
  - public/third_party/ietf/iana-if-type.yang
  - public/third_party/ietf/ietf-inet-types.yang
  - public/third_party/ietf/ietf-interfaces.yang
  - public/third_party/ietf/ietf-yang-types.yang
  - yang/openconfig-bgp-gue.yang

Imported modules were sourced from:
  - public/release/models/...
  - public/third_party/ietf/...
*/
package netinstbgp

import (
	"reflect"

	oc "github.com/openconfig/lemming/gnmi/oc"
	"github.com/openconfig/ygnmi/ygnmi"
	"github.com/openconfig/ygot/ygot"
	"github.com/openconfig/ygot/ytypes"
)

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/state/replace-peer-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/state/replace-peer-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/replace-peer-as"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/state/replace-peer-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "replace-peer-as"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions).ReplacePeerAs
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/replace-peer-as"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/state/replace-peer-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "replace-peer-as"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions).ReplacePeerAs
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/replace-peer-as"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/replace-peer-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPath) Config() ygnmi.ConfigQuery[bool] {
	return ygnmi.NewConfigQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "replace-peer-as"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions).ReplacePeerAs
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/replace-peer-as"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/replace-peer-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPathAny) Config() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "replace-peer-as"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions).ReplacePeerAs
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny struct {
	*ygnmi.NodePath
}

// AllowOwnAs (leaf): Specify the number of occurrences of the local BGP speaker's
// AS that can occur within the AS_PATH before it is rejected.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/allow-own-as"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/*/allow-own-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath) AllowOwnAs() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "allow-own-as"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AllowOwnAs (leaf): Specify the number of occurrences of the local BGP speaker's
// AS that can occur within the AS_PATH before it is rejected.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/allow-own-as"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/*/allow-own-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny) AllowOwnAs() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "allow-own-as"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// DisablePeerAsFilter (leaf): When set to true, the system advertises routes to a peer
// even if the peer's AS was in the AS path.  The default
// behavior (false) suppresses advertisements to peers if
// their AS number is in the AS path of the route.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/disable-peer-as-filter"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/*/disable-peer-as-filter"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath) DisablePeerAsFilter() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "disable-peer-as-filter"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// DisablePeerAsFilter (leaf): When set to true, the system advertises routes to a peer
// even if the peer's AS was in the AS path.  The default
// behavior (false) suppresses advertisements to peers if
// their AS number is in the AS path of the route.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/disable-peer-as-filter"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/*/disable-peer-as-filter"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny) DisablePeerAsFilter() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "disable-peer-as-filter"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ReplacePeerAs (leaf): Replace occurrences of the peer's AS in the AS_PATH
// with the local autonomous system number
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/replace-peer-as"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/*/replace-peer-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath) ReplacePeerAs() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "replace-peer-as"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ReplacePeerAs (leaf): Replace occurrences of the peer's AS in the AS_PATH
// with the local autonomous system number
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/replace-peer-as"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/*/replace-peer-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny) ReplacePeerAs() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "replace-peer-as"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions](
		"NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions](
		"NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath) Config() ygnmi.ConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions] {
	return ygnmi.NewConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions](
		"NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny) Config() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions](
		"NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/state/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/state/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/state/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/state/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPath) Config() ygnmi.ConfigQuery[bool] {
	return ygnmi.NewConfigQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPathAny) Config() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/state/multihop-ttl YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/state/multihop-ttl YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/multihop-ttl"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/state/multihop-ttl"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPath) State() ygnmi.SingletonQuery[uint8] {
	return ygnmi.NewSingletonQuery[uint8](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "multihop-ttl"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop).MultihopTtl
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/multihop-ttl"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/state/multihop-ttl"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPathAny) State() ygnmi.WildcardQuery[uint8] {
	return ygnmi.NewWildcardQuery[uint8](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "multihop-ttl"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop).MultihopTtl
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/multihop-ttl"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/multihop-ttl"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPath) Config() ygnmi.ConfigQuery[uint8] {
	return ygnmi.NewConfigQuery[uint8](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "multihop-ttl"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop).MultihopTtl
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/multihop-ttl"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/multihop-ttl"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPathAny) Config() ygnmi.WildcardQuery[uint8] {
	return ygnmi.NewWildcardQuery[uint8](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "multihop-ttl"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop).MultihopTtl
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPathAny struct {
	*ygnmi.NodePath
}

// Enabled (leaf): When enabled the referenced group or neighbors are permitted
// to be indirectly connected - including cases where the TTL
// can be decremented between the BGP peers
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/*/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "enabled"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Enabled (leaf): When enabled the referenced group or neighbors are permitted
// to be indirectly connected - including cases where the TTL
// can be decremented between the BGP peers
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/*/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "enabled"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// MultihopTtl (leaf): Time-to-live value to use when packets are sent to the
// referenced group or neighbors and ebgp-multihop is enabled
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/multihop-ttl"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/*/multihop-ttl"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPath) MultihopTtl() *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "multihop-ttl"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// MultihopTtl (leaf): Time-to-live value to use when packets are sent to the
// referenced group or neighbors and ebgp-multihop is enabled
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/multihop-ttl"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/*/multihop-ttl"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPathAny) MultihopTtl() *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "multihop-ttl"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPath) Config() ygnmi.ConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop] {
	return ygnmi.NewConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPathAny) Config() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DesiredMinimumTxIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/state/desired-minimum-tx-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DesiredMinimumTxIntervalPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DesiredMinimumTxIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/state/desired-minimum-tx-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DesiredMinimumTxIntervalPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/desired-minimum-tx-interval"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/state/desired-minimum-tx-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DesiredMinimumTxIntervalPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "desired-minimum-tx-interval"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd).DesiredMinimumTxInterval
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/desired-minimum-tx-interval"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/state/desired-minimum-tx-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DesiredMinimumTxIntervalPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "desired-minimum-tx-interval"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd).DesiredMinimumTxInterval
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/desired-minimum-tx-interval"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/config/desired-minimum-tx-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DesiredMinimumTxIntervalPath) Config() ygnmi.ConfigQuery[uint32] {
	return ygnmi.NewConfigQuery[uint32](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "desired-minimum-tx-interval"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd).DesiredMinimumTxInterval
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/desired-minimum-tx-interval"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/config/desired-minimum-tx-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DesiredMinimumTxIntervalPathAny) Config() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "desired-minimum-tx-interval"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd).DesiredMinimumTxInterval
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DetectionMultiplierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/state/detection-multiplier YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DetectionMultiplierPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DetectionMultiplierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/state/detection-multiplier YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DetectionMultiplierPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/detection-multiplier"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/state/detection-multiplier"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DetectionMultiplierPath) State() ygnmi.SingletonQuery[uint8] {
	return ygnmi.NewSingletonQuery[uint8](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "detection-multiplier"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd).DetectionMultiplier
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/detection-multiplier"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/state/detection-multiplier"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DetectionMultiplierPathAny) State() ygnmi.WildcardQuery[uint8] {
	return ygnmi.NewWildcardQuery[uint8](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "detection-multiplier"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd).DetectionMultiplier
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/detection-multiplier"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/config/detection-multiplier"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DetectionMultiplierPath) Config() ygnmi.ConfigQuery[uint8] {
	return ygnmi.NewConfigQuery[uint8](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "detection-multiplier"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd).DetectionMultiplier
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/detection-multiplier"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/config/detection-multiplier"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DetectionMultiplierPathAny) Config() ygnmi.WildcardQuery[uint8] {
	return ygnmi.NewWildcardQuery[uint8](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "detection-multiplier"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd).DetectionMultiplier
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPath) Config() ygnmi.ConfigQuery[bool] {
	return ygnmi.NewConfigQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPathAny) Config() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_RequiredMinimumReceivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/state/required-minimum-receive YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_RequiredMinimumReceivePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_RequiredMinimumReceivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/state/required-minimum-receive YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_RequiredMinimumReceivePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/required-minimum-receive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/state/required-minimum-receive"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_RequiredMinimumReceivePath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "required-minimum-receive"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd).RequiredMinimumReceive
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/required-minimum-receive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/state/required-minimum-receive"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_RequiredMinimumReceivePathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "required-minimum-receive"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd).RequiredMinimumReceive
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/required-minimum-receive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/config/required-minimum-receive"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_RequiredMinimumReceivePath) Config() ygnmi.ConfigQuery[uint32] {
	return ygnmi.NewConfigQuery[uint32](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "required-minimum-receive"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd).RequiredMinimumReceive
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/required-minimum-receive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/config/required-minimum-receive"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_RequiredMinimumReceivePathAny) Config() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "required-minimum-receive"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd).RequiredMinimumReceive
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPathAny struct {
	*ygnmi.NodePath
}

// DesiredMinimumTxInterval (leaf): The minimum interval between transmission of BFD control
// packets that the operator desires. This value is advertised to
// the peer, however the actual interval used is specified by
// taking the maximum of desired-minimum-tx-interval and the
// value of the remote required-minimum-receive interval value.
// This value is specified as an integer number of microseconds.
// The value 0 is reserved and cannot be used.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/desired-minimum-tx-interval"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/*/desired-minimum-tx-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPath) DesiredMinimumTxInterval() *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DesiredMinimumTxIntervalPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DesiredMinimumTxIntervalPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "desired-minimum-tx-interval"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// DesiredMinimumTxInterval (leaf): The minimum interval between transmission of BFD control
// packets that the operator desires. This value is advertised to
// the peer, however the actual interval used is specified by
// taking the maximum of desired-minimum-tx-interval and the
// value of the remote required-minimum-receive interval value.
// This value is specified as an integer number of microseconds.
// The value 0 is reserved and cannot be used.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/desired-minimum-tx-interval"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/*/desired-minimum-tx-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPathAny) DesiredMinimumTxInterval() *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DesiredMinimumTxIntervalPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DesiredMinimumTxIntervalPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "desired-minimum-tx-interval"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// DetectionMultiplier (leaf): The number of packets that must be missed to declare this
// session as down. The detection interval for the BFD session
// is calculated by multiplying the value of the negotiated
// transmission interval by this value.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/detection-multiplier"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/*/detection-multiplier"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPath) DetectionMultiplier() *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DetectionMultiplierPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DetectionMultiplierPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "detection-multiplier"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// DetectionMultiplier (leaf): The number of packets that must be missed to declare this
// session as down. The detection interval for the BFD session
// is calculated by multiplying the value of the negotiated
// transmission interval by this value.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/detection-multiplier"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/*/detection-multiplier"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPathAny) DetectionMultiplier() *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DetectionMultiplierPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_DetectionMultiplierPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "detection-multiplier"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/*/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "enabled"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/*/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "enabled"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RequiredMinimumReceive (leaf): The minimum interval between received BFD control packets that
// this system should support. This value is advertised to the
// remote peer to indicate the maximum frequency (i.e., minimum
// inter-packet interval) between BFD control packets that is
// acceptable to the local system.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/required-minimum-receive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/*/required-minimum-receive"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPath) RequiredMinimumReceive() *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_RequiredMinimumReceivePath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_RequiredMinimumReceivePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "required-minimum-receive"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RequiredMinimumReceive (leaf): The minimum interval between received BFD control packets that
// this system should support. This value is advertised to the
// remote peer to indicate the maximum frequency (i.e., minimum
// inter-packet interval) between BFD control packets that is
// acceptable to the local system.
//
//	Defining module:      "openconfig-bfd"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/required-minimum-receive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/*/required-minimum-receive"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPathAny) RequiredMinimumReceive() *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_RequiredMinimumReceivePathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_RequiredMinimumReceivePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "required-minimum-receive"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPath) Config() ygnmi.ConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd] {
	return ygnmi.NewConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPathAny) Config() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd](
		"NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling/state/treat-as-withdraw YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling/state/treat-as-withdraw YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/treat-as-withdraw"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling/state/treat-as-withdraw"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "treat-as-withdraw"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling).TreatAsWithdraw
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/treat-as-withdraw"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling/state/treat-as-withdraw"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "treat-as-withdraw"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling).TreatAsWithdraw
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/treat-as-withdraw"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling/config/treat-as-withdraw"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPath) Config() ygnmi.ConfigQuery[bool] {
	return ygnmi.NewConfigQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "treat-as-withdraw"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling).TreatAsWithdraw
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/treat-as-withdraw"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling/config/treat-as-withdraw"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPathAny) Config() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "treat-as-withdraw"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling).TreatAsWithdraw
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPathAny struct {
	*ygnmi.NodePath
}

// TreatAsWithdraw (leaf): Specify whether erroneous UPDATE messages for which the
// NLRI can be extracted are reated as though the NLRI is
// withdrawn - avoiding session reset
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/treat-as-withdraw"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling/*/treat-as-withdraw"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPath) TreatAsWithdraw() *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "treat-as-withdraw"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// TreatAsWithdraw (leaf): Specify whether erroneous UPDATE messages for which the
// NLRI can be extracted are reated as though the NLRI is
// withdrawn - avoiding session reset
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/treat-as-withdraw"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling/*/treat-as-withdraw"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPathAny) TreatAsWithdraw() *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "treat-as-withdraw"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling](
		"NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling](
		"NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPath) Config() ygnmi.ConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling] {
	return ygnmi.NewConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling](
		"NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPathAny) Config() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling](
		"NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/state/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/state/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/state/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/state/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPath) Config() ygnmi.ConfigQuery[bool] {
	return ygnmi.NewConfigQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPathAny) Config() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/state/helper-only YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/state/helper-only YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/helper-only"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/state/helper-only"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "helper-only"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart).HelperOnly
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/helper-only"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/state/helper-only"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "helper-only"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart).HelperOnly
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/helper-only"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPath) Config() ygnmi.ConfigQuery[bool] {
	return ygnmi.NewConfigQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "helper-only"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart).HelperOnly
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/helper-only"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPathAny) Config() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "helper-only"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart).HelperOnly
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/state/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/state/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/restart-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/state/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "restart-time"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart).RestartTime
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/restart-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/state/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "restart-time"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart).RestartTime
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/restart-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePath) Config() ygnmi.ConfigQuery[uint16] {
	return ygnmi.NewConfigQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "restart-time"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart).RestartTime
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/restart-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePathAny) Config() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "restart-time"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart).RestartTime
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/state/stale-routes-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/state/stale-routes-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/stale-routes-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/state/stale-routes-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "stale-routes-time"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart).StaleRoutesTime
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/stale-routes-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/state/stale-routes-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "stale-routes-time"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart).StaleRoutesTime
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/stale-routes-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/stale-routes-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePath) Config() ygnmi.ConfigQuery[uint16] {
	return ygnmi.NewConfigQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "stale-routes-time"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart).StaleRoutesTime
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/stale-routes-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/stale-routes-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePathAny) Config() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "stale-routes-time"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart).StaleRoutesTime
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny struct {
	*ygnmi.NodePath
}

// Enabled (leaf): Enable or disable the graceful-restart capability.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/*/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "enabled"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Enabled (leaf): Enable or disable the graceful-restart capability.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/*/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "enabled"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// HelperOnly (leaf): Enable graceful-restart in helper mode only. When this
// leaf is set, the local system does not retain forwarding
// its own state during a restart, but supports procedures
// for the receiving speaker, as defined in RFC4724.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/helper-only"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/*/helper-only"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath) HelperOnly() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "helper-only"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// HelperOnly (leaf): Enable graceful-restart in helper mode only. When this
// leaf is set, the local system does not retain forwarding
// its own state during a restart, but supports procedures
// for the receiving speaker, as defined in RFC4724.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/helper-only"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/*/helper-only"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny) HelperOnly() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "helper-only"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RestartTime (leaf): Estimated time (in seconds) for the local BGP speaker to
// restart a session. This value is advertise in the graceful
// restart BGP capability.  This is a 12-bit value, referred to
// as Restart Time in RFC4724.  Per RFC4724, the suggested
// default value is <= the hold-time value.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/restart-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/*/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath) RestartTime() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "restart-time"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RestartTime (leaf): Estimated time (in seconds) for the local BGP speaker to
// restart a session. This value is advertise in the graceful
// restart BGP capability.  This is a 12-bit value, referred to
// as Restart Time in RFC4724.  Per RFC4724, the suggested
// default value is <= the hold-time value.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/restart-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/*/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny) RestartTime() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "restart-time"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// StaleRoutesTime (leaf): An upper-bound on the time thate stale routes will be
// retained by a router after a session is restarted. If an
// End-of-RIB (EOR) marker is received prior to this timer
// expiring stale-routes will be flushed upon its receipt - if
// no EOR is received, then when this timer expires stale paths
// will be purged. This timer is referred to as the
// Selection_Deferral_Timer in RFC4724
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/stale-routes-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/*/stale-routes-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath) StaleRoutesTime() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "stale-routes-time"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// StaleRoutesTime (leaf): An upper-bound on the time thate stale routes will be
// retained by a router after a session is restarted. If an
// End-of-RIB (EOR) marker is received prior to this timer
// expiring stale-routes will be flushed upon its receipt - if
// no EOR is received, then when this timer expires stale paths
// will be purged. This timer is referred to as the
// Selection_Deferral_Timer in RFC4724
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/stale-routes-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/*/stale-routes-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny) StaleRoutesTime() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "stale-routes-time"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath) Config() ygnmi.ConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart] {
	return ygnmi.NewConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny) Config() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart](
		"NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options/state/log-neighbor-state-changes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options/state/log-neighbor-state-changes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/log-neighbor-state-changes"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options/state/log-neighbor-state-changes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "log-neighbor-state-changes"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions).LogNeighborStateChanges
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/log-neighbor-state-changes"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options/state/log-neighbor-state-changes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "log-neighbor-state-changes"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions).LogNeighborStateChanges
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/log-neighbor-state-changes"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options/config/log-neighbor-state-changes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPath) Config() ygnmi.ConfigQuery[bool] {
	return ygnmi.NewConfigQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "log-neighbor-state-changes"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions).LogNeighborStateChanges
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/log-neighbor-state-changes"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options/config/log-neighbor-state-changes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPathAny) Config() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "log-neighbor-state-changes"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions).LogNeighborStateChanges
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPathAny struct {
	*ygnmi.NodePath
}

// LogNeighborStateChanges (leaf): Configure logging of peer state changes.  Default is
// to enable logging of peer state changes.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/log-neighbor-state-changes"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options/*/log-neighbor-state-changes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPath) LogNeighborStateChanges() *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "log-neighbor-state-changes"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LogNeighborStateChanges (leaf): Configure logging of peer state changes.  Default is
// to enable logging of peer state changes.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/log-neighbor-state-changes"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options/*/log-neighbor-state-changes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPathAny) LogNeighborStateChanges() *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "log-neighbor-state-changes"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions](
		"NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions](
		"NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPath) Config() ygnmi.ConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions] {
	return ygnmi.NewConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions](
		"NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPathAny) Config() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions](
		"NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/state/route-reflector-client YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/state/route-reflector-client YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/route-reflector-client"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/state/route-reflector-client"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "route-reflector-client"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector).RouteReflectorClient
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/route-reflector-client"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/state/route-reflector-client"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "route-reflector-client"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector).RouteReflectorClient
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/route-reflector-client"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-client"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPath) Config() ygnmi.ConfigQuery[bool] {
	return ygnmi.NewConfigQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "route-reflector-client"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector).RouteReflectorClient
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/route-reflector-client"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-client"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPathAny) Config() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "route-reflector-client"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector).RouteReflectorClient
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/state/route-reflector-cluster-id YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/state/route-reflector-cluster-id YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/route-reflector-cluster-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/state/route-reflector-cluster-id"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPath) State() ygnmi.SingletonQuery[oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterId_Union] {
	return ygnmi.NewSingletonQuery[oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterId_Union](
		"NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "route-reflector-cluster-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterId_Union, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector).RouteReflectorClusterId
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/route-reflector-cluster-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/state/route-reflector-cluster-id"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPathAny) State() ygnmi.WildcardQuery[oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterId_Union] {
	return ygnmi.NewWildcardQuery[oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterId_Union](
		"NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "route-reflector-cluster-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterId_Union, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector).RouteReflectorClusterId
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/route-reflector-cluster-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-cluster-id"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPath) Config() ygnmi.ConfigQuery[oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterId_Union] {
	return ygnmi.NewConfigQuery[oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterId_Union](
		"NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector",
		false,
		true,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "route-reflector-cluster-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterId_Union, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector).RouteReflectorClusterId
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/route-reflector-cluster-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-cluster-id"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPathAny) Config() ygnmi.WildcardQuery[oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterId_Union] {
	return ygnmi.NewWildcardQuery[oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterId_Union](
		"NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector",
		false,
		true,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "route-reflector-cluster-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterId_Union, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector).RouteReflectorClusterId
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPathAny struct {
	*ygnmi.NodePath
}

// RouteReflectorClient (leaf): Configure the neighbor as a route reflector client.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/route-reflector-client"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/*/route-reflector-client"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPath) RouteReflectorClient() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "route-reflector-client"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RouteReflectorClient (leaf): Configure the neighbor as a route reflector client.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/route-reflector-client"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/*/route-reflector-client"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPathAny) RouteReflectorClient() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "route-reflector-client"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RouteReflectorClusterId (leaf): route-reflector cluster id to use when local router is
// configured as a route reflector.  Commonly set at the group
// level, but allows a different cluster
// id to be set for each neighbor.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/route-reflector-cluster-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/*/route-reflector-cluster-id"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPath) RouteReflectorClusterId() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "route-reflector-cluster-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RouteReflectorClusterId (leaf): route-reflector cluster id to use when local router is
// configured as a route reflector.  Commonly set at the group
// level, but allows a different cluster
// id to be set for each neighbor.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/route-reflector-cluster-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/*/route-reflector-cluster-id"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPathAny) RouteReflectorClusterId() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "route-reflector-cluster-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector](
		"NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector](
		"NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPath) Config() ygnmi.ConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector] {
	return ygnmi.NewConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector](
		"NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPathAny) Config() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector](
		"NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/connect-retry YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/connect-retry YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/connect-retry"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/connect-retry"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "connect-retry"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).ConnectRetry
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/connect-retry"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/connect-retry"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "connect-retry"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).ConnectRetry
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/connect-retry"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/connect-retry"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPath) Config() ygnmi.ConfigQuery[uint16] {
	return ygnmi.NewConfigQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "connect-retry"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).ConnectRetry
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/connect-retry"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/connect-retry"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPathAny) Config() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "connect-retry"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).ConnectRetry
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/hold-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/hold-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/hold-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/hold-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "hold-time"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).HoldTime
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/hold-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/hold-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "hold-time"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).HoldTime
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/hold-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/hold-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePath) Config() ygnmi.ConfigQuery[uint16] {
	return ygnmi.NewConfigQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "hold-time"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).HoldTime
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/hold-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/hold-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePathAny) Config() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "hold-time"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).HoldTime
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/keepalive-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/keepalive-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/keepalive-interval"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/keepalive-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "keepalive-interval"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).KeepaliveInterval
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/keepalive-interval"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/keepalive-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "keepalive-interval"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).KeepaliveInterval
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/keepalive-interval"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/keepalive-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPath) Config() ygnmi.ConfigQuery[uint16] {
	return ygnmi.NewConfigQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "keepalive-interval"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).KeepaliveInterval
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/keepalive-interval"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/keepalive-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPathAny) Config() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "keepalive-interval"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).KeepaliveInterval
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/minimum-advertisement-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/minimum-advertisement-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/minimum-advertisement-interval"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/minimum-advertisement-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "minimum-advertisement-interval"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).MinimumAdvertisementInterval
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/minimum-advertisement-interval"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/minimum-advertisement-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "minimum-advertisement-interval"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).MinimumAdvertisementInterval
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/minimum-advertisement-interval"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/minimum-advertisement-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPath) Config() ygnmi.ConfigQuery[uint16] {
	return ygnmi.NewConfigQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "minimum-advertisement-interval"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).MinimumAdvertisementInterval
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/minimum-advertisement-interval"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/minimum-advertisement-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPathAny) Config() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "minimum-advertisement-interval"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).MinimumAdvertisementInterval
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/restart-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "restart-time"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).RestartTime
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/restart-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/state/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "restart-time"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).RestartTime
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/restart-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePath) Config() ygnmi.ConfigQuery[uint16] {
	return ygnmi.NewConfigQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "restart-time"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).RestartTime
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/restart-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePathAny) Config() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "restart-time"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers).RestartTime
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny struct {
	*ygnmi.NodePath
}

// ConnectRetry (leaf): Time interval in seconds between attempts to establish a
// session with the peer.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/connect-retry"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/*/connect-retry"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath) ConnectRetry() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "connect-retry"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ConnectRetry (leaf): Time interval in seconds between attempts to establish a
// session with the peer.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/connect-retry"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/*/connect-retry"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny) ConnectRetry() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "connect-retry"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// HoldTime (leaf): Time interval in seconds that a BGP session will be
// considered active in the absence of keepalive or other
// messages from the peer.  The hold-time is typically
// set to 3x the keepalive-interval.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/hold-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/*/hold-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath) HoldTime() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "hold-time"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// HoldTime (leaf): Time interval in seconds that a BGP session will be
// considered active in the absence of keepalive or other
// messages from the peer.  The hold-time is typically
// set to 3x the keepalive-interval.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/hold-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/*/hold-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny) HoldTime() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "hold-time"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// KeepaliveInterval (leaf): Time interval in seconds between transmission of keepalive
// messages to the neighbor.  Typically set to 1/3 the
// hold-time.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/keepalive-interval"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/*/keepalive-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath) KeepaliveInterval() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "keepalive-interval"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// KeepaliveInterval (leaf): Time interval in seconds between transmission of keepalive
// messages to the neighbor.  Typically set to 1/3 the
// hold-time.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/keepalive-interval"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/*/keepalive-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny) KeepaliveInterval() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "keepalive-interval"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// MinimumAdvertisementInterval (leaf): Minimum time which must elapse between subsequent UPDATE
// messages relating to a common set of NLRI being transmitted
// to a peer. This timer is referred to as
// MinRouteAdvertisementIntervalTimer by RFC 4721 and serves to
// reduce the number of UPDATE messages transmitted when a
// particular set of NLRI exhibit instability.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/minimum-advertisement-interval"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/*/minimum-advertisement-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath) MinimumAdvertisementInterval() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "minimum-advertisement-interval"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// MinimumAdvertisementInterval (leaf): Minimum time which must elapse between subsequent UPDATE
// messages relating to a common set of NLRI being transmitted
// to a peer. This timer is referred to as
// MinRouteAdvertisementIntervalTimer by RFC 4721 and serves to
// reduce the number of UPDATE messages transmitted when a
// particular set of NLRI exhibit instability.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/minimum-advertisement-interval"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/*/minimum-advertisement-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny) MinimumAdvertisementInterval() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "minimum-advertisement-interval"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RestartTime (leaf): Time interval in seconds after which the BGP session is
// re-established after being torn down due to exceeding any
// configured max prefix-limit.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/restart-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/*/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath) RestartTime() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "restart-time"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RestartTime (leaf): Time interval in seconds after which the BGP session is
// re-established after being torn down due to exceeding any
// configured max prefix-limit.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/restart-time"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/*/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny) RestartTime() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "restart-time"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath) Config() ygnmi.ConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers] {
	return ygnmi.NewConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny) Config() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Timers](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Timers",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/state/local-address YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/state/local-address YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/local-address"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/state/local-address"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "local-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport).LocalAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/local-address"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/state/local-address"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "local-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport).LocalAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/local-address"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/local-address"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "local-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport).LocalAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/local-address"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/local-address"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "local-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport).LocalAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/state/mtu-discovery YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/state/mtu-discovery YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/mtu-discovery"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/state/mtu-discovery"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "mtu-discovery"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport).MtuDiscovery
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/mtu-discovery"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/state/mtu-discovery"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "mtu-discovery"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport).MtuDiscovery
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/mtu-discovery"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/mtu-discovery"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPath) Config() ygnmi.ConfigQuery[bool] {
	return ygnmi.NewConfigQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "mtu-discovery"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport).MtuDiscovery
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/mtu-discovery"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/mtu-discovery"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPathAny) Config() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "mtu-discovery"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport).MtuDiscovery
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/state/passive-mode YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/state/passive-mode YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/passive-mode"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/state/passive-mode"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "passive-mode"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport).PassiveMode
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/passive-mode"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/state/passive-mode"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "passive-mode"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport).PassiveMode
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/passive-mode"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/passive-mode"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePath) Config() ygnmi.ConfigQuery[bool] {
	return ygnmi.NewConfigQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "passive-mode"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport).PassiveMode
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/passive-mode"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/passive-mode"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePathAny) Config() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "passive-mode"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport).PassiveMode
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/state/tcp-mss YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/state/tcp-mss YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/tcp-mss"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/state/tcp-mss"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "tcp-mss"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport).TcpMss
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/tcp-mss"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/state/tcp-mss"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "tcp-mss"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport).TcpMss
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/tcp-mss"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/tcp-mss"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPath) Config() ygnmi.ConfigQuery[uint16] {
	return ygnmi.NewConfigQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "tcp-mss"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport).TcpMss
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/tcp-mss"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/tcp-mss"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPathAny) Config() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "tcp-mss"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport).TcpMss
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny struct {
	*ygnmi.NodePath
}

// LocalAddress (leaf): Set the local IP (either IPv4 or IPv6) address to use
// for the session when sending BGP update messages.  This
// may be expressed as either an IP address or reference
// to the name of an interface.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/local-address"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/*/local-address"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath) LocalAddress() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "local-address"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LocalAddress (leaf): Set the local IP (either IPv4 or IPv6) address to use
// for the session when sending BGP update messages.  This
// may be expressed as either an IP address or reference
// to the name of an interface.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/local-address"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/*/local-address"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny) LocalAddress() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "local-address"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// MtuDiscovery (leaf): Turns path mtu discovery for BGP TCP sessions on (true)
// or off (false)
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/mtu-discovery"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/*/mtu-discovery"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath) MtuDiscovery() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "mtu-discovery"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// MtuDiscovery (leaf): Turns path mtu discovery for BGP TCP sessions on (true)
// or off (false)
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/mtu-discovery"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/*/mtu-discovery"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny) MtuDiscovery() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "mtu-discovery"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PassiveMode (leaf): Wait for peers to issue requests to open a BGP session,
// rather than initiating sessions from the local router.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/passive-mode"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/*/passive-mode"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath) PassiveMode() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "passive-mode"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PassiveMode (leaf): Wait for peers to issue requests to open a BGP session,
// rather than initiating sessions from the local router.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/passive-mode"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/*/passive-mode"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny) PassiveMode() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "passive-mode"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// TcpMss (leaf): Sets the max segment size for BGP TCP sessions.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/tcp-mss"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/*/tcp-mss"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath) TcpMss() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "tcp-mss"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// TcpMss (leaf): Sets the max segment size for BGP TCP sessions.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/tcp-mss"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/*/tcp-mss"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny) TcpMss() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "tcp-mss"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath) Config() ygnmi.ConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport] {
	return ygnmi.NewConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny) Config() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_Transport](
		"NetworkInstance_Protocol_Bgp_PeerGroup_Transport",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/state/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/state/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/state/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/state/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPath) Config() ygnmi.ConfigQuery[bool] {
	return ygnmi.NewConfigQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPathAny) Config() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny struct {
	*ygnmi.NodePath
}

// Ebgp (container): Multipath parameters for eBGP
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "ebgp"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath) Ebgp() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Ebgp (container): Multipath parameters for eBGP
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "ebgp"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny) Ebgp() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/*/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "enabled"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/*/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "enabled"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Ibgp (container): Multipath parameters for iBGP
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "ibgp"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath) Ibgp() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"ibgp"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Ibgp (container): Multipath parameters for iBGP
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "ibgp"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny) Ibgp() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"ibgp"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath) Config() ygnmi.ConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths] {
	return ygnmi.NewConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny) Config() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/state/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/state/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/allow-multiple-as"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/state/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "allow-multiple-as"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp).AllowMultipleAs
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/allow-multiple-as"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/state/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "allow-multiple-as"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp).AllowMultipleAs
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/allow-multiple-as"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPath) Config() ygnmi.ConfigQuery[bool] {
	return ygnmi.NewConfigQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp).AllowMultipleAs
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/allow-multiple-as"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny) Config() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp).AllowMultipleAs
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/state/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/state/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/maximum-paths"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/state/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "maximum-paths"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp).MaximumPaths
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/maximum-paths"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/state/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "maximum-paths"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp).MaximumPaths
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/maximum-paths"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPath) Config() ygnmi.ConfigQuery[uint32] {
	return ygnmi.NewConfigQuery[uint32](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "maximum-paths"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp).MaximumPaths
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/maximum-paths"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPathAny) Config() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "maximum-paths"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp).MaximumPaths
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny struct {
	*ygnmi.NodePath
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/allow-multiple-as"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/*/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/allow-multiple-as"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/*/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LinkBandwidthExtCommunity (container): Usage of DMZ Link-Bandwidth extended community
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "link-bandwidth-ext-community"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/link-bandwidth-ext-community"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath) LinkBandwidthExtCommunity() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunityPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunityPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"link-bandwidth-ext-community"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// LinkBandwidthExtCommunity (container): Usage of DMZ Link-Bandwidth extended community
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "link-bandwidth-ext-community"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/link-bandwidth-ext-community"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny) LinkBandwidthExtCommunity() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunityPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunityPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"link-bandwidth-ext-community"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// BGP multipath. The default is use a single path.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/maximum-paths"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/*/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// BGP multipath. The default is use a single path.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/maximum-paths"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/*/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath) Config() ygnmi.ConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp] {
	return ygnmi.NewConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny) Config() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/link-bandwidth-ext-community/state/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity_EnabledPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/link-bandwidth-ext-community/state/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity_EnabledPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/link-bandwidth-ext-community/state/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity_EnabledPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/link-bandwidth-ext-community/state/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity_EnabledPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/link-bandwidth-ext-community/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity_EnabledPath) Config() ygnmi.ConfigQuery[bool] {
	return ygnmi.NewConfigQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/link-bandwidth-ext-community/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity_EnabledPathAny) Config() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/link-bandwidth-ext-community YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunityPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/link-bandwidth-ext-community YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunityPathAny struct {
	*ygnmi.NodePath
}

// Enabled (leaf): When set to TRUE, BGP multiplepath shall distributed traffic
// load among contributing routes proportionally to value of
// Local Administrator subfield of link-bandwidth extended
// community [draft-ietf-idr-link-bandwidth-07].
// This leaf has no effect if BGP multi-path is disabled or
// if maximum-path attribute of BGP multi-path value is set
// to 1
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/link-bandwidth-ext-community/*/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunityPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity_EnabledPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity_EnabledPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "enabled"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Enabled (leaf): When set to TRUE, BGP multiplepath shall distributed traffic
// load among contributing routes proportionally to value of
// Local Administrator subfield of link-bandwidth extended
// community [draft-ietf-idr-link-bandwidth-07].
// This leaf has no effect if BGP multi-path is disabled or
// if maximum-path attribute of BGP multi-path value is set
// to 1
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/link-bandwidth-ext-community/*/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunityPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity_EnabledPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity_EnabledPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "enabled"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunityPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunityPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunityPath) Config() ygnmi.ConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity] {
	return ygnmi.NewConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunityPathAny) Config() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_LinkBandwidthExtCommunity",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/state/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/state/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/maximum-paths"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/state/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "maximum-paths"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp).MaximumPaths
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/maximum-paths"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/state/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "maximum-paths"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp).MaximumPaths
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/maximum-paths"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPath) Config() ygnmi.ConfigQuery[uint32] {
	return ygnmi.NewConfigQuery[uint32](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "maximum-paths"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp).MaximumPaths
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/maximum-paths"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPathAny) Config() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "maximum-paths"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp).MaximumPaths
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPathAny struct {
	*ygnmi.NodePath
}

// LinkBandwidthExtCommunity (container): Usage of DMZ Link-Bandwidth extended community
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "link-bandwidth-ext-community"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/link-bandwidth-ext-community"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPath) LinkBandwidthExtCommunity() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunityPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunityPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"link-bandwidth-ext-community"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// LinkBandwidthExtCommunity (container): Usage of DMZ Link-Bandwidth extended community
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "link-bandwidth-ext-community"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/link-bandwidth-ext-community"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPathAny) LinkBandwidthExtCommunity() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunityPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunityPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"link-bandwidth-ext-community"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// iBGP multipath. The default is to use a single path
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/maximum-paths"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/*/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPath) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// iBGP multipath. The default is to use a single path
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/maximum-paths"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/*/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPathAny) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPath) Config() ygnmi.ConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp] {
	return ygnmi.NewConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPathAny) Config() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/link-bandwidth-ext-community/state/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity_EnabledPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/link-bandwidth-ext-community/state/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity_EnabledPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/link-bandwidth-ext-community/state/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity_EnabledPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/link-bandwidth-ext-community/state/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity_EnabledPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/link-bandwidth-ext-community/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity_EnabledPath) Config() ygnmi.ConfigQuery[bool] {
	return ygnmi.NewConfigQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "config/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/link-bandwidth-ext-community/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity_EnabledPathAny) Config() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "enabled"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity).Enabled
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/link-bandwidth-ext-community YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunityPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/link-bandwidth-ext-community YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunityPathAny struct {
	*ygnmi.NodePath
}

// Enabled (leaf): When set to TRUE, BGP multiplepath shall distributed traffic
// load among contributing routes proportionally to value of
// Local Administrator subfield of link-bandwidth extended
// community [draft-ietf-idr-link-bandwidth-07].
// This leaf has no effect if BGP multi-path is disabled or
// if maximum-path attribute of BGP multi-path value is set
// to 1
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/link-bandwidth-ext-community/*/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunityPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity_EnabledPath {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity_EnabledPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "enabled"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Enabled (leaf): When set to TRUE, BGP multiplepath shall distributed traffic
// load among contributing routes proportionally to value of
// Local Administrator subfield of link-bandwidth extended
// community [draft-ietf-idr-link-bandwidth-07].
// This leaf has no effect if BGP multi-path is disabled or
// if maximum-path attribute of BGP multi-path value is set
// to 1
//
//	Defining module:      "openconfig-bgp-common"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/enabled"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/link-bandwidth-ext-community/*/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunityPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity_EnabledPathAny {
	ps := &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity_EnabledPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "enabled"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunityPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunityPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunityPath) Config() ygnmi.ConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity] {
	return ygnmi.NewConfigQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunityPathAny) Config() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity](
		"NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_LinkBandwidthExtCommunity",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_RibPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib YANG schema element.
type NetworkInstance_Protocol_Bgp_RibPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_RibPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib YANG schema element.
type NetworkInstance_Protocol_Bgp_RibPathAny struct {
	*ygnmi.NodePath
}

// AfiSafiAny (list): list of afi-safi types
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "afi-safis/afi-safi"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi"
func (n *NetworkInstance_Protocol_Bgp_RibPath) AfiSafiAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": "*"},
			n,
		),
	}
	return ps
}

// AfiSafiAny (list): list of afi-safi types
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "afi-safis/afi-safi"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi"
func (n *NetworkInstance_Protocol_Bgp_RibPathAny) AfiSafiAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": "*"},
			n,
		),
	}
	return ps
}

// AfiSafi (list): list of afi-safi types
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "afi-safis/afi-safi"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi"
//
//	AfiSafiName: oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_RibPath) AfiSafi(AfiSafiName oc.E_BgpTypes_AFI_SAFI_TYPE) *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafiPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": AfiSafiName},
			n,
		),
	}
	return ps
}

// AfiSafi (list): list of afi-safi types
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "afi-safis/afi-safi"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi"
//
//	AfiSafiName: oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_RibPathAny) AfiSafi(AfiSafiName oc.E_BgpTypes_AFI_SAFI_TYPE) *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": AfiSafiName},
			n,
		),
	}
	return ps
}

// AfiSafiMap (list): list of afi-safi types
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "afi-safis/afi-safi"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi"
func (n *NetworkInstance_Protocol_Bgp_RibPath) AfiSafiMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathMap {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"afi-safis"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// AfiSafiMap (list): list of afi-safi types
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "afi-safis/afi-safi"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi"
func (n *NetworkInstance_Protocol_Bgp_RibPathAny) AfiSafiMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathMapAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"afi-safis"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// AttrSetAny (list): List of path attributes that may be in use by multiple
// routes in the table
//
//	Defining module:      "openconfig-rib-bgp-shared-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "attr-sets/attr-set"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set"
func (n *NetworkInstance_Protocol_Bgp_RibPath) AttrSetAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"attr-sets", "attr-set"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
	return ps
}

// AttrSetAny (list): List of path attributes that may be in use by multiple
// routes in the table
//
//	Defining module:      "openconfig-rib-bgp-shared-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "attr-sets/attr-set"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set"
func (n *NetworkInstance_Protocol_Bgp_RibPathAny) AttrSetAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"attr-sets", "attr-set"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
	return ps
}

// AttrSet (list): List of path attributes that may be in use by multiple
// routes in the table
//
//	Defining module:      "openconfig-rib-bgp-shared-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "attr-sets/attr-set"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set"
//
//	Index: uint64
func (n *NetworkInstance_Protocol_Bgp_RibPath) AttrSet(Index uint64) *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AttrSetPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"attr-sets", "attr-set"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
	return ps
}

// AttrSet (list): List of path attributes that may be in use by multiple
// routes in the table
//
//	Defining module:      "openconfig-rib-bgp-shared-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "attr-sets/attr-set"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set"
//
//	Index: uint64
func (n *NetworkInstance_Protocol_Bgp_RibPathAny) AttrSet(Index uint64) *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"attr-sets", "attr-set"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
	return ps
}

// AttrSetMap (list): List of path attributes that may be in use by multiple
// routes in the table
//
//	Defining module:      "openconfig-rib-bgp-shared-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "attr-sets/attr-set"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set"
func (n *NetworkInstance_Protocol_Bgp_RibPath) AttrSetMap() *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathMap {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AttrSetPathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"attr-sets"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// AttrSetMap (list): List of path attributes that may be in use by multiple
// routes in the table
//
//	Defining module:      "openconfig-rib-bgp-shared-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "attr-sets/attr-set"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set"
func (n *NetworkInstance_Protocol_Bgp_RibPathAny) AttrSetMap() *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathMapAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AttrSetPathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"attr-sets"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// CommunityAny (list): List of path attributes that may be in use by multiple
// routes in the table
//
//	Defining module:      "openconfig-rib-bgp-shared-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "communities/community"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community"
func (n *NetworkInstance_Protocol_Bgp_RibPath) CommunityAny() *NetworkInstance_Protocol_Bgp_Rib_CommunityPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_CommunityPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"communities", "community"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
	return ps
}

// CommunityAny (list): List of path attributes that may be in use by multiple
// routes in the table
//
//	Defining module:      "openconfig-rib-bgp-shared-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "communities/community"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community"
func (n *NetworkInstance_Protocol_Bgp_RibPathAny) CommunityAny() *NetworkInstance_Protocol_Bgp_Rib_CommunityPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_CommunityPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"communities", "community"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
	return ps
}

// Community (list): List of path attributes that may be in use by multiple
// routes in the table
//
//	Defining module:      "openconfig-rib-bgp-shared-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "communities/community"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community"
//
//	Index: uint64
func (n *NetworkInstance_Protocol_Bgp_RibPath) Community(Index uint64) *NetworkInstance_Protocol_Bgp_Rib_CommunityPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_CommunityPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"communities", "community"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
	return ps
}

// Community (list): List of path attributes that may be in use by multiple
// routes in the table
//
//	Defining module:      "openconfig-rib-bgp-shared-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "communities/community"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community"
//
//	Index: uint64
func (n *NetworkInstance_Protocol_Bgp_RibPathAny) Community(Index uint64) *NetworkInstance_Protocol_Bgp_Rib_CommunityPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_CommunityPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"communities", "community"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
	return ps
}

// CommunityMap (list): List of path attributes that may be in use by multiple
// routes in the table
//
//	Defining module:      "openconfig-rib-bgp-shared-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "communities/community"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community"
func (n *NetworkInstance_Protocol_Bgp_RibPath) CommunityMap() *NetworkInstance_Protocol_Bgp_Rib_CommunityPathMap {
	ps := &NetworkInstance_Protocol_Bgp_Rib_CommunityPathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"communities"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// CommunityMap (list): List of path attributes that may be in use by multiple
// routes in the table
//
//	Defining module:      "openconfig-rib-bgp-shared-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "communities/community"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community"
func (n *NetworkInstance_Protocol_Bgp_RibPathAny) CommunityMap() *NetworkInstance_Protocol_Bgp_Rib_CommunityPathMapAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_CommunityPathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"communities"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// ExtCommunityAny (list): List of path attributes that may be in use by multiple
// routes in the table
//
//	Defining module:      "openconfig-rib-bgp-shared-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "ext-communities/ext-community"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community"
func (n *NetworkInstance_Protocol_Bgp_RibPath) ExtCommunityAny() *NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"ext-communities", "ext-community"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
	return ps
}

// ExtCommunityAny (list): List of path attributes that may be in use by multiple
// routes in the table
//
//	Defining module:      "openconfig-rib-bgp-shared-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "ext-communities/ext-community"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community"
func (n *NetworkInstance_Protocol_Bgp_RibPathAny) ExtCommunityAny() *NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"ext-communities", "ext-community"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
	return ps
}

// ExtCommunity (list): List of path attributes that may be in use by multiple
// routes in the table
//
//	Defining module:      "openconfig-rib-bgp-shared-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "ext-communities/ext-community"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community"
//
//	Index: uint64
func (n *NetworkInstance_Protocol_Bgp_RibPath) ExtCommunity(Index uint64) *NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"ext-communities", "ext-community"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
	return ps
}

// ExtCommunity (list): List of path attributes that may be in use by multiple
// routes in the table
//
//	Defining module:      "openconfig-rib-bgp-shared-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "ext-communities/ext-community"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community"
//
//	Index: uint64
func (n *NetworkInstance_Protocol_Bgp_RibPathAny) ExtCommunity(Index uint64) *NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"ext-communities", "ext-community"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
	return ps
}

// ExtCommunityMap (list): List of path attributes that may be in use by multiple
// routes in the table
//
//	Defining module:      "openconfig-rib-bgp-shared-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "ext-communities/ext-community"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community"
func (n *NetworkInstance_Protocol_Bgp_RibPath) ExtCommunityMap() *NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPathMap {
	ps := &NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"ext-communities"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// ExtCommunityMap (list): List of path attributes that may be in use by multiple
// routes in the table
//
//	Defining module:      "openconfig-rib-bgp-shared-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "ext-communities/ext-community"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community"
func (n *NetworkInstance_Protocol_Bgp_RibPathAny) ExtCommunityMap() *NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPathMapAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"ext-communities"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_RibPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib](
		"NetworkInstance_Protocol_Bgp_Rib",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_RibPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib](
		"NetworkInstance_Protocol_Bgp_Rib",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_AfiSafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/state/afi-safi-name YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_AfiSafiNamePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_AfiSafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/state/afi-safi-name YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_AfiSafiNamePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/afi-safi-name"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/state/afi-safi-name"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_AfiSafiNamePath) State() ygnmi.SingletonQuery[oc.E_BgpTypes_AFI_SAFI_TYPE] {
	return ygnmi.NewSingletonQuery[oc.E_BgpTypes_AFI_SAFI_TYPE](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "afi-safi-name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_BgpTypes_AFI_SAFI_TYPE, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi).AfiSafiName
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/afi-safi-name"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/state/afi-safi-name"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_AfiSafiNamePathAny) State() ygnmi.WildcardQuery[oc.E_BgpTypes_AFI_SAFI_TYPE] {
	return ygnmi.NewWildcardQuery[oc.E_BgpTypes_AFI_SAFI_TYPE](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "afi-safi-name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_BgpTypes_AFI_SAFI_TYPE, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi).AfiSafiName
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "afi-safi-name"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_AfiSafiNamePath) Config() ygnmi.ConfigQuery[oc.E_BgpTypes_AFI_SAFI_TYPE] {
	return ygnmi.NewConfigQuery[oc.E_BgpTypes_AFI_SAFI_TYPE](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi",
		false,
		true,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"afi-safi-name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_BgpTypes_AFI_SAFI_TYPE, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi).AfiSafiName
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "afi-safi-name"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_AfiSafiNamePathAny) Config() ygnmi.WildcardQuery[oc.E_BgpTypes_AFI_SAFI_TYPE] {
	return ygnmi.NewWildcardQuery[oc.E_BgpTypes_AFI_SAFI_TYPE](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi",
		false,
		true,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"afi-safi-name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_BgpTypes_AFI_SAFI_TYPE, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi).AfiSafiName
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafiPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafiPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathAny struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathMap represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathMap struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathMapAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathMapAny struct {
	*ygnmi.NodePath
}

// AfiSafiName (leaf): AFI,SAFI
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/afi-safi-name"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/*/afi-safi-name"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPath) AfiSafiName() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_AfiSafiNamePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_AfiSafiNamePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "afi-safi-name"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AfiSafiName (leaf): AFI,SAFI
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/afi-safi-name"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/*/afi-safi-name"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathAny) AfiSafiName() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_AfiSafiNamePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_AfiSafiNamePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "afi-safi-name"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Ipv4SrtePolicy (container): Routing tables for the IPv4 Unicast, SR-TE Policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "ipv4-srte-policy"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPath) Ipv4SrtePolicy() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicyPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicyPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"ipv4-srte-policy"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Ipv4SrtePolicy (container): Routing tables for the IPv4 Unicast, SR-TE Policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "ipv4-srte-policy"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathAny) Ipv4SrtePolicy() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicyPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicyPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"ipv4-srte-policy"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Ipv4Unicast (container): Routing tables for IPv4 unicast -- active when the
// afi-safi name is ipv4-unicast
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "ipv4-unicast"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPath) Ipv4Unicast() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4UnicastPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4UnicastPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Ipv4Unicast (container): Routing tables for IPv4 unicast -- active when the
// afi-safi name is ipv4-unicast
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "ipv4-unicast"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathAny) Ipv4Unicast() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4UnicastPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4UnicastPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Ipv6SrtePolicy (container): Routing tables for the IPv6 Unicast, SR-TE Policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "ipv6-srte-policy"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-srte-policy"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPath) Ipv6SrtePolicy() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6SrtePolicyPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6SrtePolicyPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"ipv6-srte-policy"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Ipv6SrtePolicy (container): Routing tables for the IPv6 Unicast, SR-TE Policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "ipv6-srte-policy"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-srte-policy"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathAny) Ipv6SrtePolicy() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6SrtePolicyPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6SrtePolicyPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"ipv6-srte-policy"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Ipv6Unicast (container): Routing tables for IPv6 unicast -- active when the
// afi-safi name is ipv6-unicast
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "ipv6-unicast"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPath) Ipv6Unicast() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6UnicastPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6UnicastPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Ipv6Unicast (container): Routing tables for IPv6 unicast -- active when the
// afi-safi name is ipv6-unicast
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "ipv6-unicast"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathAny) Ipv6Unicast() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6UnicastPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6UnicastPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// L2VpnEvpn (container): Routing tables for l2vpn evpn -- active when the
// afi-safi name is l2vpn-evpn
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "l2vpn-evpn"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPath) L2VpnEvpn() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpnPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpnPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"l2vpn-evpn"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// L2VpnEvpn (container): Routing tables for l2vpn evpn -- active when the
// afi-safi name is l2vpn-evpn
//
//	Defining module:      "openconfig-rib-bgp"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "l2vpn-evpn"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathAny) L2VpnEvpn() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpnPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpnPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"l2vpn-evpn"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathMap) State() ygnmi.SingletonQuery[map[oc.E_BgpTypes_AFI_SAFI_TYPE]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi] {
	return ygnmi.NewSingletonQuery[map[oc.E_BgpTypes_AFI_SAFI_TYPE]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi](
		"NetworkInstance_Protocol_Bgp_Rib",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[oc.E_BgpTypes_AFI_SAFI_TYPE]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib).AfiSafi
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_Rib) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:afi-safis"},
			PostRelPath: []string{"openconfig-network-instance:afi-safi"},
		},
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafiPathMapAny) State() ygnmi.WildcardQuery[map[oc.E_BgpTypes_AFI_SAFI_TYPE]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi] {
	return ygnmi.NewWildcardQuery[map[oc.E_BgpTypes_AFI_SAFI_TYPE]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi](
		"NetworkInstance_Protocol_Bgp_Rib",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[oc.E_BgpTypes_AFI_SAFI_TYPE]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib).AfiSafi
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_Rib) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:afi-safis"},
			PostRelPath: []string{"openconfig-network-instance:afi-safi"},
		},
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicyPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicyPathAny struct {
	*ygnmi.NodePath
}

// LocRib (container): The Loc-RIB for the SR-TE Policy SAFI for IPv4 or IPv6 Unicast
// AFIs.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "loc-rib"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicyPath) LocRib() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRibPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRibPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"loc-rib"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// LocRib (container): The Loc-RIB for the SR-TE Policy SAFI for IPv4 or IPv6 Unicast
// AFIs.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "loc-rib"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicyPathAny) LocRib() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRibPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRibPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"loc-rib"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// NeighborAny (list): An individual neighbour that is enabled for the SR-TE
// Policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "neighbors/neighbor"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicyPath) NeighborAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": "*"},
			n,
		),
	}
	return ps
}

// NeighborAny (list): An individual neighbour that is enabled for the SR-TE
// Policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "neighbors/neighbor"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicyPathAny) NeighborAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": "*"},
			n,
		),
	}
	return ps
}

// Neighbor (list): An individual neighbour that is enabled for the SR-TE
// Policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "neighbors/neighbor"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor"
//
//	NeighborAddress: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicyPath) Neighbor(NeighborAddress string) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": NeighborAddress},
			n,
		),
	}
	return ps
}

// Neighbor (list): An individual neighbour that is enabled for the SR-TE
// Policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "neighbors/neighbor"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor"
//
//	NeighborAddress: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicyPathAny) Neighbor(NeighborAddress string) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": NeighborAddress},
			n,
		),
	}
	return ps
}

// NeighborMap (list): An individual neighbour that is enabled for the SR-TE
// Policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "neighbors/neighbor"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicyPath) NeighborMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathMap {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"neighbors"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// NeighborMap (list): An individual neighbour that is enabled for the SR-TE
// Policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "neighbors/neighbor"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicyPathAny) NeighborMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathMapAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"neighbors"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicyPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicyPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRibPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRibPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRibPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRibPathAny struct {
	*ygnmi.NodePath
}

// RouteAny (list): Route within the specified address family for the SR-TE
// Policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRibPath) RouteAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": "*", "endpoint": "*", "color": "*"},
			n,
		),
	}
	return ps
}

// RouteAny (list): Route within the specified address family for the SR-TE
// Policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRibPathAny) RouteAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": "*", "endpoint": "*", "color": "*"},
			n,
		),
	}
	return ps
}

// WithPathId sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny's key "path-id" to the specified value.
// PathId: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny) WithPathId(PathId uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny {
	ygnmi.ModifyKey(n.NodePath, "path-id", PathId)
	return n
}

// WithEndpoint sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny's key "endpoint" to the specified value.
// Endpoint: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny) WithEndpoint(Endpoint string) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny {
	ygnmi.ModifyKey(n.NodePath, "endpoint", Endpoint)
	return n
}

// WithColor sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny's key "color" to the specified value.
// Color: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny) WithColor(Color uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny {
	ygnmi.ModifyKey(n.NodePath, "color", Color)
	return n
}

// Route (list): Route within the specified address family for the SR-TE
// Policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route"
//
//	PathId: uint32
//	Endpoint: string
//	Color: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRibPath) Route(PathId uint32, Endpoint string, Color uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": PathId, "endpoint": Endpoint, "color": Color},
			n,
		),
	}
	return ps
}

// Route (list): Route within the specified address family for the SR-TE
// Policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route"
//
//	PathId: uint32
//	Endpoint: string
//	Color: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRibPathAny) Route(PathId uint32, Endpoint string, Color uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": PathId, "endpoint": Endpoint, "color": Color},
			n,
		),
	}
	return ps
}

// RouteMap (list): Route within the specified address family for the SR-TE
// Policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRibPath) RouteMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathMap {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// RouteMap (list): Route within the specified address family for the SR-TE
// Policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRibPathAny) RouteMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathMapAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRibPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRibPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_AttrIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_AttrIndexPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_AttrIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_AttrIndexPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_AttrIndexPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).AttrIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_AttrIndexPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).AttrIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ColorPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/color YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ColorPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ColorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/color YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ColorPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ColorPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ColorPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "color"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ColorPath) Config() ygnmi.ConfigQuery[uint32] {
	return ygnmi.NewConfigQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "color"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ColorPathAny) Config() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_CommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_CommunityIndexPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_CommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_CommunityIndexPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_CommunityIndexPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).CommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_CommunityIndexPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).CommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_EndpointPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/endpoint YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_EndpointPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_EndpointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/endpoint YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_EndpointPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_EndpointPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_EndpointPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "endpoint"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_EndpointPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "endpoint"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_EndpointPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ExtCommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ExtCommunityIndexPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ExtCommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ExtCommunityIndexPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ExtCommunityIndexPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).ExtCommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ExtCommunityIndexPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).ExtCommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_InvalidReasonPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_InvalidReasonPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_InvalidReasonPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_InvalidReasonPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_InvalidReasonPath) State() ygnmi.SingletonQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON] {
	return ygnmi.NewSingletonQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_RibBgpTypes_INVALID_ROUTE_REASON, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).InvalidReason
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_InvalidReasonPathAny) State() ygnmi.WildcardQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON] {
	return ygnmi.NewWildcardQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_RibBgpTypes_INVALID_ROUTE_REASON, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).InvalidReason
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_LastModifiedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_LastModifiedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_LastModifiedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_LastModifiedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_LastModifiedPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).LastModified
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_LastModifiedPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).LastModified
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_PathIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_PathIdPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_PathIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_PathIdPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_PathIdPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_PathIdPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "path-id"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_PathIdPath) Config() ygnmi.ConfigQuery[uint32] {
	return ygnmi.NewConfigQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "path-id"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_PathIdPathAny) Config() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ValidRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ValidRoutePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ValidRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ValidRoutePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ValidRoutePath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).ValidRoute
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ValidRoutePathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).ValidRoute
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathMap represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathMap struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathMapAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathMapAny struct {
	*ygnmi.NodePath
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePath) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_AttrIndexPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_AttrIndexPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_AttrIndexPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_AttrIndexPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Color (leaf): A 4-octet value identifying the policy. Combined with the endpoint
// the endpoint and colour represent the unique policy.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/*/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePath) Color() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ColorPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ColorPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "color"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Color (leaf): A 4-octet value identifying the policy. Combined with the endpoint
// the endpoint and colour represent the unique policy.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/*/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny) Color() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ColorPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ColorPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "color"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// CommunityIndex (leaf): Reference to the community attribute for the route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePath) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_CommunityIndexPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_CommunityIndexPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// CommunityIndex (leaf): Reference to the community attribute for the route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_CommunityIndexPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_CommunityIndexPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Endpoint (leaf): A unique identifier for the remote set of nodes. When the address
// family is IPv4, the value is a 4-octet IPv4 address. When the
// address family is IPv6, the value is a 16-octet IPv6 address.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/*/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePath) Endpoint() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_EndpointPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_EndpointPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "endpoint"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Endpoint (leaf): A unique identifier for the remote set of nodes. When the address
// family is IPv4, the value is a 4-octet IPv4 address. When the
// address family is IPv6, the value is a 16-octet IPv6 address.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/*/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny) Endpoint() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_EndpointPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_EndpointPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "endpoint"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePath) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ExtCommunityIndexPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ExtCommunityIndexPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ExtCommunityIndexPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ExtCommunityIndexPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePath) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_InvalidReasonPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_InvalidReasonPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_InvalidReasonPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_InvalidReasonPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePath) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_LastModifiedPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_LastModifiedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_LastModifiedPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_LastModifiedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PathId (leaf): Identifier for the path when using BGP ADD-PATHS for the SR-TE
// policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/*/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePath) PathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_PathIdPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_PathIdPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "path-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PathId (leaf): Identifier for the path when using BGP ADD-PATHS for the SR-TE
// policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/*/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny) PathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_PathIdPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_PathIdPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "path-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePath) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
	return ps
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
	return ps
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute"
//
//	AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePath) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
	return ps
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute"
//
//	AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
	return ps
}

// UnknownAttributeMap (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePath) UnknownAttributeMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathMap {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// UnknownAttributeMap (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny) UnknownAttributeMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathMapAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePath) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ValidRoutePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ValidRoutePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ValidRoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_ValidRoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathMap) State() ygnmi.SingletonQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route] {
	return ygnmi.NewSingletonQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib).Route
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:routes"},
			PostRelPath: []string{"openconfig-network-instance:route"},
		},
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_RoutePathMapAny) State() ygnmi.WildcardQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route] {
	return ygnmi.NewWildcardQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib).Route
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:routes"},
			PostRelPath: []string{"openconfig-network-instance:route"},
		},
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrLenPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrLenPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrLenPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrLenPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrLenPath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute).AttrLen
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrLenPathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute).AttrLen
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrTypePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrTypePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrTypePath) State() ygnmi.SingletonQuery[uint8] {
	return ygnmi.NewSingletonQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrTypePathAny) State() ygnmi.WildcardQuery[uint8] {
	return ygnmi.NewWildcardQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "attr-type"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrTypePath) Config() ygnmi.ConfigQuery[uint8] {
	return ygnmi.NewConfigQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "attr-type"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrTypePathAny) Config() ygnmi.WildcardQuery[uint8] {
	return ygnmi.NewWildcardQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrValuePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrValuePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrValuePath) State() ygnmi.SingletonQuery[oc.Binary] {
	return ygnmi.NewSingletonQuery[oc.Binary](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.Binary, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute).AttrValue
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrValuePathAny) State() ygnmi.WildcardQuery[oc.Binary] {
	return ygnmi.NewWildcardQuery[oc.Binary](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.Binary, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute).AttrValue
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_ExtendedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_ExtendedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_ExtendedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_ExtendedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_ExtendedPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "extended"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute).Extended
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_ExtendedPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "extended"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute).Extended
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_OptionalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_OptionalPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_OptionalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_OptionalPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_OptionalPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "optional"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute).Optional
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_OptionalPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "optional"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute).Optional
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_PartialPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_PartialPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_PartialPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_PartialPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_PartialPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "partial"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute).Partial
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_PartialPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "partial"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute).Partial
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_TransitivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_TransitivePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_TransitivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_TransitivePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_TransitivePath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute).Transitive
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_TransitivePathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute).Transitive
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathAny struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathMap represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathMap struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathMapAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathMapAny struct {
	*ygnmi.NodePath
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePath) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrLenPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrLenPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathAny) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrLenPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrLenPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrType (leaf): 1-octet value encoding the attribute type code
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/*/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePath) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrTypePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrTypePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "attr-type"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrType (leaf): 1-octet value encoding the attribute type code
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/*/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathAny) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrTypePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrTypePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "attr-type"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePath) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrValuePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrValuePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathAny) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrValuePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_AttrValuePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePath) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_ExtendedPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_ExtendedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathAny) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_ExtendedPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_ExtendedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePath) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_OptionalPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_OptionalPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathAny) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_OptionalPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_OptionalPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePath) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_PartialPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_PartialPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathAny) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_PartialPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_PartialPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePath) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_TransitivePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_TransitivePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathAny) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_TransitivePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute_TransitivePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathMap) State() ygnmi.SingletonQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute] {
	return ygnmi.NewSingletonQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).UnknownAttribute
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:unknown-attributes"},
			PostRelPath: []string{"openconfig-network-instance:unknown-attribute"},
		},
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttributePathMapAny) State() ygnmi.WildcardQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute] {
	return ygnmi.NewWildcardQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route_UnknownAttribute, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route).UnknownAttribute
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:unknown-attributes"},
			PostRelPath: []string{"openconfig-network-instance:unknown-attribute"},
		},
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/state/neighbor-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_NeighborAddressPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/state/neighbor-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_NeighborAddressPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/neighbor-address"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/state/neighbor-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_NeighborAddressPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "neighbor-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor).NeighborAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/neighbor-address"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/state/neighbor-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_NeighborAddressPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "neighbor-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor).NeighborAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "neighbor-address"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_NeighborAddressPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"neighbor-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor).NeighborAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "neighbor-address"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_NeighborAddressPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"neighbor-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor).NeighborAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathAny struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathMap represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathMap struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathMapAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathMapAny struct {
	*ygnmi.NodePath
}

// AdjRibInPost (container): The Adj-RIB-In for the SR-TE Policy SAFI for the neighbour,
// following any inbound policy constraints or modifications
// being made.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "adj-rib-in-post"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPath) AdjRibInPost() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPostPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPostPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"adj-rib-in-post"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// AdjRibInPost (container): The Adj-RIB-In for the SR-TE Policy SAFI for the neighbour,
// following any inbound policy constraints or modifications
// being made.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "adj-rib-in-post"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathAny) AdjRibInPost() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPostPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPostPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"adj-rib-in-post"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// AdjRibInPre (container): The Adj-RIB-In for the SR-TE Policy SAFI for the neighbour,
// prior to any inbound policy constraints or modifications
// having been applied.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "adj-rib-in-pre"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPath) AdjRibInPre() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPrePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPrePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"adj-rib-in-pre"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// AdjRibInPre (container): The Adj-RIB-In for the SR-TE Policy SAFI for the neighbour,
// prior to any inbound policy constraints or modifications
// having been applied.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "adj-rib-in-pre"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathAny) AdjRibInPre() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPrePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPrePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"adj-rib-in-pre"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// AdjRibOutPost (container): The Adj-RIB-Out for the SR-TE Policy SAFI for the neighbour,
// follow any outbound policy constraints or modifications being
// made.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "adj-rib-out-post"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPath) AdjRibOutPost() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPostPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPostPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"adj-rib-out-post"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// AdjRibOutPost (container): The Adj-RIB-Out for the SR-TE Policy SAFI for the neighbour,
// follow any outbound policy constraints or modifications being
// made.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "adj-rib-out-post"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathAny) AdjRibOutPost() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPostPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPostPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"adj-rib-out-post"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// AdjRibOutPre (container): The Adj-RIB-Out for the SR-TE Policy SAFI for the neighbour,
// prior to any outgoing policy modifications or constraints
// having been applied.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "adj-rib-out-pre"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPath) AdjRibOutPre() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPrePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPrePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"adj-rib-out-pre"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// AdjRibOutPre (container): The Adj-RIB-Out for the SR-TE Policy SAFI for the neighbour,
// prior to any outgoing policy modifications or constraints
// having been applied.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "adj-rib-out-pre"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathAny) AdjRibOutPre() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPrePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPrePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"adj-rib-out-pre"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// NeighborAddress (leaf): The address of the neighbour for which the SR-TE policy
// SAFI has been negotiated.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/neighbor-address"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/*/neighbor-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPath) NeighborAddress() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_NeighborAddressPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_NeighborAddressPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "neighbor-address"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// NeighborAddress (leaf): The address of the neighbour for which the SR-TE policy
// SAFI has been negotiated.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/neighbor-address"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/*/neighbor-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathAny) NeighborAddress() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_NeighborAddressPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_NeighborAddressPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "neighbor-address"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathMap) State() ygnmi.SingletonQuery[map[string]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor] {
	return ygnmi.NewSingletonQuery[map[string]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[string]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy).Neighbor
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:neighbors"},
			PostRelPath: []string{"openconfig-network-instance:neighbor"},
		},
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_NeighborPathMapAny) State() ygnmi.WildcardQuery[map[string]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor] {
	return ygnmi.NewWildcardQuery[map[string]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[string]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy).Neighbor
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:neighbors"},
			PostRelPath: []string{"openconfig-network-instance:neighbor"},
		},
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPostPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPostPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPostPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPostPathAny struct {
	*ygnmi.NodePath
}

// RouteAny (list): The routes that are in the Adj-RIB-In-Post for the specified
// BGP neighbour within the SR-TE Policy SAFI for the specified
// address family.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPostPath) RouteAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": "*", "endpoint": "*", "color": "*"},
			n,
		),
	}
	return ps
}

// RouteAny (list): The routes that are in the Adj-RIB-In-Post for the specified
// BGP neighbour within the SR-TE Policy SAFI for the specified
// address family.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPostPathAny) RouteAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": "*", "endpoint": "*", "color": "*"},
			n,
		),
	}
	return ps
}

// WithPathId sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny's key "path-id" to the specified value.
// PathId: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny) WithPathId(PathId uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny {
	ygnmi.ModifyKey(n.NodePath, "path-id", PathId)
	return n
}

// WithEndpoint sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny's key "endpoint" to the specified value.
// Endpoint: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny) WithEndpoint(Endpoint string) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny {
	ygnmi.ModifyKey(n.NodePath, "endpoint", Endpoint)
	return n
}

// WithColor sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny's key "color" to the specified value.
// Color: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny) WithColor(Color uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny {
	ygnmi.ModifyKey(n.NodePath, "color", Color)
	return n
}

// Route (list): The routes that are in the Adj-RIB-In-Post for the specified
// BGP neighbour within the SR-TE Policy SAFI for the specified
// address family.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route"
//
//	PathId: uint32
//	Endpoint: string
//	Color: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPostPath) Route(PathId uint32, Endpoint string, Color uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": PathId, "endpoint": Endpoint, "color": Color},
			n,
		),
	}
	return ps
}

// Route (list): The routes that are in the Adj-RIB-In-Post for the specified
// BGP neighbour within the SR-TE Policy SAFI for the specified
// address family.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route"
//
//	PathId: uint32
//	Endpoint: string
//	Color: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPostPathAny) Route(PathId uint32, Endpoint string, Color uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": PathId, "endpoint": Endpoint, "color": Color},
			n,
		),
	}
	return ps
}

// RouteMap (list): The routes that are in the Adj-RIB-In-Post for the specified
// BGP neighbour within the SR-TE Policy SAFI for the specified
// address family.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPostPath) RouteMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathMap {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// RouteMap (list): The routes that are in the Adj-RIB-In-Post for the specified
// BGP neighbour within the SR-TE Policy SAFI for the specified
// address family.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPostPathAny) RouteMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathMapAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPostPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPostPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_AttrIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_AttrIndexPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_AttrIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_AttrIndexPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_AttrIndexPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).AttrIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_AttrIndexPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).AttrIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_BestPathPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/best-path YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_BestPathPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_BestPathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/best-path YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_BestPathPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/best-path"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/best-path"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_BestPathPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "best-path"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).BestPath
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/best-path"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/best-path"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_BestPathPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "best-path"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).BestPath
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ColorPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/color YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ColorPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ColorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/color YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ColorPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ColorPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ColorPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "color"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ColorPath) Config() ygnmi.ConfigQuery[uint32] {
	return ygnmi.NewConfigQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "color"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ColorPathAny) Config() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_CommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_CommunityIndexPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_CommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_CommunityIndexPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_CommunityIndexPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).CommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_CommunityIndexPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).CommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_EndpointPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/endpoint YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_EndpointPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_EndpointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/endpoint YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_EndpointPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_EndpointPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_EndpointPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "endpoint"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_EndpointPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "endpoint"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_EndpointPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ExtCommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ExtCommunityIndexPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ExtCommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ExtCommunityIndexPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ExtCommunityIndexPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).ExtCommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ExtCommunityIndexPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).ExtCommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_InvalidReasonPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_InvalidReasonPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_InvalidReasonPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_InvalidReasonPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_InvalidReasonPath) State() ygnmi.SingletonQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON] {
	return ygnmi.NewSingletonQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_RibBgpTypes_INVALID_ROUTE_REASON, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).InvalidReason
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_InvalidReasonPathAny) State() ygnmi.WildcardQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON] {
	return ygnmi.NewWildcardQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_RibBgpTypes_INVALID_ROUTE_REASON, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).InvalidReason
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_LastModifiedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_LastModifiedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_LastModifiedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_LastModifiedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_LastModifiedPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).LastModified
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_LastModifiedPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).LastModified
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_PathIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_PathIdPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_PathIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_PathIdPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_PathIdPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_PathIdPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "path-id"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_PathIdPath) Config() ygnmi.ConfigQuery[uint32] {
	return ygnmi.NewConfigQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "path-id"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_PathIdPathAny) Config() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ValidRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ValidRoutePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ValidRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ValidRoutePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ValidRoutePath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).ValidRoute
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ValidRoutePathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).ValidRoute
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathMap represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathMap struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathMapAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathMapAny struct {
	*ygnmi.NodePath
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePath) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_AttrIndexPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_AttrIndexPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_AttrIndexPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_AttrIndexPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// BestPath (leaf): Current path was selected as the best path.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/best-path"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/best-path"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePath) BestPath() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_BestPathPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_BestPathPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "best-path"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// BestPath (leaf): Current path was selected as the best path.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/best-path"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/best-path"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny) BestPath() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_BestPathPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_BestPathPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "best-path"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Color (leaf): A 4-octet value identifying the policy. Combined with the endpoint
// the endpoint and colour represent the unique policy.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/*/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePath) Color() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ColorPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ColorPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "color"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Color (leaf): A 4-octet value identifying the policy. Combined with the endpoint
// the endpoint and colour represent the unique policy.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/*/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny) Color() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ColorPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ColorPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "color"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// CommunityIndex (leaf): Reference to the community attribute for the route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePath) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_CommunityIndexPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_CommunityIndexPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// CommunityIndex (leaf): Reference to the community attribute for the route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_CommunityIndexPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_CommunityIndexPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Endpoint (leaf): A unique identifier for the remote set of nodes. When the address
// family is IPv4, the value is a 4-octet IPv4 address. When the
// address family is IPv6, the value is a 16-octet IPv6 address.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/*/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePath) Endpoint() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_EndpointPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_EndpointPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "endpoint"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Endpoint (leaf): A unique identifier for the remote set of nodes. When the address
// family is IPv4, the value is a 4-octet IPv4 address. When the
// address family is IPv6, the value is a 16-octet IPv6 address.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/*/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny) Endpoint() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_EndpointPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_EndpointPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "endpoint"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePath) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ExtCommunityIndexPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ExtCommunityIndexPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ExtCommunityIndexPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ExtCommunityIndexPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePath) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_InvalidReasonPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_InvalidReasonPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_InvalidReasonPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_InvalidReasonPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePath) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_LastModifiedPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_LastModifiedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_LastModifiedPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_LastModifiedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PathId (leaf): Identifier for the path when using BGP ADD-PATHS for the SR-TE
// policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/*/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePath) PathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_PathIdPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_PathIdPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "path-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PathId (leaf): Identifier for the path when using BGP ADD-PATHS for the SR-TE
// policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/*/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny) PathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_PathIdPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_PathIdPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "path-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePath) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
	return ps
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
	return ps
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute"
//
//	AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePath) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
	return ps
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute"
//
//	AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
	return ps
}

// UnknownAttributeMap (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePath) UnknownAttributeMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathMap {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// UnknownAttributeMap (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny) UnknownAttributeMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathMapAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePath) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ValidRoutePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ValidRoutePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ValidRoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_ValidRoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathMap) State() ygnmi.SingletonQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route] {
	return ygnmi.NewSingletonQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost).Route
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:routes"},
			PostRelPath: []string{"openconfig-network-instance:route"},
		},
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_RoutePathMapAny) State() ygnmi.WildcardQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route] {
	return ygnmi.NewWildcardQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost).Route
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:routes"},
			PostRelPath: []string{"openconfig-network-instance:route"},
		},
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrLenPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrLenPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrLenPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrLenPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrLenPath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute).AttrLen
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrLenPathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute).AttrLen
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrTypePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrTypePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrTypePath) State() ygnmi.SingletonQuery[uint8] {
	return ygnmi.NewSingletonQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrTypePathAny) State() ygnmi.WildcardQuery[uint8] {
	return ygnmi.NewWildcardQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "attr-type"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrTypePath) Config() ygnmi.ConfigQuery[uint8] {
	return ygnmi.NewConfigQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "attr-type"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrTypePathAny) Config() ygnmi.WildcardQuery[uint8] {
	return ygnmi.NewWildcardQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrValuePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrValuePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrValuePath) State() ygnmi.SingletonQuery[oc.Binary] {
	return ygnmi.NewSingletonQuery[oc.Binary](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.Binary, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute).AttrValue
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrValuePathAny) State() ygnmi.WildcardQuery[oc.Binary] {
	return ygnmi.NewWildcardQuery[oc.Binary](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.Binary, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute).AttrValue
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_ExtendedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_ExtendedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_ExtendedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_ExtendedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_ExtendedPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "extended"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute).Extended
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_ExtendedPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "extended"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute).Extended
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_OptionalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_OptionalPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_OptionalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_OptionalPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_OptionalPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "optional"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute).Optional
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_OptionalPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "optional"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute).Optional
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_PartialPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_PartialPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_PartialPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_PartialPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_PartialPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "partial"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute).Partial
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_PartialPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "partial"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute).Partial
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_TransitivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_TransitivePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_TransitivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_TransitivePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_TransitivePath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute).Transitive
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_TransitivePathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute).Transitive
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathAny struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathMap represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathMap struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathMapAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathMapAny struct {
	*ygnmi.NodePath
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePath) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrLenPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrLenPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathAny) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrLenPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrLenPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrType (leaf): 1-octet value encoding the attribute type code
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/*/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePath) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrTypePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrTypePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "attr-type"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrType (leaf): 1-octet value encoding the attribute type code
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/*/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathAny) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrTypePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrTypePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "attr-type"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePath) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrValuePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrValuePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathAny) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrValuePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_AttrValuePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePath) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_ExtendedPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_ExtendedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathAny) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_ExtendedPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_ExtendedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePath) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_OptionalPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_OptionalPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathAny) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_OptionalPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_OptionalPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePath) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_PartialPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_PartialPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathAny) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_PartialPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_PartialPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePath) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_TransitivePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_TransitivePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-post/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathAny) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_TransitivePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute_TransitivePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathMap) State() ygnmi.SingletonQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute] {
	return ygnmi.NewSingletonQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).UnknownAttribute
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:unknown-attributes"},
			PostRelPath: []string{"openconfig-network-instance:unknown-attribute"},
		},
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttributePathMapAny) State() ygnmi.WildcardQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute] {
	return ygnmi.NewWildcardQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route_UnknownAttribute, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route).UnknownAttribute
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:unknown-attributes"},
			PostRelPath: []string{"openconfig-network-instance:unknown-attribute"},
		},
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPrePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPrePath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPrePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPrePathAny struct {
	*ygnmi.NodePath
}

// RouteAny (list): The routes within the SR-TE Policy SAFI Adj-RIB. The
// routes are keyed on the path-id - set to a non-zero
// value only if ADD-PATHS is being used; the color; and
// the endpoint. The colour and endpoint are extracted from
// the NLRI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPrePath) RouteAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": "*", "endpoint": "*", "color": "*"},
			n,
		),
	}
	return ps
}

// RouteAny (list): The routes within the SR-TE Policy SAFI Adj-RIB. The
// routes are keyed on the path-id - set to a non-zero
// value only if ADD-PATHS is being used; the color; and
// the endpoint. The colour and endpoint are extracted from
// the NLRI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPrePathAny) RouteAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": "*", "endpoint": "*", "color": "*"},
			n,
		),
	}
	return ps
}

// WithPathId sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny's key "path-id" to the specified value.
// PathId: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny) WithPathId(PathId uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny {
	ygnmi.ModifyKey(n.NodePath, "path-id", PathId)
	return n
}

// WithEndpoint sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny's key "endpoint" to the specified value.
// Endpoint: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny) WithEndpoint(Endpoint string) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny {
	ygnmi.ModifyKey(n.NodePath, "endpoint", Endpoint)
	return n
}

// WithColor sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny's key "color" to the specified value.
// Color: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny) WithColor(Color uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny {
	ygnmi.ModifyKey(n.NodePath, "color", Color)
	return n
}

// Route (list): The routes within the SR-TE Policy SAFI Adj-RIB. The
// routes are keyed on the path-id - set to a non-zero
// value only if ADD-PATHS is being used; the color; and
// the endpoint. The colour and endpoint are extracted from
// the NLRI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route"
//
//	PathId: uint32
//	Endpoint: string
//	Color: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPrePath) Route(PathId uint32, Endpoint string, Color uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": PathId, "endpoint": Endpoint, "color": Color},
			n,
		),
	}
	return ps
}

// Route (list): The routes within the SR-TE Policy SAFI Adj-RIB. The
// routes are keyed on the path-id - set to a non-zero
// value only if ADD-PATHS is being used; the color; and
// the endpoint. The colour and endpoint are extracted from
// the NLRI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route"
//
//	PathId: uint32
//	Endpoint: string
//	Color: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPrePathAny) Route(PathId uint32, Endpoint string, Color uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": PathId, "endpoint": Endpoint, "color": Color},
			n,
		),
	}
	return ps
}

// RouteMap (list): The routes within the SR-TE Policy SAFI Adj-RIB. The
// routes are keyed on the path-id - set to a non-zero
// value only if ADD-PATHS is being used; the color; and
// the endpoint. The colour and endpoint are extracted from
// the NLRI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPrePath) RouteMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathMap {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// RouteMap (list): The routes within the SR-TE Policy SAFI Adj-RIB. The
// routes are keyed on the path-id - set to a non-zero
// value only if ADD-PATHS is being used; the color; and
// the endpoint. The colour and endpoint are extracted from
// the NLRI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPrePathAny) RouteMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathMapAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPrePath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPrePathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_AttrIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_AttrIndexPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_AttrIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_AttrIndexPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_AttrIndexPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).AttrIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_AttrIndexPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).AttrIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ColorPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/color YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ColorPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ColorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/color YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ColorPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ColorPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ColorPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "color"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ColorPath) Config() ygnmi.ConfigQuery[uint32] {
	return ygnmi.NewConfigQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "color"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ColorPathAny) Config() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_CommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_CommunityIndexPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_CommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_CommunityIndexPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_CommunityIndexPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).CommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_CommunityIndexPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).CommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_EndpointPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/endpoint YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_EndpointPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_EndpointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/endpoint YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_EndpointPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_EndpointPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_EndpointPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "endpoint"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_EndpointPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "endpoint"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_EndpointPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ExtCommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ExtCommunityIndexPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ExtCommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ExtCommunityIndexPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ExtCommunityIndexPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).ExtCommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ExtCommunityIndexPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).ExtCommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_InvalidReasonPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_InvalidReasonPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_InvalidReasonPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_InvalidReasonPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_InvalidReasonPath) State() ygnmi.SingletonQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON] {
	return ygnmi.NewSingletonQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_RibBgpTypes_INVALID_ROUTE_REASON, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).InvalidReason
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_InvalidReasonPathAny) State() ygnmi.WildcardQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON] {
	return ygnmi.NewWildcardQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_RibBgpTypes_INVALID_ROUTE_REASON, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).InvalidReason
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_LastModifiedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_LastModifiedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_LastModifiedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_LastModifiedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_LastModifiedPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).LastModified
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_LastModifiedPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).LastModified
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_PathIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_PathIdPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_PathIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_PathIdPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_PathIdPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_PathIdPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "path-id"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_PathIdPath) Config() ygnmi.ConfigQuery[uint32] {
	return ygnmi.NewConfigQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "path-id"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_PathIdPathAny) Config() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ValidRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ValidRoutePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ValidRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ValidRoutePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ValidRoutePath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).ValidRoute
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ValidRoutePathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).ValidRoute
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathMap represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathMap struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathMapAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathMapAny struct {
	*ygnmi.NodePath
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePath) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_AttrIndexPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_AttrIndexPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_AttrIndexPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_AttrIndexPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Color (leaf): A 4-octet value identifying the policy. Combined with the endpoint
// the endpoint and colour represent the unique policy.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/*/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePath) Color() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ColorPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ColorPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "color"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Color (leaf): A 4-octet value identifying the policy. Combined with the endpoint
// the endpoint and colour represent the unique policy.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/*/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny) Color() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ColorPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ColorPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "color"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// CommunityIndex (leaf): Reference to the community attribute for the route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePath) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_CommunityIndexPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_CommunityIndexPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// CommunityIndex (leaf): Reference to the community attribute for the route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_CommunityIndexPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_CommunityIndexPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Endpoint (leaf): A unique identifier for the remote set of nodes. When the address
// family is IPv4, the value is a 4-octet IPv4 address. When the
// address family is IPv6, the value is a 16-octet IPv6 address.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/*/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePath) Endpoint() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_EndpointPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_EndpointPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "endpoint"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Endpoint (leaf): A unique identifier for the remote set of nodes. When the address
// family is IPv4, the value is a 4-octet IPv4 address. When the
// address family is IPv6, the value is a 16-octet IPv6 address.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/*/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny) Endpoint() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_EndpointPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_EndpointPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "endpoint"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePath) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ExtCommunityIndexPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ExtCommunityIndexPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ExtCommunityIndexPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ExtCommunityIndexPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePath) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_InvalidReasonPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_InvalidReasonPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_InvalidReasonPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_InvalidReasonPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePath) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_LastModifiedPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_LastModifiedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_LastModifiedPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_LastModifiedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PathId (leaf): Identifier for the path when using BGP ADD-PATHS for the SR-TE
// policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/*/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePath) PathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_PathIdPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_PathIdPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "path-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PathId (leaf): Identifier for the path when using BGP ADD-PATHS for the SR-TE
// policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/*/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny) PathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_PathIdPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_PathIdPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "path-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePath) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
	return ps
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
	return ps
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute"
//
//	AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePath) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
	return ps
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute"
//
//	AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
	return ps
}

// UnknownAttributeMap (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePath) UnknownAttributeMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathMap {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// UnknownAttributeMap (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny) UnknownAttributeMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathMapAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePath) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ValidRoutePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ValidRoutePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ValidRoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_ValidRoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathMap) State() ygnmi.SingletonQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route] {
	return ygnmi.NewSingletonQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre).Route
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:routes"},
			PostRelPath: []string{"openconfig-network-instance:route"},
		},
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_RoutePathMapAny) State() ygnmi.WildcardQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route] {
	return ygnmi.NewWildcardQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre).Route
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:routes"},
			PostRelPath: []string{"openconfig-network-instance:route"},
		},
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrLenPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrLenPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrLenPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrLenPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrLenPath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute).AttrLen
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrLenPathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute).AttrLen
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrTypePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrTypePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrTypePath) State() ygnmi.SingletonQuery[uint8] {
	return ygnmi.NewSingletonQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrTypePathAny) State() ygnmi.WildcardQuery[uint8] {
	return ygnmi.NewWildcardQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "attr-type"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrTypePath) Config() ygnmi.ConfigQuery[uint8] {
	return ygnmi.NewConfigQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "attr-type"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrTypePathAny) Config() ygnmi.WildcardQuery[uint8] {
	return ygnmi.NewWildcardQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrValuePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrValuePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrValuePath) State() ygnmi.SingletonQuery[oc.Binary] {
	return ygnmi.NewSingletonQuery[oc.Binary](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.Binary, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute).AttrValue
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrValuePathAny) State() ygnmi.WildcardQuery[oc.Binary] {
	return ygnmi.NewWildcardQuery[oc.Binary](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.Binary, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute).AttrValue
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_ExtendedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_ExtendedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_ExtendedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_ExtendedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_ExtendedPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "extended"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute).Extended
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_ExtendedPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "extended"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute).Extended
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_OptionalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_OptionalPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_OptionalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_OptionalPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_OptionalPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "optional"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute).Optional
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_OptionalPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "optional"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute).Optional
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_PartialPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_PartialPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_PartialPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_PartialPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_PartialPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "partial"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute).Partial
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_PartialPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "partial"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute).Partial
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_TransitivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_TransitivePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_TransitivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_TransitivePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_TransitivePath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute).Transitive
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_TransitivePathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute).Transitive
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathAny struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathMap represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathMap struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathMapAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathMapAny struct {
	*ygnmi.NodePath
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePath) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrLenPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrLenPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathAny) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrLenPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrLenPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrType (leaf): 1-octet value encoding the attribute type code
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/*/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePath) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrTypePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrTypePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "attr-type"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrType (leaf): 1-octet value encoding the attribute type code
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/*/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathAny) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrTypePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrTypePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "attr-type"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePath) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrValuePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrValuePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathAny) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrValuePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_AttrValuePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePath) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_ExtendedPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_ExtendedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathAny) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_ExtendedPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_ExtendedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePath) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_OptionalPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_OptionalPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathAny) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_OptionalPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_OptionalPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePath) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_PartialPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_PartialPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathAny) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_PartialPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_PartialPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePath) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_TransitivePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_TransitivePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-in-pre/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathAny) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_TransitivePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute_TransitivePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathMap) State() ygnmi.SingletonQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute] {
	return ygnmi.NewSingletonQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).UnknownAttribute
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:unknown-attributes"},
			PostRelPath: []string{"openconfig-network-instance:unknown-attribute"},
		},
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttributePathMapAny) State() ygnmi.WildcardQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute] {
	return ygnmi.NewWildcardQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route_UnknownAttribute, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route).UnknownAttribute
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibInPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:unknown-attributes"},
			PostRelPath: []string{"openconfig-network-instance:unknown-attribute"},
		},
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPostPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPostPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPostPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPostPathAny struct {
	*ygnmi.NodePath
}

// RouteAny (list): The routes within the SR-TE Policy SAFI Adj-RIB. The
// routes are keyed on the path-id - set to a non-zero
// value only if ADD-PATHS is being used; the color; and
// the endpoint. The colour and endpoint are extracted from
// the NLRI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPostPath) RouteAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": "*", "endpoint": "*", "color": "*"},
			n,
		),
	}
	return ps
}

// RouteAny (list): The routes within the SR-TE Policy SAFI Adj-RIB. The
// routes are keyed on the path-id - set to a non-zero
// value only if ADD-PATHS is being used; the color; and
// the endpoint. The colour and endpoint are extracted from
// the NLRI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPostPathAny) RouteAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": "*", "endpoint": "*", "color": "*"},
			n,
		),
	}
	return ps
}

// WithPathId sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny's key "path-id" to the specified value.
// PathId: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny) WithPathId(PathId uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny {
	ygnmi.ModifyKey(n.NodePath, "path-id", PathId)
	return n
}

// WithEndpoint sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny's key "endpoint" to the specified value.
// Endpoint: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny) WithEndpoint(Endpoint string) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny {
	ygnmi.ModifyKey(n.NodePath, "endpoint", Endpoint)
	return n
}

// WithColor sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny's key "color" to the specified value.
// Color: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny) WithColor(Color uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny {
	ygnmi.ModifyKey(n.NodePath, "color", Color)
	return n
}

// Route (list): The routes within the SR-TE Policy SAFI Adj-RIB. The
// routes are keyed on the path-id - set to a non-zero
// value only if ADD-PATHS is being used; the color; and
// the endpoint. The colour and endpoint are extracted from
// the NLRI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route"
//
//	PathId: uint32
//	Endpoint: string
//	Color: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPostPath) Route(PathId uint32, Endpoint string, Color uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": PathId, "endpoint": Endpoint, "color": Color},
			n,
		),
	}
	return ps
}

// Route (list): The routes within the SR-TE Policy SAFI Adj-RIB. The
// routes are keyed on the path-id - set to a non-zero
// value only if ADD-PATHS is being used; the color; and
// the endpoint. The colour and endpoint are extracted from
// the NLRI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route"
//
//	PathId: uint32
//	Endpoint: string
//	Color: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPostPathAny) Route(PathId uint32, Endpoint string, Color uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": PathId, "endpoint": Endpoint, "color": Color},
			n,
		),
	}
	return ps
}

// RouteMap (list): The routes within the SR-TE Policy SAFI Adj-RIB. The
// routes are keyed on the path-id - set to a non-zero
// value only if ADD-PATHS is being used; the color; and
// the endpoint. The colour and endpoint are extracted from
// the NLRI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPostPath) RouteMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathMap {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// RouteMap (list): The routes within the SR-TE Policy SAFI Adj-RIB. The
// routes are keyed on the path-id - set to a non-zero
// value only if ADD-PATHS is being used; the color; and
// the endpoint. The colour and endpoint are extracted from
// the NLRI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPostPathAny) RouteMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathMapAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPostPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPostPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_AttrIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_AttrIndexPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_AttrIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_AttrIndexPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_AttrIndexPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).AttrIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_AttrIndexPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).AttrIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ColorPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/color YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ColorPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ColorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/color YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ColorPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ColorPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ColorPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "color"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ColorPath) Config() ygnmi.ConfigQuery[uint32] {
	return ygnmi.NewConfigQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "color"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ColorPathAny) Config() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_CommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_CommunityIndexPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_CommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_CommunityIndexPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_CommunityIndexPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).CommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_CommunityIndexPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).CommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_EndpointPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/endpoint YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_EndpointPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_EndpointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/endpoint YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_EndpointPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_EndpointPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_EndpointPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "endpoint"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_EndpointPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "endpoint"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_EndpointPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ExtCommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ExtCommunityIndexPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ExtCommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ExtCommunityIndexPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ExtCommunityIndexPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).ExtCommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ExtCommunityIndexPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).ExtCommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_InvalidReasonPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_InvalidReasonPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_InvalidReasonPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_InvalidReasonPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_InvalidReasonPath) State() ygnmi.SingletonQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON] {
	return ygnmi.NewSingletonQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_RibBgpTypes_INVALID_ROUTE_REASON, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).InvalidReason
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_InvalidReasonPathAny) State() ygnmi.WildcardQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON] {
	return ygnmi.NewWildcardQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_RibBgpTypes_INVALID_ROUTE_REASON, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).InvalidReason
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_LastModifiedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_LastModifiedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_LastModifiedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_LastModifiedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_LastModifiedPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).LastModified
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_LastModifiedPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).LastModified
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_PathIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_PathIdPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_PathIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_PathIdPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_PathIdPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_PathIdPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "path-id"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_PathIdPath) Config() ygnmi.ConfigQuery[uint32] {
	return ygnmi.NewConfigQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "path-id"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_PathIdPathAny) Config() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ValidRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ValidRoutePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ValidRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ValidRoutePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ValidRoutePath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).ValidRoute
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ValidRoutePathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).ValidRoute
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathMap represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathMap struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathMapAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathMapAny struct {
	*ygnmi.NodePath
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePath) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_AttrIndexPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_AttrIndexPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_AttrIndexPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_AttrIndexPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Color (leaf): A 4-octet value identifying the policy. Combined with the endpoint
// the endpoint and colour represent the unique policy.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/*/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePath) Color() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ColorPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ColorPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "color"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Color (leaf): A 4-octet value identifying the policy. Combined with the endpoint
// the endpoint and colour represent the unique policy.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/*/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny) Color() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ColorPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ColorPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "color"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// CommunityIndex (leaf): Reference to the community attribute for the route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePath) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_CommunityIndexPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_CommunityIndexPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// CommunityIndex (leaf): Reference to the community attribute for the route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_CommunityIndexPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_CommunityIndexPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Endpoint (leaf): A unique identifier for the remote set of nodes. When the address
// family is IPv4, the value is a 4-octet IPv4 address. When the
// address family is IPv6, the value is a 16-octet IPv6 address.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/*/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePath) Endpoint() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_EndpointPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_EndpointPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "endpoint"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Endpoint (leaf): A unique identifier for the remote set of nodes. When the address
// family is IPv4, the value is a 4-octet IPv4 address. When the
// address family is IPv6, the value is a 16-octet IPv6 address.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/*/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny) Endpoint() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_EndpointPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_EndpointPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "endpoint"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePath) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ExtCommunityIndexPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ExtCommunityIndexPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ExtCommunityIndexPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ExtCommunityIndexPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePath) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_InvalidReasonPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_InvalidReasonPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_InvalidReasonPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_InvalidReasonPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePath) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_LastModifiedPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_LastModifiedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_LastModifiedPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_LastModifiedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PathId (leaf): Identifier for the path when using BGP ADD-PATHS for the SR-TE
// policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/*/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePath) PathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_PathIdPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_PathIdPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "path-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PathId (leaf): Identifier for the path when using BGP ADD-PATHS for the SR-TE
// policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/*/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny) PathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_PathIdPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_PathIdPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "path-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePath) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
	return ps
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
	return ps
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute"
//
//	AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePath) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
	return ps
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute"
//
//	AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
	return ps
}

// UnknownAttributeMap (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePath) UnknownAttributeMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathMap {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// UnknownAttributeMap (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny) UnknownAttributeMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathMapAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePath) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ValidRoutePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ValidRoutePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ValidRoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_ValidRoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathMap) State() ygnmi.SingletonQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route] {
	return ygnmi.NewSingletonQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost).Route
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:routes"},
			PostRelPath: []string{"openconfig-network-instance:route"},
		},
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_RoutePathMapAny) State() ygnmi.WildcardQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route] {
	return ygnmi.NewWildcardQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost).Route
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:routes"},
			PostRelPath: []string{"openconfig-network-instance:route"},
		},
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrLenPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrLenPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrLenPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrLenPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrLenPath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute).AttrLen
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrLenPathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute).AttrLen
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrTypePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrTypePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrTypePath) State() ygnmi.SingletonQuery[uint8] {
	return ygnmi.NewSingletonQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrTypePathAny) State() ygnmi.WildcardQuery[uint8] {
	return ygnmi.NewWildcardQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "attr-type"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrTypePath) Config() ygnmi.ConfigQuery[uint8] {
	return ygnmi.NewConfigQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "attr-type"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrTypePathAny) Config() ygnmi.WildcardQuery[uint8] {
	return ygnmi.NewWildcardQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrValuePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrValuePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrValuePath) State() ygnmi.SingletonQuery[oc.Binary] {
	return ygnmi.NewSingletonQuery[oc.Binary](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.Binary, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute).AttrValue
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrValuePathAny) State() ygnmi.WildcardQuery[oc.Binary] {
	return ygnmi.NewWildcardQuery[oc.Binary](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.Binary, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute).AttrValue
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_ExtendedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_ExtendedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_ExtendedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_ExtendedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_ExtendedPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "extended"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute).Extended
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_ExtendedPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "extended"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute).Extended
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_OptionalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_OptionalPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_OptionalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_OptionalPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_OptionalPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "optional"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute).Optional
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_OptionalPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "optional"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute).Optional
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_PartialPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_PartialPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_PartialPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_PartialPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_PartialPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "partial"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute).Partial
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_PartialPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "partial"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute).Partial
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_TransitivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_TransitivePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_TransitivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_TransitivePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_TransitivePath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute).Transitive
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_TransitivePathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute).Transitive
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathAny struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathMap represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathMap struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathMapAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathMapAny struct {
	*ygnmi.NodePath
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePath) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrLenPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrLenPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathAny) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrLenPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrLenPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrType (leaf): 1-octet value encoding the attribute type code
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/*/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePath) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrTypePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrTypePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "attr-type"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrType (leaf): 1-octet value encoding the attribute type code
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/*/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathAny) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrTypePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrTypePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "attr-type"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePath) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrValuePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrValuePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathAny) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrValuePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_AttrValuePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePath) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_ExtendedPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_ExtendedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathAny) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_ExtendedPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_ExtendedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePath) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_OptionalPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_OptionalPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathAny) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_OptionalPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_OptionalPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePath) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_PartialPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_PartialPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathAny) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_PartialPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_PartialPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePath) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_TransitivePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_TransitivePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-post/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathAny) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_TransitivePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute_TransitivePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathMap) State() ygnmi.SingletonQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute] {
	return ygnmi.NewSingletonQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).UnknownAttribute
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:unknown-attributes"},
			PostRelPath: []string{"openconfig-network-instance:unknown-attribute"},
		},
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttributePathMapAny) State() ygnmi.WildcardQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute] {
	return ygnmi.NewWildcardQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route_UnknownAttribute, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route).UnknownAttribute
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPost_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:unknown-attributes"},
			PostRelPath: []string{"openconfig-network-instance:unknown-attribute"},
		},
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPrePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPrePath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPrePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPrePathAny struct {
	*ygnmi.NodePath
}

// RouteAny (list): The routes within the SR-TE Policy SAFI Adj-RIB. The
// routes are keyed on the path-id - set to a non-zero
// value only if ADD-PATHS is being used; the color; and
// the endpoint. The colour and endpoint are extracted from
// the NLRI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPrePath) RouteAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": "*", "endpoint": "*", "color": "*"},
			n,
		),
	}
	return ps
}

// RouteAny (list): The routes within the SR-TE Policy SAFI Adj-RIB. The
// routes are keyed on the path-id - set to a non-zero
// value only if ADD-PATHS is being used; the color; and
// the endpoint. The colour and endpoint are extracted from
// the NLRI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPrePathAny) RouteAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": "*", "endpoint": "*", "color": "*"},
			n,
		),
	}
	return ps
}

// WithPathId sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny's key "path-id" to the specified value.
// PathId: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny) WithPathId(PathId uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny {
	ygnmi.ModifyKey(n.NodePath, "path-id", PathId)
	return n
}

// WithEndpoint sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny's key "endpoint" to the specified value.
// Endpoint: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny) WithEndpoint(Endpoint string) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny {
	ygnmi.ModifyKey(n.NodePath, "endpoint", Endpoint)
	return n
}

// WithColor sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny's key "color" to the specified value.
// Color: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny) WithColor(Color uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny {
	ygnmi.ModifyKey(n.NodePath, "color", Color)
	return n
}

// Route (list): The routes within the SR-TE Policy SAFI Adj-RIB. The
// routes are keyed on the path-id - set to a non-zero
// value only if ADD-PATHS is being used; the color; and
// the endpoint. The colour and endpoint are extracted from
// the NLRI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route"
//
//	PathId: uint32
//	Endpoint: string
//	Color: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPrePath) Route(PathId uint32, Endpoint string, Color uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": PathId, "endpoint": Endpoint, "color": Color},
			n,
		),
	}
	return ps
}

// Route (list): The routes within the SR-TE Policy SAFI Adj-RIB. The
// routes are keyed on the path-id - set to a non-zero
// value only if ADD-PATHS is being used; the color; and
// the endpoint. The colour and endpoint are extracted from
// the NLRI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route"
//
//	PathId: uint32
//	Endpoint: string
//	Color: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPrePathAny) Route(PathId uint32, Endpoint string, Color uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"path-id": PathId, "endpoint": Endpoint, "color": Color},
			n,
		),
	}
	return ps
}

// RouteMap (list): The routes within the SR-TE Policy SAFI Adj-RIB. The
// routes are keyed on the path-id - set to a non-zero
// value only if ADD-PATHS is being used; the color; and
// the endpoint. The colour and endpoint are extracted from
// the NLRI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPrePath) RouteMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathMap {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// RouteMap (list): The routes within the SR-TE Policy SAFI Adj-RIB. The
// routes are keyed on the path-id - set to a non-zero
// value only if ADD-PATHS is being used; the color; and
// the endpoint. The colour and endpoint are extracted from
// the NLRI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPrePathAny) RouteMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathMapAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPrePath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPrePathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_AttrIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_AttrIndexPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_AttrIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_AttrIndexPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_AttrIndexPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).AttrIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_AttrIndexPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).AttrIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ColorPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/color YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ColorPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ColorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/color YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ColorPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ColorPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ColorPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "color"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ColorPath) Config() ygnmi.ConfigQuery[uint32] {
	return ygnmi.NewConfigQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "color"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ColorPathAny) Config() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"color"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).Color
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_CommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_CommunityIndexPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_CommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_CommunityIndexPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_CommunityIndexPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).CommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_CommunityIndexPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).CommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_EndpointPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/endpoint YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_EndpointPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_EndpointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/endpoint YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_EndpointPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_EndpointPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_EndpointPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "endpoint"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_EndpointPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "endpoint"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_EndpointPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"endpoint"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).Endpoint
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ExtCommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ExtCommunityIndexPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ExtCommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ExtCommunityIndexPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ExtCommunityIndexPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).ExtCommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ExtCommunityIndexPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).ExtCommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_InvalidReasonPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_InvalidReasonPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_InvalidReasonPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_InvalidReasonPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_InvalidReasonPath) State() ygnmi.SingletonQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON] {
	return ygnmi.NewSingletonQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_RibBgpTypes_INVALID_ROUTE_REASON, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).InvalidReason
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_InvalidReasonPathAny) State() ygnmi.WildcardQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON] {
	return ygnmi.NewWildcardQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_RibBgpTypes_INVALID_ROUTE_REASON, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).InvalidReason
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_LastModifiedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_LastModifiedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_LastModifiedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_LastModifiedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_LastModifiedPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).LastModified
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_LastModifiedPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).LastModified
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_PathIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_PathIdPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_PathIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_PathIdPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_PathIdPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_PathIdPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "path-id"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_PathIdPath) Config() ygnmi.ConfigQuery[uint32] {
	return ygnmi.NewConfigQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "path-id"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_PathIdPathAny) Config() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ValidRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ValidRoutePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ValidRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ValidRoutePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ValidRoutePath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).ValidRoute
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ValidRoutePathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).ValidRoute
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathMap represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathMap struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathMapAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathMapAny struct {
	*ygnmi.NodePath
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePath) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_AttrIndexPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_AttrIndexPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_AttrIndexPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_AttrIndexPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Color (leaf): A 4-octet value identifying the policy. Combined with the endpoint
// the endpoint and colour represent the unique policy.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/*/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePath) Color() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ColorPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ColorPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "color"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Color (leaf): A 4-octet value identifying the policy. Combined with the endpoint
// the endpoint and colour represent the unique policy.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/color"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/*/color"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny) Color() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ColorPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ColorPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "color"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// CommunityIndex (leaf): Reference to the community attribute for the route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePath) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_CommunityIndexPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_CommunityIndexPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// CommunityIndex (leaf): Reference to the community attribute for the route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_CommunityIndexPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_CommunityIndexPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Endpoint (leaf): A unique identifier for the remote set of nodes. When the address
// family is IPv4, the value is a 4-octet IPv4 address. When the
// address family is IPv6, the value is a 16-octet IPv6 address.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/*/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePath) Endpoint() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_EndpointPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_EndpointPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "endpoint"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Endpoint (leaf): A unique identifier for the remote set of nodes. When the address
// family is IPv4, the value is a 4-octet IPv4 address. When the
// address family is IPv6, the value is a 16-octet IPv6 address.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/endpoint"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/*/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny) Endpoint() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_EndpointPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_EndpointPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "endpoint"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePath) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ExtCommunityIndexPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ExtCommunityIndexPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ExtCommunityIndexPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ExtCommunityIndexPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePath) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_InvalidReasonPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_InvalidReasonPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_InvalidReasonPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_InvalidReasonPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePath) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_LastModifiedPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_LastModifiedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_LastModifiedPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_LastModifiedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PathId (leaf): Identifier for the path when using BGP ADD-PATHS for the SR-TE
// policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/*/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePath) PathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_PathIdPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_PathIdPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "path-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PathId (leaf): Identifier for the path when using BGP ADD-PATHS for the SR-TE
// policy SAFI.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/*/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny) PathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_PathIdPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_PathIdPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "path-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePath) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
	return ps
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
	return ps
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute"
//
//	AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePath) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
	return ps
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute"
//
//	AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
	return ps
}

// UnknownAttributeMap (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePath) UnknownAttributeMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathMap {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// UnknownAttributeMap (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny) UnknownAttributeMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathMapAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePath) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ValidRoutePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ValidRoutePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ValidRoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_ValidRoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathMap) State() ygnmi.SingletonQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route] {
	return ygnmi.NewSingletonQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre).Route
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:routes"},
			PostRelPath: []string{"openconfig-network-instance:route"},
		},
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_RoutePathMapAny) State() ygnmi.WildcardQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route] {
	return ygnmi.NewWildcardQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre).Route
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:routes"},
			PostRelPath: []string{"openconfig-network-instance:route"},
		},
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrLenPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrLenPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrLenPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrLenPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrLenPath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute).AttrLen
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrLenPathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute).AttrLen
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePath) State() ygnmi.SingletonQuery[uint8] {
	return ygnmi.NewSingletonQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePathAny) State() ygnmi.WildcardQuery[uint8] {
	return ygnmi.NewWildcardQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "attr-type"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePath) Config() ygnmi.ConfigQuery[uint8] {
	return ygnmi.NewConfigQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "attr-type"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePathAny) Config() ygnmi.WildcardQuery[uint8] {
	return ygnmi.NewWildcardQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrValuePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrValuePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrValuePath) State() ygnmi.SingletonQuery[oc.Binary] {
	return ygnmi.NewSingletonQuery[oc.Binary](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.Binary, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute).AttrValue
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrValuePathAny) State() ygnmi.WildcardQuery[oc.Binary] {
	return ygnmi.NewWildcardQuery[oc.Binary](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.Binary, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute).AttrValue
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_ExtendedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_ExtendedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_ExtendedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_ExtendedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_ExtendedPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "extended"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute).Extended
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_ExtendedPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "extended"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute).Extended
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_OptionalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_OptionalPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_OptionalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_OptionalPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_OptionalPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "optional"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute).Optional
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_OptionalPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "optional"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute).Optional
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_PartialPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_PartialPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_PartialPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_PartialPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_PartialPath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "partial"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute).Partial
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_PartialPathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "partial"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute).Partial
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_TransitivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_TransitivePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_TransitivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_TransitivePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_TransitivePath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute).Transitive
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_TransitivePathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute).Transitive
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathMap represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathMap struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathMapAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathMapAny struct {
	*ygnmi.NodePath
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePath) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrLenPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrLenPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrLenPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrLenPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrType (leaf): 1-octet value encoding the attribute type code
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/*/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePath) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "attr-type"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrType (leaf): 1-octet value encoding the attribute type code
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/*/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "attr-type"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePath) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrValuePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrValuePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrValuePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrValuePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePath) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_ExtendedPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_ExtendedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/extended"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_ExtendedPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_ExtendedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePath) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_OptionalPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_OptionalPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/optional"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_OptionalPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_OptionalPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePath) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_PartialPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_PartialPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/partial"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_PartialPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_PartialPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePath) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_TransitivePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_TransitivePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/transitive"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-srte-policy/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_TransitivePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute_TransitivePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathMap) State() ygnmi.SingletonQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute] {
	return ygnmi.NewSingletonQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).UnknownAttribute
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:unknown-attributes"},
			PostRelPath: []string{"openconfig-network-instance:unknown-attribute"},
		},
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttributePathMapAny) State() ygnmi.WildcardQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute] {
	return ygnmi.NewWildcardQuery[map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[uint8]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route_UnknownAttribute, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route).UnknownAttribute
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4SrtePolicy_Neighbor_AdjRibOutPre_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:unknown-attributes"},
			PostRelPath: []string{"openconfig-network-instance:unknown-attribute"},
		},
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4UnicastPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4UnicastPathAny struct {
	*ygnmi.NodePath
}

// LocRib (container): Container for the IPv4 BGP LOC-RIB data
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "loc-rib"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4UnicastPath) LocRib() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRibPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRibPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"loc-rib"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// LocRib (container): Container for the IPv4 BGP LOC-RIB data
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "loc-rib"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4UnicastPathAny) LocRib() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRibPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRibPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"loc-rib"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// NeighborAny (list): List of neighbors (peers) of the local BGP speaker
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "neighbors/neighbor"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/neighbors/neighbor"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4UnicastPath) NeighborAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_NeighborPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_NeighborPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": "*"},
			n,
		),
	}
	return ps
}

// NeighborAny (list): List of neighbors (peers) of the local BGP speaker
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "neighbors/neighbor"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/neighbors/neighbor"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4UnicastPathAny) NeighborAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_NeighborPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_NeighborPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": "*"},
			n,
		),
	}
	return ps
}

// Neighbor (list): List of neighbors (peers) of the local BGP speaker
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "neighbors/neighbor"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/neighbors/neighbor"
//
//	NeighborAddress: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4UnicastPath) Neighbor(NeighborAddress string) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_NeighborPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_NeighborPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": NeighborAddress},
			n,
		),
	}
	return ps
}

// Neighbor (list): List of neighbors (peers) of the local BGP speaker
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "neighbors/neighbor"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/neighbors/neighbor"
//
//	NeighborAddress: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4UnicastPathAny) Neighbor(NeighborAddress string) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_NeighborPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_NeighborPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": NeighborAddress},
			n,
		),
	}
	return ps
}

// NeighborMap (list): List of neighbors (peers) of the local BGP speaker
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "neighbors/neighbor"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/neighbors/neighbor"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4UnicastPath) NeighborMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_NeighborPathMap {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_NeighborPathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"neighbors"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// NeighborMap (list): List of neighbors (peers) of the local BGP speaker
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "neighbors/neighbor"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/neighbors/neighbor"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4UnicastPathAny) NeighborMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_NeighborPathMapAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_NeighborPathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"neighbors"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4UnicastPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4UnicastPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRibPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRibPath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRibPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRibPathAny struct {
	*ygnmi.NodePath
}

// RouteAny (list): List of routes in the table, keyed by the route
// prefix, the route origin, and path-id.  The route
// origin can be either the neighbor address from which
// the route was learned, or the source protocol that
// injected the route.  The path-id distinguishes routes
// for the same prefix received from a neighbor (e.g.,
// if add-paths is eanbled).
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRibPath) RouteAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"prefix": "*", "origin": "*", "path-id": "*"},
			n,
		),
	}
	return ps
}

// RouteAny (list): List of routes in the table, keyed by the route
// prefix, the route origin, and path-id.  The route
// origin can be either the neighbor address from which
// the route was learned, or the source protocol that
// injected the route.  The path-id distinguishes routes
// for the same prefix received from a neighbor (e.g.,
// if add-paths is eanbled).
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRibPathAny) RouteAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"prefix": "*", "origin": "*", "path-id": "*"},
			n,
		),
	}
	return ps
}

// WithPrefix sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny's key "prefix" to the specified value.
// Prefix: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny) WithPrefix(Prefix string) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny {
	ygnmi.ModifyKey(n.NodePath, "prefix", Prefix)
	return n
}

// WithOrigin sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny's key "origin" to the specified value.
// Origin: [oc.UnionString, oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE]
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny) WithOrigin(Origin oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Origin_Union) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny {
	ygnmi.ModifyKey(n.NodePath, "origin", Origin)
	return n
}

// WithPathId sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny's key "path-id" to the specified value.
// PathId: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny) WithPathId(PathId uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny {
	ygnmi.ModifyKey(n.NodePath, "path-id", PathId)
	return n
}

// Route (list): List of routes in the table, keyed by the route
// prefix, the route origin, and path-id.  The route
// origin can be either the neighbor address from which
// the route was learned, or the source protocol that
// injected the route.  The path-id distinguishes routes
// for the same prefix received from a neighbor (e.g.,
// if add-paths is eanbled).
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route"
//
//	Prefix: string
//	Origin: [oc.UnionString, oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE]
//	PathId: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRibPath) Route(Prefix string, Origin oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Origin_Union, PathId uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"prefix": Prefix, "origin": Origin, "path-id": PathId},
			n,
		),
	}
	return ps
}

// Route (list): List of routes in the table, keyed by the route
// prefix, the route origin, and path-id.  The route
// origin can be either the neighbor address from which
// the route was learned, or the source protocol that
// injected the route.  The path-id distinguishes routes
// for the same prefix received from a neighbor (e.g.,
// if add-paths is eanbled).
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route"
//
//	Prefix: string
//	Origin: [oc.UnionString, oc.E_PolicyTypes_INSTALL_PROTOCOL_TYPE]
//	PathId: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRibPathAny) Route(Prefix string, Origin oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Origin_Union, PathId uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"prefix": Prefix, "origin": Origin, "path-id": PathId},
			n,
		),
	}
	return ps
}

// RouteMap (list): List of routes in the table, keyed by the route
// prefix, the route origin, and path-id.  The route
// origin can be either the neighbor address from which
// the route was learned, or the source protocol that
// injected the route.  The path-id distinguishes routes
// for the same prefix received from a neighbor (e.g.,
// if add-paths is eanbled).
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRibPath) RouteMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathMap {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// RouteMap (list): List of routes in the table, keyed by the route
// prefix, the route origin, and path-id.  The route
// origin can be either the neighbor address from which
// the route was learned, or the source protocol that
// injected the route.  The path-id distinguishes routes
// for the same prefix received from a neighbor (e.g.,
// if add-paths is eanbled).
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "routes/route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRibPathAny) RouteMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathMapAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"routes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRibPath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRibPathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_AttrIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_AttrIndexPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_AttrIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_AttrIndexPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_AttrIndexPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).AttrIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_AttrIndexPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).AttrIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_CommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_CommunityIndexPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_CommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_CommunityIndexPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_CommunityIndexPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).CommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_CommunityIndexPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).CommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ExtCommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ExtCommunityIndexPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ExtCommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ExtCommunityIndexPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ExtCommunityIndexPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).ExtCommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ExtCommunityIndexPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).ExtCommunityIndex
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_InvalidReasonPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_InvalidReasonPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_InvalidReasonPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_InvalidReasonPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_InvalidReasonPath) State() ygnmi.SingletonQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON] {
	return ygnmi.NewSingletonQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_RibBgpTypes_INVALID_ROUTE_REASON, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).InvalidReason
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_InvalidReasonPathAny) State() ygnmi.WildcardQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON] {
	return ygnmi.NewWildcardQuery[oc.E_RibBgpTypes_INVALID_ROUTE_REASON](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_RibBgpTypes_INVALID_ROUTE_REASON, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).InvalidReason
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_LastModifiedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_LastModifiedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_LastModifiedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_LastModifiedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_LastModifiedPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).LastModified
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_LastModifiedPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).LastModified
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_OriginPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/origin YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_OriginPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_OriginPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/origin YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_OriginPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/origin"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/origin"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_OriginPath) State() ygnmi.SingletonQuery[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Origin_Union] {
	return ygnmi.NewSingletonQuery[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Origin_Union](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "origin"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Origin_Union, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).Origin
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/origin"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/origin"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_OriginPathAny) State() ygnmi.WildcardQuery[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Origin_Union] {
	return ygnmi.NewWildcardQuery[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Origin_Union](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "origin"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Origin_Union, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).Origin
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "origin"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_OriginPath) Config() ygnmi.ConfigQuery[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Origin_Union] {
	return ygnmi.NewConfigQuery[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Origin_Union](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		false,
		true,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"origin"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Origin_Union, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).Origin
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "origin"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_OriginPathAny) Config() ygnmi.WildcardQuery[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Origin_Union] {
	return ygnmi.NewWildcardQuery[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Origin_Union](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		false,
		true,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"origin"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Origin_Union, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).Origin
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PathIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PathIdPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PathIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PathIdPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PathIdPath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PathIdPathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "path-id"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PathIdPath) Config() ygnmi.ConfigQuery[uint32] {
	return ygnmi.NewConfigQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "path-id"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PathIdPathAny) Config() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"path-id"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).PathId
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/prefix YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PrefixPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/prefix YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PrefixPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/prefix"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/prefix"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PrefixPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "prefix"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).Prefix
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/prefix"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/prefix"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PrefixPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "prefix"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).Prefix
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "prefix"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PrefixPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"prefix"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).Prefix
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "prefix"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PrefixPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"prefix"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).Prefix
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ValidRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ValidRoutePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ValidRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ValidRoutePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ValidRoutePath) State() ygnmi.SingletonQuery[bool] {
	return ygnmi.NewSingletonQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).ValidRoute
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ValidRoutePathAny) State() ygnmi.WildcardQuery[bool] {
	return ygnmi.NewWildcardQuery[bool](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (bool, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route).ValidRoute
			if ret == nil {
				var zero bool
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePath struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathMap represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathMap struct {
	*ygnmi.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathMapAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathMapAny struct {
	*ygnmi.NodePath
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePath) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_AttrIndexPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_AttrIndexPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_AttrIndexPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_AttrIndexPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// CommunityIndex (leaf): Reference to the community attribute for the route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePath) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_CommunityIndexPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_CommunityIndexPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// CommunityIndex (leaf): Reference to the community attribute for the route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_CommunityIndexPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_CommunityIndexPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePath) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ExtCommunityIndexPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ExtCommunityIndexPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/ext-community-index"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ExtCommunityIndexPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ExtCommunityIndexPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePath) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_InvalidReasonPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_InvalidReasonPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/invalid-reason"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_InvalidReasonPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_InvalidReasonPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePath) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_LastModifiedPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_LastModifiedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/last-modified"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_LastModifiedPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_LastModifiedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Origin (leaf): Indicates the origin of the route.  If the route is learned
// from a neighbor, this value is the neighbor address.  If
// the route was injected or redistributed from another
// protocol, the origin indicates the source protocol for the
// route.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/origin"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/*/origin"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePath) Origin() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_OriginPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_OriginPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "origin"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Origin (leaf): Indicates the origin of the route.  If the route is learned
// from a neighbor, this value is the neighbor address.  If
// the route was injected or redistributed from another
// protocol, the origin indicates the source protocol for the
// route.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/origin"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/*/origin"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny) Origin() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_OriginPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_OriginPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "origin"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PathId (leaf): If the route is learned from a neighbor, the path-id
// corresponds to the path-id for the route in the
// corresponding adj-rib-in-post table.  If the route is
// injected from another protocol, or the neighbor does not
// support BGP add-paths, the path-id should be set
// to zero, also the default value.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/*/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePath) PathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PathIdPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PathIdPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "path-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// PathId (leaf): If the route is learned from a neighbor, the path-id
// corresponds to the path-id for the route in the
// corresponding adj-rib-in-post table.  If the route is
// injected from another protocol, or the neighbor does not
// support BGP add-paths, the path-id should be set
// to zero, also the default value.
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/path-id"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/*/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny) PathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PathIdPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PathIdPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "path-id"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Prefix (leaf): The IPv4 prefix corresponding to the route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/prefix"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/*/prefix"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePath) Prefix() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PrefixPath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PrefixPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "prefix"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Prefix (leaf): The IPv4 prefix corresponding to the route
//
//	Defining module:      "openconfig-rib-bgp-tables"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "*/prefix"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/*/prefix"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny) Prefix() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PrefixPathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_PrefixPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "prefix"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePath) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttributePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttributePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
	return ps
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttributePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttributePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
	return ps
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/unknown-attributes/unknown-attribute"
//
//	AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePath) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttributePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttributePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
	return ps
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/unknown-attributes/unknown-attribute"
//
//	AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttributePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttributePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
	return ps
}

// UnknownAttributeMap (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePath) UnknownAttributeMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttributePathMap {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttributePathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// UnknownAttributeMap (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "unknown-attributes/unknown-attribute"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/unknown-attributes/unknown-attribute"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny) UnknownAttributeMap() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttributePathMapAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttributePathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"unknown-attributes"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePath) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ValidRoutePath {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ValidRoutePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
//
//	Defining module:      "openconfig-rib-bgp-table-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/valid-route"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ValidRoutePathAny {
	ps := &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_ValidRoutePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePath) State() ygnmi.SingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route] {
	return ygnmi.NewSingletonQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathAny) State() ygnmi.WildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route] {
	return ygnmi.NewWildcardQuery[*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathMap) State() ygnmi.SingletonQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route] {
	return ygnmi.NewSingletonQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib).Route
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:routes"},
			PostRelPath: []string{"openconfig-network-instance:route"},
		},
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_RoutePathMapAny) State() ygnmi.WildcardQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route] {
	return ygnmi.NewWildcardQuery[map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_Key]*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib).Route
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-network-instance:routes"},
			PostRelPath: []string{"openconfig-network-instance:route"},
		},
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrLenPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrLenPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrLenPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrLenPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrLenPath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute).AttrLen
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-len"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrLenPathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-len"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute).AttrLen
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrTypePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrTypePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrTypePath) State() ygnmi.SingletonQuery[uint8] {
	return ygnmi.NewSingletonQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-type"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrTypePathAny) State() ygnmi.WildcardQuery[uint8] {
	return ygnmi.NewWildcardQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "attr-type"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrTypePath) Config() ygnmi.ConfigQuery[uint8] {
	return ygnmi.NewConfigQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "attr-type"
//	Path from root:       ""
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrTypePathAny) Config() ygnmi.WildcardQuery[uint8] {
	return ygnmi.NewWildcardQuery[uint8](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"attr-type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute).AttrType
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrValuePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrValuePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrValuePath) State() ygnmi.SingletonQuery[oc.Binary] {
	return ygnmi.NewSingletonQuery[oc.Binary](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.Binary, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute).AttrValue
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-rib-bgp-attributes"
//	Instantiating module: "openconfig-network-instance"
//	Path from parent:     "state/attr-value"
//	Path from root:       "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv4-unicast/loc-rib/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute_AttrValuePathAny) State() ygnmi.WildcardQuery[oc.Binary] {
	return ygnmi.NewWildcardQuery[oc.Binary](
		"NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "attr-value"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.Binary, bool) {
			ret := gs.(*oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute).AttrValue
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct {
			return new(oc.NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv4Unicast_LocRib_Route_UnknownAttribute)
		},
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}
