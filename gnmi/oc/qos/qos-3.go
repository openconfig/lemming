/*
Package qos is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema.

This package was generated by ygnmi version: v0.11.1: (ygot: v0.29.19)
using the following YANG input files:
  - public/release/models/acl/openconfig-acl.yang
  - public/release/models/acl/openconfig-packet-match.yang
  - public/release/models/aft/openconfig-aft.yang
  - public/release/models/bfd/openconfig-bfd.yang
  - public/release/models/bgp/openconfig-bgp-policy.yang
  - public/release/models/bgp/openconfig-bgp-types.yang
  - public/release/models/interfaces/openconfig-if-aggregate.yang
  - public/release/models/interfaces/openconfig-if-ethernet.yang
  - public/release/models/interfaces/openconfig-if-ip-ext.yang
  - public/release/models/interfaces/openconfig-if-ip.yang
  - public/release/models/interfaces/openconfig-interfaces.yang
  - public/release/models/isis/openconfig-isis.yang
  - public/release/models/lacp/openconfig-lacp.yang
  - public/release/models/lldp/openconfig-lldp-types.yang
  - public/release/models/lldp/openconfig-lldp.yang
  - public/release/models/local-routing/openconfig-local-routing.yang
  - public/release/models/mpls/openconfig-mpls-types.yang
  - public/release/models/multicast/openconfig-pim.yang
  - public/release/models/network-instance/openconfig-network-instance.yang
  - public/release/models/openconfig-extensions.yang
  - public/release/models/optical-transport/openconfig-transport-types.yang
  - public/release/models/ospf/openconfig-ospfv2.yang
  - public/release/models/platform/openconfig-platform-cpu.yang
  - public/release/models/platform/openconfig-platform-integrated-circuit.yang
  - public/release/models/platform/openconfig-platform-software.yang
  - public/release/models/platform/openconfig-platform-transceiver.yang
  - public/release/models/platform/openconfig-platform.yang
  - public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
  - public/release/models/policy/openconfig-policy-types.yang
  - public/release/models/qos/openconfig-qos-elements.yang
  - public/release/models/qos/openconfig-qos-interfaces.yang
  - public/release/models/qos/openconfig-qos-types.yang
  - public/release/models/qos/openconfig-qos.yang
  - public/release/models/rib/openconfig-rib-bgp.yang
  - public/release/models/segment-routing/openconfig-segment-routing-types.yang
  - public/release/models/system/openconfig-system.yang
  - public/release/models/types/openconfig-inet-types.yang
  - public/release/models/types/openconfig-types.yang
  - public/release/models/types/openconfig-yang-types.yang
  - public/release/models/vlan/openconfig-vlan.yang
  - public/third_party/ietf/iana-if-type.yang
  - public/third_party/ietf/ietf-inet-types.yang
  - public/third_party/ietf/ietf-interfaces.yang
  - public/third_party/ietf/ietf-yang-types.yang
  - yang/openconfig-bgp-gue.yang

Imported modules were sourced from:
  - public/release/models/...
  - public/third_party/ietf/...
*/
package qos

import (
	oc "github.com/openconfig/lemming/gnmi/oc"
	"github.com/openconfig/ygnmi/ygnmi"
	"github.com/openconfig/ygot/ygot"
	"github.com/openconfig/ygot/ytypes"
)

// Qos_Interface_Input_Queue_DroppedPktsPath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/dropped-pkts YANG schema element.
type Qos_Interface_Input_Queue_DroppedPktsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_Queue_DroppedPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/dropped-pkts YANG schema element.
type Qos_Interface_Input_Queue_DroppedPktsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/dropped-pkts"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/dropped-pkts"
func (n *Qos_Interface_Input_Queue_DroppedPktsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "dropped-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).DroppedPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/dropped-pkts"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/dropped-pkts"
func (n *Qos_Interface_Input_Queue_DroppedPktsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "dropped-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).DroppedPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_Queue_EcnMarkedOctetsPath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/ecn-marked-octets YANG schema element.
type Qos_Interface_Input_Queue_EcnMarkedOctetsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_Queue_EcnMarkedOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/ecn-marked-octets YANG schema element.
type Qos_Interface_Input_Queue_EcnMarkedOctetsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-marked-octets"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/ecn-marked-octets"
func (n *Qos_Interface_Input_Queue_EcnMarkedOctetsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ecn-marked-octets"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).EcnMarkedOctets
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-marked-octets"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/ecn-marked-octets"
func (n *Qos_Interface_Input_Queue_EcnMarkedOctetsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ecn-marked-octets"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).EcnMarkedOctets
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_Queue_EcnMarkedPktsPath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/ecn-marked-pkts YANG schema element.
type Qos_Interface_Input_Queue_EcnMarkedPktsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_Queue_EcnMarkedPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/ecn-marked-pkts YANG schema element.
type Qos_Interface_Input_Queue_EcnMarkedPktsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-marked-pkts"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/ecn-marked-pkts"
func (n *Qos_Interface_Input_Queue_EcnMarkedPktsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ecn-marked-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).EcnMarkedPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-marked-pkts"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/ecn-marked-pkts"
func (n *Qos_Interface_Input_Queue_EcnMarkedPktsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ecn-marked-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).EcnMarkedPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_Queue_EcnSelectedOctetsPath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/ecn-selected-octets YANG schema element.
type Qos_Interface_Input_Queue_EcnSelectedOctetsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_Queue_EcnSelectedOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/ecn-selected-octets YANG schema element.
type Qos_Interface_Input_Queue_EcnSelectedOctetsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-selected-octets"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/ecn-selected-octets"
func (n *Qos_Interface_Input_Queue_EcnSelectedOctetsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ecn-selected-octets"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).EcnSelectedOctets
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-selected-octets"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/ecn-selected-octets"
func (n *Qos_Interface_Input_Queue_EcnSelectedOctetsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ecn-selected-octets"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).EcnSelectedOctets
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_Queue_EcnSelectedPktsPath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/ecn-selected-pkts YANG schema element.
type Qos_Interface_Input_Queue_EcnSelectedPktsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_Queue_EcnSelectedPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/ecn-selected-pkts YANG schema element.
type Qos_Interface_Input_Queue_EcnSelectedPktsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-selected-pkts"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/ecn-selected-pkts"
func (n *Qos_Interface_Input_Queue_EcnSelectedPktsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ecn-selected-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).EcnSelectedPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-selected-pkts"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/ecn-selected-pkts"
func (n *Qos_Interface_Input_Queue_EcnSelectedPktsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ecn-selected-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).EcnSelectedPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_Queue_MaxQueueLenPath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/max-queue-len YANG schema element.
type Qos_Interface_Input_Queue_MaxQueueLenPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_Queue_MaxQueueLenPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/max-queue-len YANG schema element.
type Qos_Interface_Input_Queue_MaxQueueLenPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/max-queue-len"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/max-queue-len"
func (n *Qos_Interface_Input_Queue_MaxQueueLenPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "max-queue-len"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).MaxQueueLen
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/max-queue-len"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/max-queue-len"
func (n *Qos_Interface_Input_Queue_MaxQueueLenPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "max-queue-len"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).MaxQueueLen
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_Queue_NamePath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/name YANG schema element.
type Qos_Interface_Input_Queue_NamePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_Queue_NamePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/name YANG schema element.
type Qos_Interface_Input_Queue_NamePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/name"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/name"
func (n *Qos_Interface_Input_Queue_NamePath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/name"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/name"
func (n *Qos_Interface_Input_Queue_NamePathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "config/name"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/config/name"
func (n *Qos_Interface_Input_Queue_NamePath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"Qos_Interface_Input_Queue",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "config/name"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/config/name"
func (n *Qos_Interface_Input_Queue_NamePathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Qos_Interface_Input_Queue",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_Queue_QueueManagementProfilePath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/queue-management-profile YANG schema element.
type Qos_Interface_Input_Queue_QueueManagementProfilePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_Queue_QueueManagementProfilePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/queue-management-profile YANG schema element.
type Qos_Interface_Input_Queue_QueueManagementProfilePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/queue-management-profile"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/queue-management-profile"
func (n *Qos_Interface_Input_Queue_QueueManagementProfilePath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "queue-management-profile"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).QueueManagementProfile
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/queue-management-profile"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/queue-management-profile"
func (n *Qos_Interface_Input_Queue_QueueManagementProfilePathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "queue-management-profile"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).QueueManagementProfile
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "config/queue-management-profile"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/config/queue-management-profile"
func (n *Qos_Interface_Input_Queue_QueueManagementProfilePath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"Qos_Interface_Input_Queue",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "queue-management-profile"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).QueueManagementProfile
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "config/queue-management-profile"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/config/queue-management-profile"
func (n *Qos_Interface_Input_Queue_QueueManagementProfilePathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Qos_Interface_Input_Queue",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "queue-management-profile"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).QueueManagementProfile
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_Queue_TransmitOctetsPath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/transmit-octets YANG schema element.
type Qos_Interface_Input_Queue_TransmitOctetsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_Queue_TransmitOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/transmit-octets YANG schema element.
type Qos_Interface_Input_Queue_TransmitOctetsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/transmit-octets"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/transmit-octets"
func (n *Qos_Interface_Input_Queue_TransmitOctetsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "transmit-octets"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).TransmitOctets
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/transmit-octets"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/transmit-octets"
func (n *Qos_Interface_Input_Queue_TransmitOctetsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "transmit-octets"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).TransmitOctets
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_Queue_TransmitPktsPath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/transmit-pkts YANG schema element.
type Qos_Interface_Input_Queue_TransmitPktsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_Queue_TransmitPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/transmit-pkts YANG schema element.
type Qos_Interface_Input_Queue_TransmitPktsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/transmit-pkts"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/transmit-pkts"
func (n *Qos_Interface_Input_Queue_TransmitPktsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "transmit-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).TransmitPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/transmit-pkts"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/transmit-pkts"
func (n *Qos_Interface_Input_Queue_TransmitPktsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "transmit-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_Queue).TransmitPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_QueuePath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue YANG schema element.
type Qos_Interface_Input_QueuePath struct {
	*ygnmi.NodePath
}

// Qos_Interface_Input_QueuePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue YANG schema element.
type Qos_Interface_Input_QueuePathAny struct {
	*ygnmi.NodePath
}

// Qos_Interface_Input_QueuePathMap represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue YANG schema element.
type Qos_Interface_Input_QueuePathMap struct {
	*ygnmi.NodePath
}

// Qos_Interface_Input_QueuePathMapAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue YANG schema element.
type Qos_Interface_Input_QueuePathMapAny struct {
	*ygnmi.NodePath
}

// AvgQueueLen (leaf): Average observed queue length
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/avg-queue-len"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/avg-queue-len"
func (n *Qos_Interface_Input_QueuePath) AvgQueueLen() *Qos_Interface_Input_Queue_AvgQueueLenPath {
	ps := &Qos_Interface_Input_Queue_AvgQueueLenPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "avg-queue-len"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AvgQueueLen (leaf): Average observed queue length
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/avg-queue-len"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/avg-queue-len"
func (n *Qos_Interface_Input_QueuePathAny) AvgQueueLen() *Qos_Interface_Input_Queue_AvgQueueLenPathAny {
	ps := &Qos_Interface_Input_Queue_AvgQueueLenPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "avg-queue-len"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// DroppedOctets (leaf): Number of octets dropped by the queue due to overrun, that is tail-drop
// or AMQ (RED, WRED, etc) induced drops as indicated by the attached
// queue-management-profile
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/dropped-octets"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/dropped-octets"
func (n *Qos_Interface_Input_QueuePath) DroppedOctets() *Qos_Interface_Input_Queue_DroppedOctetsPath {
	ps := &Qos_Interface_Input_Queue_DroppedOctetsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "dropped-octets"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// DroppedOctets (leaf): Number of octets dropped by the queue due to overrun, that is tail-drop
// or AMQ (RED, WRED, etc) induced drops as indicated by the attached
// queue-management-profile
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/dropped-octets"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/dropped-octets"
func (n *Qos_Interface_Input_QueuePathAny) DroppedOctets() *Qos_Interface_Input_Queue_DroppedOctetsPathAny {
	ps := &Qos_Interface_Input_Queue_DroppedOctetsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "dropped-octets"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// DroppedPkts (leaf): Number of packets dropped by the queue due to overrun, that is tail-drop
// or AMQ (RED, WRED, etc) induced drops as indicated by the attached
// queue-management-profile
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/dropped-pkts"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/dropped-pkts"
func (n *Qos_Interface_Input_QueuePath) DroppedPkts() *Qos_Interface_Input_Queue_DroppedPktsPath {
	ps := &Qos_Interface_Input_Queue_DroppedPktsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "dropped-pkts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// DroppedPkts (leaf): Number of packets dropped by the queue due to overrun, that is tail-drop
// or AMQ (RED, WRED, etc) induced drops as indicated by the attached
// queue-management-profile
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/dropped-pkts"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/dropped-pkts"
func (n *Qos_Interface_Input_QueuePathAny) DroppedPkts() *Qos_Interface_Input_Queue_DroppedPktsPathAny {
	ps := &Qos_Interface_Input_Queue_DroppedPktsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "dropped-pkts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// EcnMarkedOctets (leaf): Number of octets for which ECN codepoint has been changed from ECT to CE
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-marked-octets"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/ecn-marked-octets"
func (n *Qos_Interface_Input_QueuePath) EcnMarkedOctets() *Qos_Interface_Input_Queue_EcnMarkedOctetsPath {
	ps := &Qos_Interface_Input_Queue_EcnMarkedOctetsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ecn-marked-octets"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// EcnMarkedOctets (leaf): Number of octets for which ECN codepoint has been changed from ECT to CE
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-marked-octets"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/ecn-marked-octets"
func (n *Qos_Interface_Input_QueuePathAny) EcnMarkedOctets() *Qos_Interface_Input_Queue_EcnMarkedOctetsPathAny {
	ps := &Qos_Interface_Input_Queue_EcnMarkedOctetsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ecn-marked-octets"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// EcnMarkedPkts (leaf): number of packets for which ECN codepoint has been changed from ECT to CE
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-marked-pkts"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/ecn-marked-pkts"
func (n *Qos_Interface_Input_QueuePath) EcnMarkedPkts() *Qos_Interface_Input_Queue_EcnMarkedPktsPath {
	ps := &Qos_Interface_Input_Queue_EcnMarkedPktsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ecn-marked-pkts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// EcnMarkedPkts (leaf): number of packets for which ECN codepoint has been changed from ECT to CE
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-marked-pkts"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/ecn-marked-pkts"
func (n *Qos_Interface_Input_QueuePathAny) EcnMarkedPkts() *Qos_Interface_Input_Queue_EcnMarkedPktsPathAny {
	ps := &Qos_Interface_Input_Queue_EcnMarkedPktsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ecn-marked-pkts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// EcnSelectedOctets (leaf): Number of octets of packets selected by AQM
//
// For RED/WRED AQM this counter counts:
// - all octets enqueued while queue utilization was greater then max-threshold
// - octets enqueued while queue utilization was between min-threshold and max-threshold, with probability derived from RED/WRED slope
//
// Octets are counted regardless of its ECN codepoint
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-selected-octets"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/ecn-selected-octets"
func (n *Qos_Interface_Input_QueuePath) EcnSelectedOctets() *Qos_Interface_Input_Queue_EcnSelectedOctetsPath {
	ps := &Qos_Interface_Input_Queue_EcnSelectedOctetsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ecn-selected-octets"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// EcnSelectedOctets (leaf): Number of octets of packets selected by AQM
//
// For RED/WRED AQM this counter counts:
// - all octets enqueued while queue utilization was greater then max-threshold
// - octets enqueued while queue utilization was between min-threshold and max-threshold, with probability derived from RED/WRED slope
//
// Octets are counted regardless of its ECN codepoint
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-selected-octets"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/ecn-selected-octets"
func (n *Qos_Interface_Input_QueuePathAny) EcnSelectedOctets() *Qos_Interface_Input_Queue_EcnSelectedOctetsPathAny {
	ps := &Qos_Interface_Input_Queue_EcnSelectedOctetsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ecn-selected-octets"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// EcnSelectedPkts (leaf): Number of packets selected by AQM
//
// For RED/WRED AQM this counter counts:
// - all packets enqueued while queue utilization was greater then max-threshold
// - packs enqueued while queue utilization was between min-threshold and max-threshold, with probability derived from RED/WRED slope
//
// Packets are counted regardless of its ECN codepoint
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-selected-pkts"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/ecn-selected-pkts"
func (n *Qos_Interface_Input_QueuePath) EcnSelectedPkts() *Qos_Interface_Input_Queue_EcnSelectedPktsPath {
	ps := &Qos_Interface_Input_Queue_EcnSelectedPktsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ecn-selected-pkts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// EcnSelectedPkts (leaf): Number of packets selected by AQM
//
// For RED/WRED AQM this counter counts:
// - all packets enqueued while queue utilization was greater then max-threshold
// - packs enqueued while queue utilization was between min-threshold and max-threshold, with probability derived from RED/WRED slope
//
// Packets are counted regardless of its ECN codepoint
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-selected-pkts"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/ecn-selected-pkts"
func (n *Qos_Interface_Input_QueuePathAny) EcnSelectedPkts() *Qos_Interface_Input_Queue_EcnSelectedPktsPathAny {
	ps := &Qos_Interface_Input_Queue_EcnSelectedPktsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "ecn-selected-pkts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// MaxQueueLen (leaf): Maximum observed queue length
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/max-queue-len"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/max-queue-len"
func (n *Qos_Interface_Input_QueuePath) MaxQueueLen() *Qos_Interface_Input_Queue_MaxQueueLenPath {
	ps := &Qos_Interface_Input_Queue_MaxQueueLenPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "max-queue-len"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// MaxQueueLen (leaf): Maximum observed queue length
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/max-queue-len"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/max-queue-len"
func (n *Qos_Interface_Input_QueuePathAny) MaxQueueLen() *Qos_Interface_Input_Queue_MaxQueueLenPathAny {
	ps := &Qos_Interface_Input_Queue_MaxQueueLenPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "max-queue-len"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Name (leaf): Reference to the queue associated with this interface.
// A queue may be explicitly configured, or implicitly created
// by the system based on default queues that are instantiated
// by a hardware component, or are assumed to be default on
// the system.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "*/name"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/*/name"
func (n *Qos_Interface_Input_QueuePath) Name() *Qos_Interface_Input_Queue_NamePath {
	ps := &Qos_Interface_Input_Queue_NamePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "name"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Name (leaf): Reference to the queue associated with this interface.
// A queue may be explicitly configured, or implicitly created
// by the system based on default queues that are instantiated
// by a hardware component, or are assumed to be default on
// the system.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "*/name"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/*/name"
func (n *Qos_Interface_Input_QueuePathAny) Name() *Qos_Interface_Input_Queue_NamePathAny {
	ps := &Qos_Interface_Input_Queue_NamePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "name"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// QueueManagementProfile (leaf): The queue management profile that is to be used for the queue
// on the interface.
//
// For example, the system may use a profile which specifies that
// WRED curves are used for setting an ECN mark in the IP header
// instead of dropping a packet in order to signal impending
// congestion and for determining when there is sufficient
// congestion to tail drop packets.
//
// A single profile is available per queue - which applies to all packets
// that are enqueued to the specified queue, whether they are unicast or
// multicast.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "*/queue-management-profile"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/*/queue-management-profile"
func (n *Qos_Interface_Input_QueuePath) QueueManagementProfile() *Qos_Interface_Input_Queue_QueueManagementProfilePath {
	ps := &Qos_Interface_Input_Queue_QueueManagementProfilePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "queue-management-profile"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// QueueManagementProfile (leaf): The queue management profile that is to be used for the queue
// on the interface.
//
// For example, the system may use a profile which specifies that
// WRED curves are used for setting an ECN mark in the IP header
// instead of dropping a packet in order to signal impending
// congestion and for determining when there is sufficient
// congestion to tail drop packets.
//
// A single profile is available per queue - which applies to all packets
// that are enqueued to the specified queue, whether they are unicast or
// multicast.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "*/queue-management-profile"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/*/queue-management-profile"
func (n *Qos_Interface_Input_QueuePathAny) QueueManagementProfile() *Qos_Interface_Input_Queue_QueueManagementProfilePathAny {
	ps := &Qos_Interface_Input_Queue_QueueManagementProfilePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "queue-management-profile"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// TransmitOctets (leaf): Number of octets trasmitted by this queue
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/transmit-octets"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/transmit-octets"
func (n *Qos_Interface_Input_QueuePath) TransmitOctets() *Qos_Interface_Input_Queue_TransmitOctetsPath {
	ps := &Qos_Interface_Input_Queue_TransmitOctetsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "transmit-octets"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// TransmitOctets (leaf): Number of octets trasmitted by this queue
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/transmit-octets"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/transmit-octets"
func (n *Qos_Interface_Input_QueuePathAny) TransmitOctets() *Qos_Interface_Input_Queue_TransmitOctetsPathAny {
	ps := &Qos_Interface_Input_Queue_TransmitOctetsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "transmit-octets"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// TransmitPkts (leaf): Number of packets transmitted by this queue
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/transmit-pkts"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/transmit-pkts"
func (n *Qos_Interface_Input_QueuePath) TransmitPkts() *Qos_Interface_Input_Queue_TransmitPktsPath {
	ps := &Qos_Interface_Input_Queue_TransmitPktsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "transmit-pkts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// TransmitPkts (leaf): Number of packets transmitted by this queue
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/transmit-pkts"
//	Path from root:       "/qos/interfaces/interface/input/queues/queue/state/transmit-pkts"
func (n *Qos_Interface_Input_QueuePathAny) TransmitPkts() *Qos_Interface_Input_Queue_TransmitPktsPathAny {
	ps := &Qos_Interface_Input_Queue_TransmitPktsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "transmit-pkts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_QueuePath) State() ygnmi.SingletonQuery[*oc.Qos_Interface_Input_Queue] {
	return ygnmi.NewSingletonQuery[*oc.Qos_Interface_Input_Queue](
		"Qos_Interface_Input_Queue",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_QueuePathAny) State() ygnmi.WildcardQuery[*oc.Qos_Interface_Input_Queue] {
	return ygnmi.NewWildcardQuery[*oc.Qos_Interface_Input_Queue](
		"Qos_Interface_Input_Queue",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_QueuePath) Config() ygnmi.ConfigQuery[*oc.Qos_Interface_Input_Queue] {
	return ygnmi.NewConfigQuery[*oc.Qos_Interface_Input_Queue](
		"Qos_Interface_Input_Queue",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_QueuePathAny) Config() ygnmi.WildcardQuery[*oc.Qos_Interface_Input_Queue] {
	return ygnmi.NewWildcardQuery[*oc.Qos_Interface_Input_Queue](
		"Qos_Interface_Input_Queue",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_QueuePathMap) State() ygnmi.SingletonQuery[map[string]*oc.Qos_Interface_Input_Queue] {
	return ygnmi.NewSingletonQuery[map[string]*oc.Qos_Interface_Input_Queue](
		"Qos_Interface_Input",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[string]*oc.Qos_Interface_Input_Queue, bool) {
			ret := gs.(*oc.Qos_Interface_Input).Queue
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-qos:queues"},
			PostRelPath: []string{"openconfig-qos:queue"},
		},
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_QueuePathMapAny) State() ygnmi.WildcardQuery[map[string]*oc.Qos_Interface_Input_Queue] {
	return ygnmi.NewWildcardQuery[map[string]*oc.Qos_Interface_Input_Queue](
		"Qos_Interface_Input",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[string]*oc.Qos_Interface_Input_Queue, bool) {
			ret := gs.(*oc.Qos_Interface_Input).Queue
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-qos:queues"},
			PostRelPath: []string{"openconfig-qos:queue"},
		},
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_QueuePathMap) Config() ygnmi.ConfigQuery[map[string]*oc.Qos_Interface_Input_Queue] {
	return ygnmi.NewConfigQuery[map[string]*oc.Qos_Interface_Input_Queue](
		"Qos_Interface_Input",
		false,
		true,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[string]*oc.Qos_Interface_Input_Queue, bool) {
			ret := gs.(*oc.Qos_Interface_Input).Queue
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-qos:queues"},
			PostRelPath: []string{"openconfig-qos:queue"},
		},
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_QueuePathMapAny) Config() ygnmi.WildcardQuery[map[string]*oc.Qos_Interface_Input_Queue] {
	return ygnmi.NewWildcardQuery[map[string]*oc.Qos_Interface_Input_Queue](
		"Qos_Interface_Input",
		false,
		true,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[string]*oc.Qos_Interface_Input_Queue, bool) {
			ret := gs.(*oc.Qos_Interface_Input).Queue
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-qos:queues"},
			PostRelPath: []string{"openconfig-qos:queue"},
		},
	)
}

// Qos_Interface_Input_SchedulerPolicy_NamePath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/state/name YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_NamePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_SchedulerPolicy_NamePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/state/name YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_NamePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/name"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/state/name"
func (n *Qos_Interface_Input_SchedulerPolicy_NamePath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Qos_Interface_Input_SchedulerPolicy",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/name"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/state/name"
func (n *Qos_Interface_Input_SchedulerPolicy_NamePathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Qos_Interface_Input_SchedulerPolicy",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "config/name"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/config/name"
func (n *Qos_Interface_Input_SchedulerPolicy_NamePath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"Qos_Interface_Input_SchedulerPolicy",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "config/name"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/config/name"
func (n *Qos_Interface_Input_SchedulerPolicy_NamePathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Qos_Interface_Input_SchedulerPolicy",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_SchedulerPolicyPath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy YANG schema element.
type Qos_Interface_Input_SchedulerPolicyPath struct {
	*ygnmi.NodePath
}

// Qos_Interface_Input_SchedulerPolicyPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy YANG schema element.
type Qos_Interface_Input_SchedulerPolicyPathAny struct {
	*ygnmi.NodePath
}

// Name (leaf): The scheduler policy to be applied to traffic on this interface.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "*/name"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/*/name"
func (n *Qos_Interface_Input_SchedulerPolicyPath) Name() *Qos_Interface_Input_SchedulerPolicy_NamePath {
	ps := &Qos_Interface_Input_SchedulerPolicy_NamePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "name"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Name (leaf): The scheduler policy to be applied to traffic on this interface.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "*/name"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/*/name"
func (n *Qos_Interface_Input_SchedulerPolicyPathAny) Name() *Qos_Interface_Input_SchedulerPolicy_NamePathAny {
	ps := &Qos_Interface_Input_SchedulerPolicy_NamePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "name"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SchedulerAny (list): List of the schedulers that are part of the scheduler-policy
// specified.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "schedulers/scheduler"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler"
func (n *Qos_Interface_Input_SchedulerPolicyPath) SchedulerAny() *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny {
	ps := &Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"schedulers", "scheduler"},
			map[string]interface{}{"sequence": "*"},
			n,
		),
	}
	return ps
}

// SchedulerAny (list): List of the schedulers that are part of the scheduler-policy
// specified.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "schedulers/scheduler"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler"
func (n *Qos_Interface_Input_SchedulerPolicyPathAny) SchedulerAny() *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny {
	ps := &Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"schedulers", "scheduler"},
			map[string]interface{}{"sequence": "*"},
			n,
		),
	}
	return ps
}

// Scheduler (list): List of the schedulers that are part of the scheduler-policy
// specified.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "schedulers/scheduler"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler"
//
//	Sequence: uint32
func (n *Qos_Interface_Input_SchedulerPolicyPath) Scheduler(Sequence uint32) *Qos_Interface_Input_SchedulerPolicy_SchedulerPath {
	ps := &Qos_Interface_Input_SchedulerPolicy_SchedulerPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"schedulers", "scheduler"},
			map[string]interface{}{"sequence": Sequence},
			n,
		),
	}
	return ps
}

// Scheduler (list): List of the schedulers that are part of the scheduler-policy
// specified.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "schedulers/scheduler"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler"
//
//	Sequence: uint32
func (n *Qos_Interface_Input_SchedulerPolicyPathAny) Scheduler(Sequence uint32) *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny {
	ps := &Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"schedulers", "scheduler"},
			map[string]interface{}{"sequence": Sequence},
			n,
		),
	}
	return ps
}

// SchedulerMap (list): List of the schedulers that are part of the scheduler-policy
// specified.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "schedulers/scheduler"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler"
func (n *Qos_Interface_Input_SchedulerPolicyPath) SchedulerMap() *Qos_Interface_Input_SchedulerPolicy_SchedulerPathMap {
	ps := &Qos_Interface_Input_SchedulerPolicy_SchedulerPathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"schedulers"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// SchedulerMap (list): List of the schedulers that are part of the scheduler-policy
// specified.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "schedulers/scheduler"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler"
func (n *Qos_Interface_Input_SchedulerPolicyPathAny) SchedulerMap() *Qos_Interface_Input_SchedulerPolicy_SchedulerPathMapAny {
	ps := &Qos_Interface_Input_SchedulerPolicy_SchedulerPathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"schedulers"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_SchedulerPolicyPath) State() ygnmi.SingletonQuery[*oc.Qos_Interface_Input_SchedulerPolicy] {
	return ygnmi.NewSingletonQuery[*oc.Qos_Interface_Input_SchedulerPolicy](
		"Qos_Interface_Input_SchedulerPolicy",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_SchedulerPolicyPathAny) State() ygnmi.WildcardQuery[*oc.Qos_Interface_Input_SchedulerPolicy] {
	return ygnmi.NewWildcardQuery[*oc.Qos_Interface_Input_SchedulerPolicy](
		"Qos_Interface_Input_SchedulerPolicy",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_SchedulerPolicyPath) Config() ygnmi.ConfigQuery[*oc.Qos_Interface_Input_SchedulerPolicy] {
	return ygnmi.NewConfigQuery[*oc.Qos_Interface_Input_SchedulerPolicy](
		"Qos_Interface_Input_SchedulerPolicy",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_SchedulerPolicyPathAny) Config() ygnmi.WildcardQuery[*oc.Qos_Interface_Input_SchedulerPolicy] {
	return ygnmi.NewWildcardQuery[*oc.Qos_Interface_Input_SchedulerPolicy](
		"Qos_Interface_Input_SchedulerPolicy",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingOctetsPath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-octets YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingOctetsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-octets YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingOctetsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/conforming-octets"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-octets"
func (n *Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingOctetsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_SchedulerPolicy_Scheduler",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "conforming-octets"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler).ConformingOctets
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy_Scheduler) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/conforming-octets"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-octets"
func (n *Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingOctetsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_SchedulerPolicy_Scheduler",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "conforming-octets"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler).ConformingOctets
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy_Scheduler) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingPktsPath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-pkts YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingPktsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-pkts YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingPktsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/conforming-pkts"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-pkts"
func (n *Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingPktsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_SchedulerPolicy_Scheduler",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "conforming-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler).ConformingPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy_Scheduler) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/conforming-pkts"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-pkts"
func (n *Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingPktsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_SchedulerPolicy_Scheduler",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "conforming-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler).ConformingPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy_Scheduler) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingOctetsPath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-octets YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingOctetsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-octets YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingOctetsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/exceeding-octets"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-octets"
func (n *Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingOctetsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_SchedulerPolicy_Scheduler",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "exceeding-octets"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler).ExceedingOctets
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy_Scheduler) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/exceeding-octets"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-octets"
func (n *Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingOctetsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_SchedulerPolicy_Scheduler",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "exceeding-octets"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler).ExceedingOctets
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy_Scheduler) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingPktsPath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-pkts YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingPktsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-pkts YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingPktsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/exceeding-pkts"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-pkts"
func (n *Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingPktsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_SchedulerPolicy_Scheduler",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "exceeding-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler).ExceedingPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy_Scheduler) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/exceeding-pkts"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-pkts"
func (n *Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingPktsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_SchedulerPolicy_Scheduler",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "exceeding-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler).ExceedingPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy_Scheduler) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/sequence YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/sequence YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/sequence"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/sequence"
func (n *Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePath) State() ygnmi.SingletonQuery[uint32] {
	return ygnmi.NewSingletonQuery[uint32](
		"Qos_Interface_Input_SchedulerPolicy_Scheduler",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "sequence"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler).Sequence
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy_Scheduler) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/sequence"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/sequence"
func (n *Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePathAny) State() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Qos_Interface_Input_SchedulerPolicy_Scheduler",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "sequence"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler).Sequence
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy_Scheduler) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "sequence"
//	Path from root:       ""
func (n *Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePath) Config() ygnmi.ConfigQuery[uint32] {
	return ygnmi.NewConfigQuery[uint32](
		"Qos_Interface_Input_SchedulerPolicy_Scheduler",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"sequence"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler).Sequence
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy_Scheduler) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "sequence"
//	Path from root:       ""
func (n *Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePathAny) Config() ygnmi.WildcardQuery[uint32] {
	return ygnmi.NewWildcardQuery[uint32](
		"Qos_Interface_Input_SchedulerPolicy_Scheduler",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"sequence"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint32, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler).Sequence
			if ret == nil {
				var zero uint32
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy_Scheduler) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingOctetsPath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-octets YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingOctetsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-octets YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingOctetsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/violating-octets"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-octets"
func (n *Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingOctetsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_SchedulerPolicy_Scheduler",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "violating-octets"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler).ViolatingOctets
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy_Scheduler) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/violating-octets"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-octets"
func (n *Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingOctetsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_SchedulerPolicy_Scheduler",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "violating-octets"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler).ViolatingOctets
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy_Scheduler) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingPktsPath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-pkts YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingPktsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-pkts YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingPktsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/violating-pkts"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-pkts"
func (n *Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingPktsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_SchedulerPolicy_Scheduler",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "violating-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler).ViolatingPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy_Scheduler) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/violating-pkts"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-pkts"
func (n *Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingPktsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_SchedulerPolicy_Scheduler",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "violating-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler).ViolatingPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy_Scheduler) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_SchedulerPolicy_SchedulerPath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_SchedulerPath struct {
	*ygnmi.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny struct {
	*ygnmi.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_SchedulerPathMap represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_SchedulerPathMap struct {
	*ygnmi.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_SchedulerPathMapAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_SchedulerPathMapAny struct {
	*ygnmi.NodePath
}

// ConformingOctets (leaf): The number of octets in packets that were considered
// conforming by the scheduler.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/conforming-octets"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-octets"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPath) ConformingOctets() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingOctetsPath {
	ps := &Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingOctetsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "conforming-octets"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ConformingOctets (leaf): The number of octets in packets that were considered
// conforming by the scheduler.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/conforming-octets"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-octets"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny) ConformingOctets() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingOctetsPathAny {
	ps := &Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingOctetsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "conforming-octets"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ConformingPkts (leaf): The number of packets that were considered conforming by
// the scheduler.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/conforming-pkts"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-pkts"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPath) ConformingPkts() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingPktsPath {
	ps := &Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingPktsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "conforming-pkts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ConformingPkts (leaf): The number of packets that were considered conforming by
// the scheduler.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/conforming-pkts"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-pkts"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny) ConformingPkts() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingPktsPathAny {
	ps := &Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingPktsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "conforming-pkts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ExceedingOctets (leaf): The number of octets in packets that were considered
// exceeding by the scheduler.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/exceeding-octets"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-octets"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPath) ExceedingOctets() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingOctetsPath {
	ps := &Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingOctetsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "exceeding-octets"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ExceedingOctets (leaf): The number of octets in packets that were considered
// exceeding by the scheduler.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/exceeding-octets"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-octets"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny) ExceedingOctets() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingOctetsPathAny {
	ps := &Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingOctetsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "exceeding-octets"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ExceedingPkts (leaf): The number of packets that were considered exceeding by
// the scheduler.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/exceeding-pkts"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-pkts"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPath) ExceedingPkts() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingPktsPath {
	ps := &Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingPktsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "exceeding-pkts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ExceedingPkts (leaf): The number of packets that were considered exceeding by
// the scheduler.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/exceeding-pkts"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-pkts"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny) ExceedingPkts() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingPktsPathAny {
	ps := &Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingPktsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "exceeding-pkts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Sequence (leaf): Reference to the sequence ID of the scheduler within
// the current scheduler policy.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "*/sequence"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/*/sequence"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPath) Sequence() *Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePath {
	ps := &Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "sequence"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Sequence (leaf): Reference to the sequence ID of the scheduler within
// the current scheduler policy.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "*/sequence"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/*/sequence"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny) Sequence() *Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePathAny {
	ps := &Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "sequence"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ViolatingOctets (leaf): The number of octets in packets that were considered
// violating by the policer.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/violating-octets"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-octets"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPath) ViolatingOctets() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingOctetsPath {
	ps := &Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingOctetsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "violating-octets"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ViolatingOctets (leaf): The number of octets in packets that were considered
// violating by the policer.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/violating-octets"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-octets"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny) ViolatingOctets() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingOctetsPathAny {
	ps := &Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingOctetsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "violating-octets"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ViolatingPkts (leaf): The number of packets that were considered violating by
// the policer.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/violating-pkts"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-pkts"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPath) ViolatingPkts() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingPktsPath {
	ps := &Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingPktsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "violating-pkts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ViolatingPkts (leaf): The number of packets that were considered violating by
// the policer.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/violating-pkts"
//	Path from root:       "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-pkts"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny) ViolatingPkts() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingPktsPathAny {
	ps := &Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingPktsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "violating-pkts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPath) State() ygnmi.SingletonQuery[*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler] {
	return ygnmi.NewSingletonQuery[*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler](
		"Qos_Interface_Input_SchedulerPolicy_Scheduler",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny) State() ygnmi.WildcardQuery[*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler] {
	return ygnmi.NewWildcardQuery[*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler](
		"Qos_Interface_Input_SchedulerPolicy_Scheduler",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPathMap) State() ygnmi.SingletonQuery[map[uint32]*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler] {
	return ygnmi.NewSingletonQuery[map[uint32]*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler](
		"Qos_Interface_Input_SchedulerPolicy",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[uint32]*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy).Scheduler
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-qos:schedulers"},
			PostRelPath: []string{"openconfig-qos:scheduler"},
		},
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPathMapAny) State() ygnmi.WildcardQuery[map[uint32]*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler] {
	return ygnmi.NewWildcardQuery[map[uint32]*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler](
		"Qos_Interface_Input_SchedulerPolicy",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[uint32]*oc.Qos_Interface_Input_SchedulerPolicy_Scheduler, bool) {
			ret := gs.(*oc.Qos_Interface_Input_SchedulerPolicy).Scheduler
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_SchedulerPolicy) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-qos:schedulers"},
			PostRelPath: []string{"openconfig-qos:scheduler"},
		},
	)
}

// Qos_Interface_Input_VoqInterface_NamePath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/state/name YANG schema element.
type Qos_Interface_Input_VoqInterface_NamePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_VoqInterface_NamePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/state/name YANG schema element.
type Qos_Interface_Input_VoqInterface_NamePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/name"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/state/name"
func (n *Qos_Interface_Input_VoqInterface_NamePath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Qos_Interface_Input_VoqInterface",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/name"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/state/name"
func (n *Qos_Interface_Input_VoqInterface_NamePathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Qos_Interface_Input_VoqInterface",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "config/name"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/config/name"
func (n *Qos_Interface_Input_VoqInterface_NamePath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"Qos_Interface_Input_VoqInterface",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "config/name"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/config/name"
func (n *Qos_Interface_Input_VoqInterface_NamePathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Qos_Interface_Input_VoqInterface",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_VoqInterfacePath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface YANG schema element.
type Qos_Interface_Input_VoqInterfacePath struct {
	*ygnmi.NodePath
}

// Qos_Interface_Input_VoqInterfacePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface YANG schema element.
type Qos_Interface_Input_VoqInterfacePathAny struct {
	*ygnmi.NodePath
}

// Qos_Interface_Input_VoqInterfacePathMap represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface YANG schema element.
type Qos_Interface_Input_VoqInterfacePathMap struct {
	*ygnmi.NodePath
}

// Qos_Interface_Input_VoqInterfacePathMapAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface YANG schema element.
type Qos_Interface_Input_VoqInterfacePathMapAny struct {
	*ygnmi.NodePath
}

// Name (leaf): Name used to refer to the egress interface.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "*/name"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/*/name"
func (n *Qos_Interface_Input_VoqInterfacePath) Name() *Qos_Interface_Input_VoqInterface_NamePath {
	ps := &Qos_Interface_Input_VoqInterface_NamePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "name"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Name (leaf): Name used to refer to the egress interface.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "*/name"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/*/name"
func (n *Qos_Interface_Input_VoqInterfacePathAny) Name() *Qos_Interface_Input_VoqInterface_NamePathAny {
	ps := &Qos_Interface_Input_VoqInterface_NamePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "name"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// QueueAny (list): Top-level container for the queue associated with this
// interface
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "queues/queue"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue"
func (n *Qos_Interface_Input_VoqInterfacePath) QueueAny() *Qos_Interface_Input_VoqInterface_QueuePathAny {
	ps := &Qos_Interface_Input_VoqInterface_QueuePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
	return ps
}

// QueueAny (list): Top-level container for the queue associated with this
// interface
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "queues/queue"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue"
func (n *Qos_Interface_Input_VoqInterfacePathAny) QueueAny() *Qos_Interface_Input_VoqInterface_QueuePathAny {
	ps := &Qos_Interface_Input_VoqInterface_QueuePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
	return ps
}

// Queue (list): Top-level container for the queue associated with this
// interface
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "queues/queue"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue"
//
//	Name: string
func (n *Qos_Interface_Input_VoqInterfacePath) Queue(Name string) *Qos_Interface_Input_VoqInterface_QueuePath {
	ps := &Qos_Interface_Input_VoqInterface_QueuePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
	return ps
}

// Queue (list): Top-level container for the queue associated with this
// interface
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "queues/queue"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue"
//
//	Name: string
func (n *Qos_Interface_Input_VoqInterfacePathAny) Queue(Name string) *Qos_Interface_Input_VoqInterface_QueuePathAny {
	ps := &Qos_Interface_Input_VoqInterface_QueuePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
	return ps
}

// QueueMap (list): Top-level container for the queue associated with this
// interface
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "queues/queue"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue"
func (n *Qos_Interface_Input_VoqInterfacePath) QueueMap() *Qos_Interface_Input_VoqInterface_QueuePathMap {
	ps := &Qos_Interface_Input_VoqInterface_QueuePathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"queues"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// QueueMap (list): Top-level container for the queue associated with this
// interface
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "queues/queue"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue"
func (n *Qos_Interface_Input_VoqInterfacePathAny) QueueMap() *Qos_Interface_Input_VoqInterface_QueuePathMapAny {
	ps := &Qos_Interface_Input_VoqInterface_QueuePathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"queues"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_VoqInterfacePath) State() ygnmi.SingletonQuery[*oc.Qos_Interface_Input_VoqInterface] {
	return ygnmi.NewSingletonQuery[*oc.Qos_Interface_Input_VoqInterface](
		"Qos_Interface_Input_VoqInterface",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_VoqInterfacePathAny) State() ygnmi.WildcardQuery[*oc.Qos_Interface_Input_VoqInterface] {
	return ygnmi.NewWildcardQuery[*oc.Qos_Interface_Input_VoqInterface](
		"Qos_Interface_Input_VoqInterface",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_VoqInterfacePath) Config() ygnmi.ConfigQuery[*oc.Qos_Interface_Input_VoqInterface] {
	return ygnmi.NewConfigQuery[*oc.Qos_Interface_Input_VoqInterface](
		"Qos_Interface_Input_VoqInterface",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_VoqInterfacePathAny) Config() ygnmi.WildcardQuery[*oc.Qos_Interface_Input_VoqInterface] {
	return ygnmi.NewWildcardQuery[*oc.Qos_Interface_Input_VoqInterface](
		"Qos_Interface_Input_VoqInterface",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_VoqInterfacePathMap) State() ygnmi.SingletonQuery[map[string]*oc.Qos_Interface_Input_VoqInterface] {
	return ygnmi.NewSingletonQuery[map[string]*oc.Qos_Interface_Input_VoqInterface](
		"Qos_Interface_Input",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[string]*oc.Qos_Interface_Input_VoqInterface, bool) {
			ret := gs.(*oc.Qos_Interface_Input).VoqInterface
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-qos:virtual-output-queues"},
			PostRelPath: []string{"openconfig-qos:voq-interface"},
		},
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_VoqInterfacePathMapAny) State() ygnmi.WildcardQuery[map[string]*oc.Qos_Interface_Input_VoqInterface] {
	return ygnmi.NewWildcardQuery[map[string]*oc.Qos_Interface_Input_VoqInterface](
		"Qos_Interface_Input",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[string]*oc.Qos_Interface_Input_VoqInterface, bool) {
			ret := gs.(*oc.Qos_Interface_Input).VoqInterface
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-qos:virtual-output-queues"},
			PostRelPath: []string{"openconfig-qos:voq-interface"},
		},
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_VoqInterfacePathMap) Config() ygnmi.ConfigQuery[map[string]*oc.Qos_Interface_Input_VoqInterface] {
	return ygnmi.NewConfigQuery[map[string]*oc.Qos_Interface_Input_VoqInterface](
		"Qos_Interface_Input",
		false,
		true,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[string]*oc.Qos_Interface_Input_VoqInterface, bool) {
			ret := gs.(*oc.Qos_Interface_Input).VoqInterface
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-qos:virtual-output-queues"},
			PostRelPath: []string{"openconfig-qos:voq-interface"},
		},
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *Qos_Interface_Input_VoqInterfacePathMapAny) Config() ygnmi.WildcardQuery[map[string]*oc.Qos_Interface_Input_VoqInterface] {
	return ygnmi.NewWildcardQuery[map[string]*oc.Qos_Interface_Input_VoqInterface](
		"Qos_Interface_Input",
		false,
		true,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[string]*oc.Qos_Interface_Input_VoqInterface, bool) {
			ret := gs.(*oc.Qos_Interface_Input).VoqInterface
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-qos:virtual-output-queues"},
			PostRelPath: []string{"openconfig-qos:voq-interface"},
		},
	)
}

// Qos_Interface_Input_VoqInterface_Queue_AvgQueueLenPath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/avg-queue-len YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_AvgQueueLenPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_VoqInterface_Queue_AvgQueueLenPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/avg-queue-len YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_AvgQueueLenPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/avg-queue-len"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/avg-queue-len"
func (n *Qos_Interface_Input_VoqInterface_Queue_AvgQueueLenPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_VoqInterface_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "avg-queue-len"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface_Queue).AvgQueueLen
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/avg-queue-len"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/avg-queue-len"
func (n *Qos_Interface_Input_VoqInterface_Queue_AvgQueueLenPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_VoqInterface_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "avg-queue-len"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface_Queue).AvgQueueLen
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_VoqInterface_Queue_DroppedOctetsPath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/dropped-octets YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_DroppedOctetsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_VoqInterface_Queue_DroppedOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/dropped-octets YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_DroppedOctetsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/dropped-octets"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/dropped-octets"
func (n *Qos_Interface_Input_VoqInterface_Queue_DroppedOctetsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_VoqInterface_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "dropped-octets"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface_Queue).DroppedOctets
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/dropped-octets"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/dropped-octets"
func (n *Qos_Interface_Input_VoqInterface_Queue_DroppedOctetsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_VoqInterface_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "dropped-octets"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface_Queue).DroppedOctets
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_VoqInterface_Queue_DroppedPktsPath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/dropped-pkts YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_DroppedPktsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_VoqInterface_Queue_DroppedPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/dropped-pkts YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_DroppedPktsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/dropped-pkts"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/dropped-pkts"
func (n *Qos_Interface_Input_VoqInterface_Queue_DroppedPktsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_VoqInterface_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "dropped-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface_Queue).DroppedPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/dropped-pkts"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/dropped-pkts"
func (n *Qos_Interface_Input_VoqInterface_Queue_DroppedPktsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_VoqInterface_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "dropped-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface_Queue).DroppedPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_VoqInterface_Queue_EcnMarkedOctetsPath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/ecn-marked-octets YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_EcnMarkedOctetsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_VoqInterface_Queue_EcnMarkedOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/ecn-marked-octets YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_EcnMarkedOctetsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-marked-octets"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/ecn-marked-octets"
func (n *Qos_Interface_Input_VoqInterface_Queue_EcnMarkedOctetsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_VoqInterface_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ecn-marked-octets"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface_Queue).EcnMarkedOctets
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-marked-octets"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/ecn-marked-octets"
func (n *Qos_Interface_Input_VoqInterface_Queue_EcnMarkedOctetsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_VoqInterface_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ecn-marked-octets"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface_Queue).EcnMarkedOctets
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_VoqInterface_Queue_EcnMarkedPktsPath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/ecn-marked-pkts YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_EcnMarkedPktsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_VoqInterface_Queue_EcnMarkedPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/ecn-marked-pkts YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_EcnMarkedPktsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-marked-pkts"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/ecn-marked-pkts"
func (n *Qos_Interface_Input_VoqInterface_Queue_EcnMarkedPktsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_VoqInterface_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ecn-marked-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface_Queue).EcnMarkedPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-marked-pkts"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/ecn-marked-pkts"
func (n *Qos_Interface_Input_VoqInterface_Queue_EcnMarkedPktsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_VoqInterface_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ecn-marked-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface_Queue).EcnMarkedPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_VoqInterface_Queue_EcnSelectedOctetsPath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/ecn-selected-octets YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_EcnSelectedOctetsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_VoqInterface_Queue_EcnSelectedOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/ecn-selected-octets YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_EcnSelectedOctetsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-selected-octets"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/ecn-selected-octets"
func (n *Qos_Interface_Input_VoqInterface_Queue_EcnSelectedOctetsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_VoqInterface_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ecn-selected-octets"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface_Queue).EcnSelectedOctets
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-selected-octets"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/ecn-selected-octets"
func (n *Qos_Interface_Input_VoqInterface_Queue_EcnSelectedOctetsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_VoqInterface_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ecn-selected-octets"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface_Queue).EcnSelectedOctets
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_VoqInterface_Queue_EcnSelectedPktsPath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/ecn-selected-pkts YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_EcnSelectedPktsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_VoqInterface_Queue_EcnSelectedPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/ecn-selected-pkts YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_EcnSelectedPktsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-selected-pkts"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/ecn-selected-pkts"
func (n *Qos_Interface_Input_VoqInterface_Queue_EcnSelectedPktsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_VoqInterface_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ecn-selected-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface_Queue).EcnSelectedPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/ecn-selected-pkts"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/ecn-selected-pkts"
func (n *Qos_Interface_Input_VoqInterface_Queue_EcnSelectedPktsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_VoqInterface_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "ecn-selected-pkts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface_Queue).EcnSelectedPkts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Qos_Interface_Input_VoqInterface_Queue_MaxQueueLenPath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/max-queue-len YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_MaxQueueLenPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Qos_Interface_Input_VoqInterface_Queue_MaxQueueLenPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/max-queue-len YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_MaxQueueLenPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/max-queue-len"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/max-queue-len"
func (n *Qos_Interface_Input_VoqInterface_Queue_MaxQueueLenPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Qos_Interface_Input_VoqInterface_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "max-queue-len"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface_Queue).MaxQueueLen
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-qos-interfaces"
//	Instantiating module: "openconfig-qos"
//	Path from parent:     "state/max-queue-len"
//	Path from root:       "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/max-queue-len"
func (n *Qos_Interface_Input_VoqInterface_Queue_MaxQueueLenPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Qos_Interface_Input_VoqInterface_Queue",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "max-queue-len"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Qos_Interface_Input_VoqInterface_Queue).MaxQueueLen
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Qos_Interface_Input_VoqInterface_Queue) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}
