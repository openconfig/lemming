/*
Package system is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema.

This package was generated by ygnmi version: v0.11.1: (ygot: v0.29.19)
using the following YANG input files:
  - public/release/models/acl/openconfig-acl.yang
  - public/release/models/acl/openconfig-packet-match.yang
  - public/release/models/aft/openconfig-aft.yang
  - public/release/models/bfd/openconfig-bfd.yang
  - public/release/models/bgp/openconfig-bgp-policy.yang
  - public/release/models/bgp/openconfig-bgp-types.yang
  - public/release/models/interfaces/openconfig-if-aggregate.yang
  - public/release/models/interfaces/openconfig-if-ethernet.yang
  - public/release/models/interfaces/openconfig-if-ip-ext.yang
  - public/release/models/interfaces/openconfig-if-ip.yang
  - public/release/models/interfaces/openconfig-interfaces.yang
  - public/release/models/isis/openconfig-isis.yang
  - public/release/models/lacp/openconfig-lacp.yang
  - public/release/models/lldp/openconfig-lldp-types.yang
  - public/release/models/lldp/openconfig-lldp.yang
  - public/release/models/local-routing/openconfig-local-routing.yang
  - public/release/models/mpls/openconfig-mpls-types.yang
  - public/release/models/multicast/openconfig-pim.yang
  - public/release/models/network-instance/openconfig-network-instance.yang
  - public/release/models/openconfig-extensions.yang
  - public/release/models/optical-transport/openconfig-transport-types.yang
  - public/release/models/ospf/openconfig-ospfv2.yang
  - public/release/models/platform/openconfig-platform-cpu.yang
  - public/release/models/platform/openconfig-platform-integrated-circuit.yang
  - public/release/models/platform/openconfig-platform-software.yang
  - public/release/models/platform/openconfig-platform-transceiver.yang
  - public/release/models/platform/openconfig-platform.yang
  - public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
  - public/release/models/policy/openconfig-policy-types.yang
  - public/release/models/qos/openconfig-qos-elements.yang
  - public/release/models/qos/openconfig-qos-interfaces.yang
  - public/release/models/qos/openconfig-qos-types.yang
  - public/release/models/qos/openconfig-qos.yang
  - public/release/models/rib/openconfig-rib-bgp.yang
  - public/release/models/segment-routing/openconfig-segment-routing-types.yang
  - public/release/models/system/openconfig-system.yang
  - public/release/models/types/openconfig-inet-types.yang
  - public/release/models/types/openconfig-types.yang
  - public/release/models/types/openconfig-yang-types.yang
  - public/release/models/vlan/openconfig-vlan.yang
  - public/third_party/ietf/iana-if-type.yang
  - public/third_party/ietf/ietf-inet-types.yang
  - public/third_party/ietf/ietf-interfaces.yang
  - public/third_party/ietf/ietf-yang-types.yang
  - yang/openconfig-bgp-gue.yang

Imported modules were sourced from:
  - public/release/models/...
  - public/third_party/ietf/...
*/
package system

import (
	"reflect"

	oc "github.com/openconfig/lemming/gnmi/oc"
	"github.com/openconfig/ygnmi/ygnmi"
	"github.com/openconfig/ygot/ygot"
	"github.com/openconfig/ygot/ytypes"
)

// System_Aaa_ServerGroup_NamePath represents the /openconfig-system/system/aaa/server-groups/server-group/state/name YANG schema element.
type System_Aaa_ServerGroup_NamePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_NamePathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/state/name YANG schema element.
type System_Aaa_ServerGroup_NamePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/name"
//	Path from root:       "/system/aaa/server-groups/server-group/state/name"
func (n *System_Aaa_ServerGroup_NamePath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"System_Aaa_ServerGroup",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/name"
//	Path from root:       "/system/aaa/server-groups/server-group/state/name"
func (n *System_Aaa_ServerGroup_NamePathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"System_Aaa_ServerGroup",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/name"
//	Path from root:       "/system/aaa/server-groups/server-group/config/name"
func (n *System_Aaa_ServerGroup_NamePath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"System_Aaa_ServerGroup",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/name"
//	Path from root:       "/system/aaa/server-groups/server-group/config/name"
func (n *System_Aaa_ServerGroup_NamePathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"System_Aaa_ServerGroup",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_TypePath represents the /openconfig-system/system/aaa/server-groups/server-group/state/type YANG schema element.
type System_Aaa_ServerGroup_TypePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_TypePathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/state/type YANG schema element.
type System_Aaa_ServerGroup_TypePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/type"
//	Path from root:       "/system/aaa/server-groups/server-group/state/type"
func (n *System_Aaa_ServerGroup_TypePath) State() ygnmi.SingletonQuery[oc.E_AaaTypes_AAA_SERVER_TYPE] {
	return ygnmi.NewSingletonQuery[oc.E_AaaTypes_AAA_SERVER_TYPE](
		"System_Aaa_ServerGroup",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_AaaTypes_AAA_SERVER_TYPE, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup).Type
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/type"
//	Path from root:       "/system/aaa/server-groups/server-group/state/type"
func (n *System_Aaa_ServerGroup_TypePathAny) State() ygnmi.WildcardQuery[oc.E_AaaTypes_AAA_SERVER_TYPE] {
	return ygnmi.NewWildcardQuery[oc.E_AaaTypes_AAA_SERVER_TYPE](
		"System_Aaa_ServerGroup",
		true,
		false,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_AaaTypes_AAA_SERVER_TYPE, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup).Type
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/type"
//	Path from root:       "/system/aaa/server-groups/server-group/config/type"
func (n *System_Aaa_ServerGroup_TypePath) Config() ygnmi.ConfigQuery[oc.E_AaaTypes_AAA_SERVER_TYPE] {
	return ygnmi.NewConfigQuery[oc.E_AaaTypes_AAA_SERVER_TYPE](
		"System_Aaa_ServerGroup",
		false,
		true,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_AaaTypes_AAA_SERVER_TYPE, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup).Type
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/type"
//	Path from root:       "/system/aaa/server-groups/server-group/config/type"
func (n *System_Aaa_ServerGroup_TypePathAny) Config() ygnmi.WildcardQuery[oc.E_AaaTypes_AAA_SERVER_TYPE] {
	return ygnmi.NewWildcardQuery[oc.E_AaaTypes_AAA_SERVER_TYPE](
		"System_Aaa_ServerGroup",
		false,
		true,
		true,
		false,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "type"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (oc.E_AaaTypes_AAA_SERVER_TYPE, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup).Type
			return ret, !reflect.ValueOf(ret).IsZero()
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroupPath represents the /openconfig-system/system/aaa/server-groups/server-group YANG schema element.
type System_Aaa_ServerGroupPath struct {
	*ygnmi.NodePath
}

// System_Aaa_ServerGroupPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group YANG schema element.
type System_Aaa_ServerGroupPathAny struct {
	*ygnmi.NodePath
}

// System_Aaa_ServerGroupPathMap represents the /openconfig-system/system/aaa/server-groups/server-group YANG schema element.
type System_Aaa_ServerGroupPathMap struct {
	*ygnmi.NodePath
}

// System_Aaa_ServerGroupPathMapAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group YANG schema element.
type System_Aaa_ServerGroupPathMapAny struct {
	*ygnmi.NodePath
}

// Name (leaf): Name for the server group
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/name"
//	Path from root:       "/system/aaa/server-groups/server-group/*/name"
func (n *System_Aaa_ServerGroupPath) Name() *System_Aaa_ServerGroup_NamePath {
	ps := &System_Aaa_ServerGroup_NamePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "name"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Name (leaf): Name for the server group
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/name"
//	Path from root:       "/system/aaa/server-groups/server-group/*/name"
func (n *System_Aaa_ServerGroupPathAny) Name() *System_Aaa_ServerGroup_NamePathAny {
	ps := &System_Aaa_ServerGroup_NamePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "name"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ServerAny (list): List of AAA servers
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "servers/server"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server"
func (n *System_Aaa_ServerGroupPath) ServerAny() *System_Aaa_ServerGroup_ServerPathAny {
	ps := &System_Aaa_ServerGroup_ServerPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"servers", "server"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
	return ps
}

// ServerAny (list): List of AAA servers
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "servers/server"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server"
func (n *System_Aaa_ServerGroupPathAny) ServerAny() *System_Aaa_ServerGroup_ServerPathAny {
	ps := &System_Aaa_ServerGroup_ServerPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"servers", "server"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
	return ps
}

// Server (list): List of AAA servers
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "servers/server"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server"
//
//	Address: string
func (n *System_Aaa_ServerGroupPath) Server(Address string) *System_Aaa_ServerGroup_ServerPath {
	ps := &System_Aaa_ServerGroup_ServerPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"servers", "server"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
	return ps
}

// Server (list): List of AAA servers
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "servers/server"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server"
//
//	Address: string
func (n *System_Aaa_ServerGroupPathAny) Server(Address string) *System_Aaa_ServerGroup_ServerPathAny {
	ps := &System_Aaa_ServerGroup_ServerPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"servers", "server"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
	return ps
}

// ServerMap (list): List of AAA servers
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "servers/server"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server"
func (n *System_Aaa_ServerGroupPath) ServerMap() *System_Aaa_ServerGroup_ServerPathMap {
	ps := &System_Aaa_ServerGroup_ServerPathMap{
		NodePath: ygnmi.NewNodePath(
			[]string{"servers"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// ServerMap (list): List of AAA servers
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "servers/server"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server"
func (n *System_Aaa_ServerGroupPathAny) ServerMap() *System_Aaa_ServerGroup_ServerPathMapAny {
	ps := &System_Aaa_ServerGroup_ServerPathMapAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"servers"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Type (leaf): AAA server type -- all servers in the group must be of this
// type
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/type"
//	Path from root:       "/system/aaa/server-groups/server-group/*/type"
func (n *System_Aaa_ServerGroupPath) Type() *System_Aaa_ServerGroup_TypePath {
	ps := &System_Aaa_ServerGroup_TypePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "type"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Type (leaf): AAA server type -- all servers in the group must be of this
// type
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/type"
//	Path from root:       "/system/aaa/server-groups/server-group/*/type"
func (n *System_Aaa_ServerGroupPathAny) Type() *System_Aaa_ServerGroup_TypePathAny {
	ps := &System_Aaa_ServerGroup_TypePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "type"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroupPath) State() ygnmi.SingletonQuery[*oc.System_Aaa_ServerGroup] {
	return ygnmi.NewSingletonQuery[*oc.System_Aaa_ServerGroup](
		"System_Aaa_ServerGroup",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroupPathAny) State() ygnmi.WildcardQuery[*oc.System_Aaa_ServerGroup] {
	return ygnmi.NewWildcardQuery[*oc.System_Aaa_ServerGroup](
		"System_Aaa_ServerGroup",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroupPath) Config() ygnmi.ConfigQuery[*oc.System_Aaa_ServerGroup] {
	return ygnmi.NewConfigQuery[*oc.System_Aaa_ServerGroup](
		"System_Aaa_ServerGroup",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroupPathAny) Config() ygnmi.WildcardQuery[*oc.System_Aaa_ServerGroup] {
	return ygnmi.NewWildcardQuery[*oc.System_Aaa_ServerGroup](
		"System_Aaa_ServerGroup",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroupPathMap) State() ygnmi.SingletonQuery[map[string]*oc.System_Aaa_ServerGroup] {
	return ygnmi.NewSingletonQuery[map[string]*oc.System_Aaa_ServerGroup](
		"System_Aaa",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[string]*oc.System_Aaa_ServerGroup, bool) {
			ret := gs.(*oc.System_Aaa).ServerGroup
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-system:server-groups"},
			PostRelPath: []string{"openconfig-system:server-group"},
		},
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroupPathMapAny) State() ygnmi.WildcardQuery[map[string]*oc.System_Aaa_ServerGroup] {
	return ygnmi.NewWildcardQuery[map[string]*oc.System_Aaa_ServerGroup](
		"System_Aaa",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[string]*oc.System_Aaa_ServerGroup, bool) {
			ret := gs.(*oc.System_Aaa).ServerGroup
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-system:server-groups"},
			PostRelPath: []string{"openconfig-system:server-group"},
		},
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroupPathMap) Config() ygnmi.ConfigQuery[map[string]*oc.System_Aaa_ServerGroup] {
	return ygnmi.NewConfigQuery[map[string]*oc.System_Aaa_ServerGroup](
		"System_Aaa",
		false,
		true,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[string]*oc.System_Aaa_ServerGroup, bool) {
			ret := gs.(*oc.System_Aaa).ServerGroup
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-system:server-groups"},
			PostRelPath: []string{"openconfig-system:server-group"},
		},
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroupPathMapAny) Config() ygnmi.WildcardQuery[map[string]*oc.System_Aaa_ServerGroup] {
	return ygnmi.NewWildcardQuery[map[string]*oc.System_Aaa_ServerGroup](
		"System_Aaa",
		false,
		true,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[string]*oc.System_Aaa_ServerGroup, bool) {
			ret := gs.(*oc.System_Aaa).ServerGroup
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-system:server-groups"},
			PostRelPath: []string{"openconfig-system:server-group"},
		},
	)
}

// System_Aaa_ServerGroup_Server_AddressPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/address YANG schema element.
type System_Aaa_ServerGroup_Server_AddressPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_AddressPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/address YANG schema element.
type System_Aaa_ServerGroup_Server_AddressPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/address"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/address"
func (n *System_Aaa_ServerGroup_Server_AddressPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).Address
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/address"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/address"
func (n *System_Aaa_ServerGroup_Server_AddressPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).Address
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/address"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/config/address"
func (n *System_Aaa_ServerGroup_Server_AddressPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"System_Aaa_ServerGroup_Server",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).Address
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/address"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/config/address"
func (n *System_Aaa_ServerGroup_Server_AddressPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"System_Aaa_ServerGroup_Server",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).Address
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_ConnectionAbortsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-aborts YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionAbortsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_ConnectionAbortsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-aborts YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionAbortsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-aborts"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-aborts"
func (n *System_Aaa_ServerGroup_Server_ConnectionAbortsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "connection-aborts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).ConnectionAborts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-aborts"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-aborts"
func (n *System_Aaa_ServerGroup_Server_ConnectionAbortsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "connection-aborts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).ConnectionAborts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_ConnectionClosesPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-closes YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionClosesPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_ConnectionClosesPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-closes YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionClosesPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-closes"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-closes"
func (n *System_Aaa_ServerGroup_Server_ConnectionClosesPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "connection-closes"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).ConnectionCloses
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-closes"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-closes"
func (n *System_Aaa_ServerGroup_Server_ConnectionClosesPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "connection-closes"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).ConnectionCloses
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_ConnectionFailuresPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-failures YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionFailuresPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_ConnectionFailuresPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-failures YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionFailuresPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-failures"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-failures"
func (n *System_Aaa_ServerGroup_Server_ConnectionFailuresPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "connection-failures"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).ConnectionFailures
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-failures"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-failures"
func (n *System_Aaa_ServerGroup_Server_ConnectionFailuresPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "connection-failures"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).ConnectionFailures
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_ConnectionOpensPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-opens YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionOpensPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_ConnectionOpensPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-opens YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionOpensPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-opens"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-opens"
func (n *System_Aaa_ServerGroup_Server_ConnectionOpensPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "connection-opens"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).ConnectionOpens
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-opens"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-opens"
func (n *System_Aaa_ServerGroup_Server_ConnectionOpensPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "connection-opens"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).ConnectionOpens
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_ConnectionTimeoutsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-timeouts YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionTimeoutsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_ConnectionTimeoutsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-timeouts YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionTimeoutsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-timeouts"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-timeouts"
func (n *System_Aaa_ServerGroup_Server_ConnectionTimeoutsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "connection-timeouts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).ConnectionTimeouts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-timeouts"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-timeouts"
func (n *System_Aaa_ServerGroup_Server_ConnectionTimeoutsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "connection-timeouts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).ConnectionTimeouts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_ErrorsReceivedPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/errors-received YANG schema element.
type System_Aaa_ServerGroup_Server_ErrorsReceivedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_ErrorsReceivedPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/errors-received YANG schema element.
type System_Aaa_ServerGroup_Server_ErrorsReceivedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/errors-received"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/errors-received"
func (n *System_Aaa_ServerGroup_Server_ErrorsReceivedPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "errors-received"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).ErrorsReceived
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/errors-received"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/errors-received"
func (n *System_Aaa_ServerGroup_Server_ErrorsReceivedPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "errors-received"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).ErrorsReceived
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_MessagesReceivedPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/messages-received YANG schema element.
type System_Aaa_ServerGroup_Server_MessagesReceivedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_MessagesReceivedPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/messages-received YANG schema element.
type System_Aaa_ServerGroup_Server_MessagesReceivedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/messages-received"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/messages-received"
func (n *System_Aaa_ServerGroup_Server_MessagesReceivedPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "messages-received"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).MessagesReceived
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/messages-received"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/messages-received"
func (n *System_Aaa_ServerGroup_Server_MessagesReceivedPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "messages-received"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).MessagesReceived
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_MessagesSentPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/messages-sent YANG schema element.
type System_Aaa_ServerGroup_Server_MessagesSentPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_MessagesSentPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/messages-sent YANG schema element.
type System_Aaa_ServerGroup_Server_MessagesSentPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/messages-sent"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/messages-sent"
func (n *System_Aaa_ServerGroup_Server_MessagesSentPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "messages-sent"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).MessagesSent
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/messages-sent"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/messages-sent"
func (n *System_Aaa_ServerGroup_Server_MessagesSentPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "messages-sent"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).MessagesSent
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_NamePath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/name YANG schema element.
type System_Aaa_ServerGroup_Server_NamePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_NamePathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/name YANG schema element.
type System_Aaa_ServerGroup_Server_NamePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/name"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/name"
func (n *System_Aaa_ServerGroup_Server_NamePath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/name"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/name"
func (n *System_Aaa_ServerGroup_Server_NamePathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/name"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/config/name"
func (n *System_Aaa_ServerGroup_Server_NamePath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"System_Aaa_ServerGroup_Server",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/name"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/config/name"
func (n *System_Aaa_ServerGroup_Server_NamePathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"System_Aaa_ServerGroup_Server",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_TimeoutPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/timeout YANG schema element.
type System_Aaa_ServerGroup_Server_TimeoutPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_TimeoutPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/timeout YANG schema element.
type System_Aaa_ServerGroup_Server_TimeoutPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/timeout"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/timeout"
func (n *System_Aaa_ServerGroup_Server_TimeoutPath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "timeout"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).Timeout
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/timeout"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/timeout"
func (n *System_Aaa_ServerGroup_Server_TimeoutPathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "timeout"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).Timeout
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/timeout"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/config/timeout"
func (n *System_Aaa_ServerGroup_Server_TimeoutPath) Config() ygnmi.ConfigQuery[uint16] {
	return ygnmi.NewConfigQuery[uint16](
		"System_Aaa_ServerGroup_Server",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "timeout"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).Timeout
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/timeout"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/config/timeout"
func (n *System_Aaa_ServerGroup_Server_TimeoutPathAny) Config() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"System_Aaa_ServerGroup_Server",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "timeout"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server).Timeout
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_ServerPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server YANG schema element.
type System_Aaa_ServerGroup_ServerPath struct {
	*ygnmi.NodePath
}

// System_Aaa_ServerGroup_ServerPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server YANG schema element.
type System_Aaa_ServerGroup_ServerPathAny struct {
	*ygnmi.NodePath
}

// System_Aaa_ServerGroup_ServerPathMap represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server YANG schema element.
type System_Aaa_ServerGroup_ServerPathMap struct {
	*ygnmi.NodePath
}

// System_Aaa_ServerGroup_ServerPathMapAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server YANG schema element.
type System_Aaa_ServerGroup_ServerPathMapAny struct {
	*ygnmi.NodePath
}

// Address (leaf): Address of the authentication server
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/address"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/*/address"
func (n *System_Aaa_ServerGroup_ServerPath) Address() *System_Aaa_ServerGroup_Server_AddressPath {
	ps := &System_Aaa_ServerGroup_Server_AddressPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "address"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Address (leaf): Address of the authentication server
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/address"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/*/address"
func (n *System_Aaa_ServerGroup_ServerPathAny) Address() *System_Aaa_ServerGroup_Server_AddressPathAny {
	ps := &System_Aaa_ServerGroup_Server_AddressPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "address"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ConnectionAborts (leaf): Number of aborted connections to the server.  These do
// not include connections that are close gracefully.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-aborts"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-aborts"
func (n *System_Aaa_ServerGroup_ServerPath) ConnectionAborts() *System_Aaa_ServerGroup_Server_ConnectionAbortsPath {
	ps := &System_Aaa_ServerGroup_Server_ConnectionAbortsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "connection-aborts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ConnectionAborts (leaf): Number of aborted connections to the server.  These do
// not include connections that are close gracefully.
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-aborts"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-aborts"
func (n *System_Aaa_ServerGroup_ServerPathAny) ConnectionAborts() *System_Aaa_ServerGroup_Server_ConnectionAbortsPathAny {
	ps := &System_Aaa_ServerGroup_Server_ConnectionAbortsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "connection-aborts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ConnectionCloses (leaf): Number of connection close requests sent to the server, e.g.
// socket close
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-closes"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-closes"
func (n *System_Aaa_ServerGroup_ServerPath) ConnectionCloses() *System_Aaa_ServerGroup_Server_ConnectionClosesPath {
	ps := &System_Aaa_ServerGroup_Server_ConnectionClosesPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "connection-closes"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ConnectionCloses (leaf): Number of connection close requests sent to the server, e.g.
// socket close
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-closes"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-closes"
func (n *System_Aaa_ServerGroup_ServerPathAny) ConnectionCloses() *System_Aaa_ServerGroup_Server_ConnectionClosesPathAny {
	ps := &System_Aaa_ServerGroup_Server_ConnectionClosesPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "connection-closes"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ConnectionFailures (leaf): Number of connection failures to the server
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-failures"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-failures"
func (n *System_Aaa_ServerGroup_ServerPath) ConnectionFailures() *System_Aaa_ServerGroup_Server_ConnectionFailuresPath {
	ps := &System_Aaa_ServerGroup_Server_ConnectionFailuresPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "connection-failures"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ConnectionFailures (leaf): Number of connection failures to the server
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-failures"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-failures"
func (n *System_Aaa_ServerGroup_ServerPathAny) ConnectionFailures() *System_Aaa_ServerGroup_Server_ConnectionFailuresPathAny {
	ps := &System_Aaa_ServerGroup_Server_ConnectionFailuresPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "connection-failures"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ConnectionOpens (leaf): Number of new connection requests sent to the server, e.g.
// socket open
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-opens"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-opens"
func (n *System_Aaa_ServerGroup_ServerPath) ConnectionOpens() *System_Aaa_ServerGroup_Server_ConnectionOpensPath {
	ps := &System_Aaa_ServerGroup_Server_ConnectionOpensPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "connection-opens"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ConnectionOpens (leaf): Number of new connection requests sent to the server, e.g.
// socket open
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-opens"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-opens"
func (n *System_Aaa_ServerGroup_ServerPathAny) ConnectionOpens() *System_Aaa_ServerGroup_Server_ConnectionOpensPathAny {
	ps := &System_Aaa_ServerGroup_Server_ConnectionOpensPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "connection-opens"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ConnectionTimeouts (leaf): Number of connection timeouts to the server
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-timeouts"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-timeouts"
func (n *System_Aaa_ServerGroup_ServerPath) ConnectionTimeouts() *System_Aaa_ServerGroup_Server_ConnectionTimeoutsPath {
	ps := &System_Aaa_ServerGroup_Server_ConnectionTimeoutsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "connection-timeouts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ConnectionTimeouts (leaf): Number of connection timeouts to the server
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/connection-timeouts"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/connection-timeouts"
func (n *System_Aaa_ServerGroup_ServerPathAny) ConnectionTimeouts() *System_Aaa_ServerGroup_Server_ConnectionTimeoutsPathAny {
	ps := &System_Aaa_ServerGroup_Server_ConnectionTimeoutsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "connection-timeouts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ErrorsReceived (leaf): Number of error messages received from the server
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/errors-received"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/errors-received"
func (n *System_Aaa_ServerGroup_ServerPath) ErrorsReceived() *System_Aaa_ServerGroup_Server_ErrorsReceivedPath {
	ps := &System_Aaa_ServerGroup_Server_ErrorsReceivedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "errors-received"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ErrorsReceived (leaf): Number of error messages received from the server
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/errors-received"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/errors-received"
func (n *System_Aaa_ServerGroup_ServerPathAny) ErrorsReceived() *System_Aaa_ServerGroup_Server_ErrorsReceivedPathAny {
	ps := &System_Aaa_ServerGroup_Server_ErrorsReceivedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "errors-received"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// MessagesReceived (leaf): Number of messages received by the server
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/messages-received"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/messages-received"
func (n *System_Aaa_ServerGroup_ServerPath) MessagesReceived() *System_Aaa_ServerGroup_Server_MessagesReceivedPath {
	ps := &System_Aaa_ServerGroup_Server_MessagesReceivedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "messages-received"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// MessagesReceived (leaf): Number of messages received by the server
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/messages-received"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/messages-received"
func (n *System_Aaa_ServerGroup_ServerPathAny) MessagesReceived() *System_Aaa_ServerGroup_Server_MessagesReceivedPathAny {
	ps := &System_Aaa_ServerGroup_Server_MessagesReceivedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "messages-received"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// MessagesSent (leaf): Number of messages sent to the server
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/messages-sent"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/messages-sent"
func (n *System_Aaa_ServerGroup_ServerPath) MessagesSent() *System_Aaa_ServerGroup_Server_MessagesSentPath {
	ps := &System_Aaa_ServerGroup_Server_MessagesSentPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "messages-sent"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// MessagesSent (leaf): Number of messages sent to the server
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/messages-sent"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/state/messages-sent"
func (n *System_Aaa_ServerGroup_ServerPathAny) MessagesSent() *System_Aaa_ServerGroup_Server_MessagesSentPathAny {
	ps := &System_Aaa_ServerGroup_Server_MessagesSentPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "messages-sent"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Name (leaf): Name assigned to the server
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/name"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/*/name"
func (n *System_Aaa_ServerGroup_ServerPath) Name() *System_Aaa_ServerGroup_Server_NamePath {
	ps := &System_Aaa_ServerGroup_Server_NamePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "name"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Name (leaf): Name assigned to the server
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/name"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/*/name"
func (n *System_Aaa_ServerGroup_ServerPathAny) Name() *System_Aaa_ServerGroup_Server_NamePathAny {
	ps := &System_Aaa_ServerGroup_Server_NamePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "name"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Radius (container): Top-level container for RADIUS server data
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "radius"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius"
func (n *System_Aaa_ServerGroup_ServerPath) Radius() *System_Aaa_ServerGroup_Server_RadiusPath {
	ps := &System_Aaa_ServerGroup_Server_RadiusPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"radius"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Radius (container): Top-level container for RADIUS server data
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "radius"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius"
func (n *System_Aaa_ServerGroup_ServerPathAny) Radius() *System_Aaa_ServerGroup_Server_RadiusPathAny {
	ps := &System_Aaa_ServerGroup_Server_RadiusPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"radius"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Tacacs (container): Top-level container for TACACS+ server data
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "tacacs"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs"
func (n *System_Aaa_ServerGroup_ServerPath) Tacacs() *System_Aaa_ServerGroup_Server_TacacsPath {
	ps := &System_Aaa_ServerGroup_Server_TacacsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"tacacs"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Tacacs (container): Top-level container for TACACS+ server data
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "tacacs"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs"
func (n *System_Aaa_ServerGroup_ServerPathAny) Tacacs() *System_Aaa_ServerGroup_Server_TacacsPathAny {
	ps := &System_Aaa_ServerGroup_Server_TacacsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"tacacs"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Timeout (leaf): Set the timeout in seconds on responses from the AAA
// server
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/timeout"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/*/timeout"
func (n *System_Aaa_ServerGroup_ServerPath) Timeout() *System_Aaa_ServerGroup_Server_TimeoutPath {
	ps := &System_Aaa_ServerGroup_Server_TimeoutPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "timeout"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Timeout (leaf): Set the timeout in seconds on responses from the AAA
// server
//
//	Defining module:      "openconfig-aaa"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/timeout"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/*/timeout"
func (n *System_Aaa_ServerGroup_ServerPathAny) Timeout() *System_Aaa_ServerGroup_Server_TimeoutPathAny {
	ps := &System_Aaa_ServerGroup_Server_TimeoutPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "timeout"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroup_ServerPath) State() ygnmi.SingletonQuery[*oc.System_Aaa_ServerGroup_Server] {
	return ygnmi.NewSingletonQuery[*oc.System_Aaa_ServerGroup_Server](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroup_ServerPathAny) State() ygnmi.WildcardQuery[*oc.System_Aaa_ServerGroup_Server] {
	return ygnmi.NewWildcardQuery[*oc.System_Aaa_ServerGroup_Server](
		"System_Aaa_ServerGroup_Server",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroup_ServerPath) Config() ygnmi.ConfigQuery[*oc.System_Aaa_ServerGroup_Server] {
	return ygnmi.NewConfigQuery[*oc.System_Aaa_ServerGroup_Server](
		"System_Aaa_ServerGroup_Server",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroup_ServerPathAny) Config() ygnmi.WildcardQuery[*oc.System_Aaa_ServerGroup_Server] {
	return ygnmi.NewWildcardQuery[*oc.System_Aaa_ServerGroup_Server](
		"System_Aaa_ServerGroup_Server",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroup_ServerPathMap) State() ygnmi.SingletonQuery[map[string]*oc.System_Aaa_ServerGroup_Server] {
	return ygnmi.NewSingletonQuery[map[string]*oc.System_Aaa_ServerGroup_Server](
		"System_Aaa_ServerGroup",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[string]*oc.System_Aaa_ServerGroup_Server, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup).Server
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-system:servers"},
			PostRelPath: []string{"openconfig-system:server"},
		},
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroup_ServerPathMapAny) State() ygnmi.WildcardQuery[map[string]*oc.System_Aaa_ServerGroup_Server] {
	return ygnmi.NewWildcardQuery[map[string]*oc.System_Aaa_ServerGroup_Server](
		"System_Aaa_ServerGroup",
		true,
		false,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[string]*oc.System_Aaa_ServerGroup_Server, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup).Server
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-system:servers"},
			PostRelPath: []string{"openconfig-system:server"},
		},
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroup_ServerPathMap) Config() ygnmi.ConfigQuery[map[string]*oc.System_Aaa_ServerGroup_Server] {
	return ygnmi.NewConfigQuery[map[string]*oc.System_Aaa_ServerGroup_Server](
		"System_Aaa_ServerGroup",
		false,
		true,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[string]*oc.System_Aaa_ServerGroup_Server, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup).Server
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-system:servers"},
			PostRelPath: []string{"openconfig-system:server"},
		},
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroup_ServerPathMapAny) Config() ygnmi.WildcardQuery[map[string]*oc.System_Aaa_ServerGroup_Server] {
	return ygnmi.NewWildcardQuery[map[string]*oc.System_Aaa_ServerGroup_Server](
		"System_Aaa_ServerGroup",
		false,
		true,
		false,
		false,
		true,
		true,
		n,
		func(gs ygot.ValidatedGoStruct) (map[string]*oc.System_Aaa_ServerGroup_Server, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup).Server
			return ret, ret != nil
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		&ygnmi.CompressionInfo{
			PreRelPath:  []string{"openconfig-system:servers"},
			PostRelPath: []string{"openconfig-system:server"},
		},
	)
}

// System_Aaa_ServerGroup_Server_Radius_AcctPortPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/acct-port YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_AcctPortPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_Radius_AcctPortPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/acct-port YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_AcctPortPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/acct-port"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/acct-port"
func (n *System_Aaa_ServerGroup_Server_Radius_AcctPortPath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"System_Aaa_ServerGroup_Server_Radius",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "acct-port"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).AcctPort
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/acct-port"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/acct-port"
func (n *System_Aaa_ServerGroup_Server_Radius_AcctPortPathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"System_Aaa_ServerGroup_Server_Radius",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "acct-port"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).AcctPort
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/acct-port"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/config/acct-port"
func (n *System_Aaa_ServerGroup_Server_Radius_AcctPortPath) Config() ygnmi.ConfigQuery[uint16] {
	return ygnmi.NewConfigQuery[uint16](
		"System_Aaa_ServerGroup_Server_Radius",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "acct-port"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).AcctPort
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/acct-port"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/config/acct-port"
func (n *System_Aaa_ServerGroup_Server_Radius_AcctPortPathAny) Config() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"System_Aaa_ServerGroup_Server_Radius",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "acct-port"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).AcctPort
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_Radius_AuthPortPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/auth-port YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_AuthPortPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_Radius_AuthPortPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/auth-port YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_AuthPortPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/auth-port"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/auth-port"
func (n *System_Aaa_ServerGroup_Server_Radius_AuthPortPath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"System_Aaa_ServerGroup_Server_Radius",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "auth-port"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).AuthPort
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/auth-port"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/auth-port"
func (n *System_Aaa_ServerGroup_Server_Radius_AuthPortPathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"System_Aaa_ServerGroup_Server_Radius",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "auth-port"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).AuthPort
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/auth-port"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/config/auth-port"
func (n *System_Aaa_ServerGroup_Server_Radius_AuthPortPath) Config() ygnmi.ConfigQuery[uint16] {
	return ygnmi.NewConfigQuery[uint16](
		"System_Aaa_ServerGroup_Server_Radius",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "auth-port"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).AuthPort
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/auth-port"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/config/auth-port"
func (n *System_Aaa_ServerGroup_Server_Radius_AuthPortPathAny) Config() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"System_Aaa_ServerGroup_Server_Radius",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "auth-port"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).AuthPort
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/retransmit-attempts YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/retransmit-attempts YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/retransmit-attempts"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/retransmit-attempts"
func (n *System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPath) State() ygnmi.SingletonQuery[uint8] {
	return ygnmi.NewSingletonQuery[uint8](
		"System_Aaa_ServerGroup_Server_Radius",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "retransmit-attempts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).RetransmitAttempts
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/retransmit-attempts"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/retransmit-attempts"
func (n *System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPathAny) State() ygnmi.WildcardQuery[uint8] {
	return ygnmi.NewWildcardQuery[uint8](
		"System_Aaa_ServerGroup_Server_Radius",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "retransmit-attempts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).RetransmitAttempts
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/retransmit-attempts"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/config/retransmit-attempts"
func (n *System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPath) Config() ygnmi.ConfigQuery[uint8] {
	return ygnmi.NewConfigQuery[uint8](
		"System_Aaa_ServerGroup_Server_Radius",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "retransmit-attempts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).RetransmitAttempts
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/retransmit-attempts"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/config/retransmit-attempts"
func (n *System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPathAny) Config() ygnmi.WildcardQuery[uint8] {
	return ygnmi.NewWildcardQuery[uint8](
		"System_Aaa_ServerGroup_Server_Radius",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "retransmit-attempts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint8, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).RetransmitAttempts
			if ret == nil {
				var zero uint8
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_Radius_SecretKeyPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_SecretKeyPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_Radius_SecretKeyPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_SecretKeyPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/secret-key"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key"
func (n *System_Aaa_ServerGroup_Server_Radius_SecretKeyPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"System_Aaa_ServerGroup_Server_Radius",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "secret-key"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).SecretKey
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/secret-key"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key"
func (n *System_Aaa_ServerGroup_Server_Radius_SecretKeyPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"System_Aaa_ServerGroup_Server_Radius",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "secret-key"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).SecretKey
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/secret-key"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/config/secret-key"
func (n *System_Aaa_ServerGroup_Server_Radius_SecretKeyPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"System_Aaa_ServerGroup_Server_Radius",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "secret-key"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).SecretKey
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/secret-key"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/config/secret-key"
func (n *System_Aaa_ServerGroup_Server_Radius_SecretKeyPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"System_Aaa_ServerGroup_Server_Radius",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "secret-key"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).SecretKey
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key-hashed YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key-hashed YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/secret-key-hashed"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key-hashed"
func (n *System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"System_Aaa_ServerGroup_Server_Radius",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "secret-key-hashed"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).SecretKeyHashed
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/secret-key-hashed"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key-hashed"
func (n *System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"System_Aaa_ServerGroup_Server_Radius",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "secret-key-hashed"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).SecretKeyHashed
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/secret-key-hashed"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/config/secret-key-hashed"
func (n *System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"System_Aaa_ServerGroup_Server_Radius",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "secret-key-hashed"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).SecretKeyHashed
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/secret-key-hashed"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/config/secret-key-hashed"
func (n *System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"System_Aaa_ServerGroup_Server_Radius",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "secret-key-hashed"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).SecretKeyHashed
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_Radius_SourceAddressPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/source-address YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_SourceAddressPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_Radius_SourceAddressPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/source-address YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_SourceAddressPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/source-address"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/source-address"
func (n *System_Aaa_ServerGroup_Server_Radius_SourceAddressPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"System_Aaa_ServerGroup_Server_Radius",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "source-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).SourceAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/source-address"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/source-address"
func (n *System_Aaa_ServerGroup_Server_Radius_SourceAddressPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"System_Aaa_ServerGroup_Server_Radius",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "source-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).SourceAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/source-address"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/config/source-address"
func (n *System_Aaa_ServerGroup_Server_Radius_SourceAddressPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"System_Aaa_ServerGroup_Server_Radius",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "source-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).SourceAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/source-address"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/config/source-address"
func (n *System_Aaa_ServerGroup_Server_Radius_SourceAddressPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"System_Aaa_ServerGroup_Server_Radius",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "source-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius).SourceAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_RadiusPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius YANG schema element.
type System_Aaa_ServerGroup_Server_RadiusPath struct {
	*ygnmi.NodePath
}

// System_Aaa_ServerGroup_Server_RadiusPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius YANG schema element.
type System_Aaa_ServerGroup_Server_RadiusPathAny struct {
	*ygnmi.NodePath
}

// AcctPort (leaf): Port number for accounting requests
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/acct-port"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/*/acct-port"
func (n *System_Aaa_ServerGroup_Server_RadiusPath) AcctPort() *System_Aaa_ServerGroup_Server_Radius_AcctPortPath {
	ps := &System_Aaa_ServerGroup_Server_Radius_AcctPortPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "acct-port"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AcctPort (leaf): Port number for accounting requests
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/acct-port"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/*/acct-port"
func (n *System_Aaa_ServerGroup_Server_RadiusPathAny) AcctPort() *System_Aaa_ServerGroup_Server_Radius_AcctPortPathAny {
	ps := &System_Aaa_ServerGroup_Server_Radius_AcctPortPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "acct-port"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AuthPort (leaf): Port number for authentication requests
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/auth-port"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/*/auth-port"
func (n *System_Aaa_ServerGroup_Server_RadiusPath) AuthPort() *System_Aaa_ServerGroup_Server_Radius_AuthPortPath {
	ps := &System_Aaa_ServerGroup_Server_Radius_AuthPortPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "auth-port"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AuthPort (leaf): Port number for authentication requests
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/auth-port"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/*/auth-port"
func (n *System_Aaa_ServerGroup_Server_RadiusPathAny) AuthPort() *System_Aaa_ServerGroup_Server_Radius_AuthPortPathAny {
	ps := &System_Aaa_ServerGroup_Server_Radius_AuthPortPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "auth-port"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Counters (container): A collection of RADIUS related state objects.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/counters"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/counters"
func (n *System_Aaa_ServerGroup_Server_RadiusPath) Counters() *System_Aaa_ServerGroup_Server_Radius_CountersPath {
	ps := &System_Aaa_ServerGroup_Server_Radius_CountersPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Counters (container): A collection of RADIUS related state objects.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/counters"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/counters"
func (n *System_Aaa_ServerGroup_Server_RadiusPathAny) Counters() *System_Aaa_ServerGroup_Server_Radius_CountersPathAny {
	ps := &System_Aaa_ServerGroup_Server_Radius_CountersPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// RetransmitAttempts (leaf): Number of times the system may resend a request to the
// RADIUS server when it is unresponsive
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/retransmit-attempts"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/*/retransmit-attempts"
func (n *System_Aaa_ServerGroup_Server_RadiusPath) RetransmitAttempts() *System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPath {
	ps := &System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "retransmit-attempts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RetransmitAttempts (leaf): Number of times the system may resend a request to the
// RADIUS server when it is unresponsive
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/retransmit-attempts"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/*/retransmit-attempts"
func (n *System_Aaa_ServerGroup_Server_RadiusPathAny) RetransmitAttempts() *System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPathAny {
	ps := &System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "retransmit-attempts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SecretKey (leaf): The unencrypted shared key used between the authentication
// server and the device.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/secret-key"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/*/secret-key"
func (n *System_Aaa_ServerGroup_Server_RadiusPath) SecretKey() *System_Aaa_ServerGroup_Server_Radius_SecretKeyPath {
	ps := &System_Aaa_ServerGroup_Server_Radius_SecretKeyPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "secret-key"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SecretKey (leaf): The unencrypted shared key used between the authentication
// server and the device.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/secret-key"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/*/secret-key"
func (n *System_Aaa_ServerGroup_Server_RadiusPathAny) SecretKey() *System_Aaa_ServerGroup_Server_Radius_SecretKeyPathAny {
	ps := &System_Aaa_ServerGroup_Server_Radius_SecretKeyPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "secret-key"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SecretKeyHashed (leaf): The hashed shared key used between the authentication
// server and the device.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/secret-key-hashed"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/*/secret-key-hashed"
func (n *System_Aaa_ServerGroup_Server_RadiusPath) SecretKeyHashed() *System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPath {
	ps := &System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "secret-key-hashed"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SecretKeyHashed (leaf): The hashed shared key used between the authentication
// server and the device.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/secret-key-hashed"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/*/secret-key-hashed"
func (n *System_Aaa_ServerGroup_Server_RadiusPathAny) SecretKeyHashed() *System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPathAny {
	ps := &System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "secret-key-hashed"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SourceAddress (leaf): Source IP address to use in messages to the RADIUS server
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/source-address"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/*/source-address"
func (n *System_Aaa_ServerGroup_Server_RadiusPath) SourceAddress() *System_Aaa_ServerGroup_Server_Radius_SourceAddressPath {
	ps := &System_Aaa_ServerGroup_Server_Radius_SourceAddressPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "source-address"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SourceAddress (leaf): Source IP address to use in messages to the RADIUS server
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/source-address"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/*/source-address"
func (n *System_Aaa_ServerGroup_Server_RadiusPathAny) SourceAddress() *System_Aaa_ServerGroup_Server_Radius_SourceAddressPathAny {
	ps := &System_Aaa_ServerGroup_Server_Radius_SourceAddressPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "source-address"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroup_Server_RadiusPath) State() ygnmi.SingletonQuery[*oc.System_Aaa_ServerGroup_Server_Radius] {
	return ygnmi.NewSingletonQuery[*oc.System_Aaa_ServerGroup_Server_Radius](
		"System_Aaa_ServerGroup_Server_Radius",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroup_Server_RadiusPathAny) State() ygnmi.WildcardQuery[*oc.System_Aaa_ServerGroup_Server_Radius] {
	return ygnmi.NewWildcardQuery[*oc.System_Aaa_ServerGroup_Server_Radius](
		"System_Aaa_ServerGroup_Server_Radius",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroup_Server_RadiusPath) Config() ygnmi.ConfigQuery[*oc.System_Aaa_ServerGroup_Server_Radius] {
	return ygnmi.NewConfigQuery[*oc.System_Aaa_ServerGroup_Server_Radius](
		"System_Aaa_ServerGroup_Server_Radius",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroup_Server_RadiusPathAny) Config() ygnmi.WildcardQuery[*oc.System_Aaa_ServerGroup_Server_Radius] {
	return ygnmi.NewWildcardQuery[*oc.System_Aaa_ServerGroup_Server_Radius](
		"System_Aaa_ServerGroup_Server_Radius",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-accepts YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-accepts YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "access-accepts"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-accepts"
func (n *System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"System_Aaa_ServerGroup_Server_Radius_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"access-accepts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius_Counters).AccessAccepts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "access-accepts"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-accepts"
func (n *System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"System_Aaa_ServerGroup_Server_Radius_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"access-accepts"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius_Counters).AccessAccepts
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-rejects YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-rejects YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "access-rejects"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-rejects"
func (n *System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"System_Aaa_ServerGroup_Server_Radius_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"access-rejects"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius_Counters).AccessRejects
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "access-rejects"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-rejects"
func (n *System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"System_Aaa_ServerGroup_Server_Radius_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"access-rejects"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius_Counters).AccessRejects
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/retried-access-requests YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/retried-access-requests YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "retried-access-requests"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/retried-access-requests"
func (n *System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"System_Aaa_ServerGroup_Server_Radius_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"retried-access-requests"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius_Counters).RetriedAccessRequests
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "retried-access-requests"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/retried-access-requests"
func (n *System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"System_Aaa_ServerGroup_Server_Radius_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"retried-access-requests"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius_Counters).RetriedAccessRequests
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/timeout-access-requests YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/timeout-access-requests YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "timeout-access-requests"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/timeout-access-requests"
func (n *System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"System_Aaa_ServerGroup_Server_Radius_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"timeout-access-requests"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius_Counters).TimeoutAccessRequests
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "timeout-access-requests"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/timeout-access-requests"
func (n *System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"System_Aaa_ServerGroup_Server_Radius_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"timeout-access-requests"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Radius_Counters).TimeoutAccessRequests
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Radius_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_Radius_CountersPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_CountersPath struct {
	*ygnmi.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_CountersPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_CountersPathAny struct {
	*ygnmi.NodePath
}

// AccessAccepts (leaf): Received Access-Accept messages.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "access-accepts"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-accepts"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPath) AccessAccepts() *System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPath {
	ps := &System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"access-accepts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AccessAccepts (leaf): Received Access-Accept messages.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "access-accepts"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-accepts"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPathAny) AccessAccepts() *System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPathAny {
	ps := &System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"access-accepts"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AccessRejects (leaf): Received Access-Reject messages.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "access-rejects"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-rejects"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPath) AccessRejects() *System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPath {
	ps := &System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"access-rejects"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AccessRejects (leaf): Received Access-Reject messages.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "access-rejects"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-rejects"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPathAny) AccessRejects() *System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPathAny {
	ps := &System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"access-rejects"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RetriedAccessRequests (leaf): Retransmitted Access-Request messages.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "retried-access-requests"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/retried-access-requests"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPath) RetriedAccessRequests() *System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPath {
	ps := &System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"retried-access-requests"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RetriedAccessRequests (leaf): Retransmitted Access-Request messages.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "retried-access-requests"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/retried-access-requests"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPathAny) RetriedAccessRequests() *System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPathAny {
	ps := &System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"retried-access-requests"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// TimeoutAccessRequests (leaf): Access-Request messages that have timed-out,
// requiring retransmission.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "timeout-access-requests"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/timeout-access-requests"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPath) TimeoutAccessRequests() *System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPath {
	ps := &System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"timeout-access-requests"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// TimeoutAccessRequests (leaf): Access-Request messages that have timed-out,
// requiring retransmission.
//
//	Defining module:      "openconfig-aaa-radius"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "timeout-access-requests"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/timeout-access-requests"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPathAny) TimeoutAccessRequests() *System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPathAny {
	ps := &System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"timeout-access-requests"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPath) State() ygnmi.SingletonQuery[*oc.System_Aaa_ServerGroup_Server_Radius_Counters] {
	return ygnmi.NewSingletonQuery[*oc.System_Aaa_ServerGroup_Server_Radius_Counters](
		"System_Aaa_ServerGroup_Server_Radius_Counters",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPathAny) State() ygnmi.WildcardQuery[*oc.System_Aaa_ServerGroup_Server_Radius_Counters] {
	return ygnmi.NewWildcardQuery[*oc.System_Aaa_ServerGroup_Server_Radius_Counters](
		"System_Aaa_ServerGroup_Server_Radius_Counters",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_Tacacs_PortPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/port YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_PortPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_Tacacs_PortPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/port YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_PortPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/port"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/state/port"
func (n *System_Aaa_ServerGroup_Server_Tacacs_PortPath) State() ygnmi.SingletonQuery[uint16] {
	return ygnmi.NewSingletonQuery[uint16](
		"System_Aaa_ServerGroup_Server_Tacacs",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "port"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Tacacs).Port
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Tacacs) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/port"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/state/port"
func (n *System_Aaa_ServerGroup_Server_Tacacs_PortPathAny) State() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"System_Aaa_ServerGroup_Server_Tacacs",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "port"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Tacacs).Port
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Tacacs) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/port"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/config/port"
func (n *System_Aaa_ServerGroup_Server_Tacacs_PortPath) Config() ygnmi.ConfigQuery[uint16] {
	return ygnmi.NewConfigQuery[uint16](
		"System_Aaa_ServerGroup_Server_Tacacs",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "port"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Tacacs).Port
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Tacacs) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/port"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/config/port"
func (n *System_Aaa_ServerGroup_Server_Tacacs_PortPathAny) Config() ygnmi.WildcardQuery[uint16] {
	return ygnmi.NewWildcardQuery[uint16](
		"System_Aaa_ServerGroup_Server_Tacacs",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "port"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint16, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Tacacs).Port
			if ret == nil {
				var zero uint16
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Tacacs) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/secret-key"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key"
func (n *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"System_Aaa_ServerGroup_Server_Tacacs",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "secret-key"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Tacacs).SecretKey
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Tacacs) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/secret-key"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key"
func (n *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"System_Aaa_ServerGroup_Server_Tacacs",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "secret-key"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Tacacs).SecretKey
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Tacacs) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/secret-key"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/config/secret-key"
func (n *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"System_Aaa_ServerGroup_Server_Tacacs",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "secret-key"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Tacacs).SecretKey
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Tacacs) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/secret-key"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/config/secret-key"
func (n *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"System_Aaa_ServerGroup_Server_Tacacs",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "secret-key"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Tacacs).SecretKey
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Tacacs) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key-hashed YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key-hashed YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/secret-key-hashed"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key-hashed"
func (n *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"System_Aaa_ServerGroup_Server_Tacacs",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "secret-key-hashed"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Tacacs).SecretKeyHashed
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Tacacs) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/secret-key-hashed"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key-hashed"
func (n *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"System_Aaa_ServerGroup_Server_Tacacs",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "secret-key-hashed"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Tacacs).SecretKeyHashed
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Tacacs) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/secret-key-hashed"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/config/secret-key-hashed"
func (n *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"System_Aaa_ServerGroup_Server_Tacacs",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "secret-key-hashed"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Tacacs).SecretKeyHashed
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Tacacs) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/secret-key-hashed"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/config/secret-key-hashed"
func (n *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"System_Aaa_ServerGroup_Server_Tacacs",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "secret-key-hashed"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Tacacs).SecretKeyHashed
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Tacacs) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/source-address YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/source-address YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/source-address"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/state/source-address"
func (n *System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"System_Aaa_ServerGroup_Server_Tacacs",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "source-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Tacacs).SourceAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Tacacs) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "state/source-address"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/state/source-address"
func (n *System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"System_Aaa_ServerGroup_Server_Tacacs",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "source-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Tacacs).SourceAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Tacacs) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/source-address"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/config/source-address"
func (n *System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"System_Aaa_ServerGroup_Server_Tacacs",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "source-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Tacacs).SourceAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Tacacs) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "config/source-address"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/config/source-address"
func (n *System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"System_Aaa_ServerGroup_Server_Tacacs",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"config", "source-address"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.System_Aaa_ServerGroup_Server_Tacacs).SourceAddress
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.System_Aaa_ServerGroup_Server_Tacacs) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// System_Aaa_ServerGroup_Server_TacacsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs YANG schema element.
type System_Aaa_ServerGroup_Server_TacacsPath struct {
	*ygnmi.NodePath
}

// System_Aaa_ServerGroup_Server_TacacsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs YANG schema element.
type System_Aaa_ServerGroup_Server_TacacsPathAny struct {
	*ygnmi.NodePath
}

// Port (leaf): The port number on which to contact the TACACS server
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/port"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/*/port"
func (n *System_Aaa_ServerGroup_Server_TacacsPath) Port() *System_Aaa_ServerGroup_Server_Tacacs_PortPath {
	ps := &System_Aaa_ServerGroup_Server_Tacacs_PortPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "port"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Port (leaf): The port number on which to contact the TACACS server
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/port"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/*/port"
func (n *System_Aaa_ServerGroup_Server_TacacsPathAny) Port() *System_Aaa_ServerGroup_Server_Tacacs_PortPathAny {
	ps := &System_Aaa_ServerGroup_Server_Tacacs_PortPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "port"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SecretKey (leaf): The unencrypted shared key used between the authentication
// server and the device.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/secret-key"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/*/secret-key"
func (n *System_Aaa_ServerGroup_Server_TacacsPath) SecretKey() *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPath {
	ps := &System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "secret-key"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SecretKey (leaf): The unencrypted shared key used between the authentication
// server and the device.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/secret-key"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/*/secret-key"
func (n *System_Aaa_ServerGroup_Server_TacacsPathAny) SecretKey() *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPathAny {
	ps := &System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "secret-key"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SecretKeyHashed (leaf): The hashed shared key used between the authentication
// server and the device.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/secret-key-hashed"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/*/secret-key-hashed"
func (n *System_Aaa_ServerGroup_Server_TacacsPath) SecretKeyHashed() *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPath {
	ps := &System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "secret-key-hashed"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SecretKeyHashed (leaf): The hashed shared key used between the authentication
// server and the device.
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/secret-key-hashed"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/*/secret-key-hashed"
func (n *System_Aaa_ServerGroup_Server_TacacsPathAny) SecretKeyHashed() *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPathAny {
	ps := &System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "secret-key-hashed"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SourceAddress (leaf): Source IP address to use in messages to the TACACS server
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/source-address"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/*/source-address"
func (n *System_Aaa_ServerGroup_Server_TacacsPath) SourceAddress() *System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPath {
	ps := &System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "source-address"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SourceAddress (leaf): Source IP address to use in messages to the TACACS server
//
//	Defining module:      "openconfig-aaa-tacacs"
//	Instantiating module: "openconfig-system"
//	Path from parent:     "*/source-address"
//	Path from root:       "/system/aaa/server-groups/server-group/servers/server/tacacs/*/source-address"
func (n *System_Aaa_ServerGroup_Server_TacacsPathAny) SourceAddress() *System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPathAny {
	ps := &System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "source-address"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroup_Server_TacacsPath) State() ygnmi.SingletonQuery[*oc.System_Aaa_ServerGroup_Server_Tacacs] {
	return ygnmi.NewSingletonQuery[*oc.System_Aaa_ServerGroup_Server_Tacacs](
		"System_Aaa_ServerGroup_Server_Tacacs",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroup_Server_TacacsPathAny) State() ygnmi.WildcardQuery[*oc.System_Aaa_ServerGroup_Server_Tacacs] {
	return ygnmi.NewWildcardQuery[*oc.System_Aaa_ServerGroup_Server_Tacacs](
		"System_Aaa_ServerGroup_Server_Tacacs",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroup_Server_TacacsPath) Config() ygnmi.ConfigQuery[*oc.System_Aaa_ServerGroup_Server_Tacacs] {
	return ygnmi.NewConfigQuery[*oc.System_Aaa_ServerGroup_Server_Tacacs](
		"System_Aaa_ServerGroup_Server_Tacacs",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
func (n *System_Aaa_ServerGroup_Server_TacacsPathAny) Config() ygnmi.WildcardQuery[*oc.System_Aaa_ServerGroup_Server_Tacacs] {
	return ygnmi.NewWildcardQuery[*oc.System_Aaa_ServerGroup_Server_Tacacs](
		"System_Aaa_ServerGroup_Server_Tacacs",
		false,
		true,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}
