// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: proto/forwarding/forwarding_port.proto

package forwarding

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PortType int32

const (
	PortType_PORT_TYPE_UNSPECIFIED    PortType = 0
	PortType_PORT_TYPE_CPU_PORT       PortType = 1
	PortType_PORT_TYPE_AGGREGATE_PORT PortType = 2
	PortType_PORT_TYPE_KERNEL         PortType = 3
	PortType_PORT_TYPE_TAP            PortType = 4
)

// Enum value maps for PortType.
var (
	PortType_name = map[int32]string{
		0: "PORT_TYPE_UNSPECIFIED",
		1: "PORT_TYPE_CPU_PORT",
		2: "PORT_TYPE_AGGREGATE_PORT",
		3: "PORT_TYPE_KERNEL",
		4: "PORT_TYPE_TAP",
	}
	PortType_value = map[string]int32{
		"PORT_TYPE_UNSPECIFIED":    0,
		"PORT_TYPE_CPU_PORT":       1,
		"PORT_TYPE_AGGREGATE_PORT": 2,
		"PORT_TYPE_KERNEL":         3,
		"PORT_TYPE_TAP":            4,
	}
)

func (x PortType) Enum() *PortType {
	p := new(PortType)
	*p = x
	return p
}

func (x PortType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PortType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_forwarding_forwarding_port_proto_enumTypes[0].Descriptor()
}

func (PortType) Type() protoreflect.EnumType {
	return &file_proto_forwarding_forwarding_port_proto_enumTypes[0]
}

func (x PortType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PortType.Descriptor instead.
func (PortType) EnumDescriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{0}
}

type AggregateHashAlgorithm int32

const (
	AggregateHashAlgorithm_AGGREGATE_HASH_ALGORITHM_UNSPECIFIED AggregateHashAlgorithm = 0
	AggregateHashAlgorithm_AGGREGATE_HASH_ALGORITHM_CRC16       AggregateHashAlgorithm = 2
	AggregateHashAlgorithm_AGGREGATE_HASH_ALGORITHM_CRC32       AggregateHashAlgorithm = 3
	AggregateHashAlgorithm_AGGREGATE_HASH_ALGORITHM_FLOOD       AggregateHashAlgorithm = 5
)

// Enum value maps for AggregateHashAlgorithm.
var (
	AggregateHashAlgorithm_name = map[int32]string{
		0: "AGGREGATE_HASH_ALGORITHM_UNSPECIFIED",
		2: "AGGREGATE_HASH_ALGORITHM_CRC16",
		3: "AGGREGATE_HASH_ALGORITHM_CRC32",
		5: "AGGREGATE_HASH_ALGORITHM_FLOOD",
	}
	AggregateHashAlgorithm_value = map[string]int32{
		"AGGREGATE_HASH_ALGORITHM_UNSPECIFIED": 0,
		"AGGREGATE_HASH_ALGORITHM_CRC16":       2,
		"AGGREGATE_HASH_ALGORITHM_CRC32":       3,
		"AGGREGATE_HASH_ALGORITHM_FLOOD":       5,
	}
)

func (x AggregateHashAlgorithm) Enum() *AggregateHashAlgorithm {
	p := new(AggregateHashAlgorithm)
	*p = x
	return p
}

func (x AggregateHashAlgorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AggregateHashAlgorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_forwarding_forwarding_port_proto_enumTypes[1].Descriptor()
}

func (AggregateHashAlgorithm) Type() protoreflect.EnumType {
	return &file_proto_forwarding_forwarding_port_proto_enumTypes[1]
}

func (x AggregateHashAlgorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AggregateHashAlgorithm.Descriptor instead.
func (AggregateHashAlgorithm) EnumDescriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{1}
}

type PortState int32

const (
	PortState_PORT_STATE_UNSPECIFIED   PortState = 0
	PortState_PORT_STATE_ENABLED_UP    PortState = 2
	PortState_PORT_STATE_DISABLED_DOWN PortState = 3
)

// Enum value maps for PortState.
var (
	PortState_name = map[int32]string{
		0: "PORT_STATE_UNSPECIFIED",
		2: "PORT_STATE_ENABLED_UP",
		3: "PORT_STATE_DISABLED_DOWN",
	}
	PortState_value = map[string]int32{
		"PORT_STATE_UNSPECIFIED":   0,
		"PORT_STATE_ENABLED_UP":    2,
		"PORT_STATE_DISABLED_DOWN": 3,
	}
)

func (x PortState) Enum() *PortState {
	p := new(PortState)
	*p = x
	return p
}

func (x PortState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PortState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_forwarding_forwarding_port_proto_enumTypes[2].Descriptor()
}

func (PortState) Type() protoreflect.EnumType {
	return &file_proto_forwarding_forwarding_port_proto_enumTypes[2]
}

func (x PortState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PortState.Descriptor instead.
func (PortState) EnumDescriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{2}
}

type PortSpeedBehavior int32

const (
	PortSpeedBehavior_PORT_SPEED_BEHAVIOR_UNSPECIFIED PortSpeedBehavior = 0
	PortSpeedBehavior_PORT_SPEED_BEHAVIOR_ANY_SPEED   PortSpeedBehavior = 1
	PortSpeedBehavior_PORT_SPEED_BEHAVIOR_SAME_SPEED  PortSpeedBehavior = 2
)

// Enum value maps for PortSpeedBehavior.
var (
	PortSpeedBehavior_name = map[int32]string{
		0: "PORT_SPEED_BEHAVIOR_UNSPECIFIED",
		1: "PORT_SPEED_BEHAVIOR_ANY_SPEED",
		2: "PORT_SPEED_BEHAVIOR_SAME_SPEED",
	}
	PortSpeedBehavior_value = map[string]int32{
		"PORT_SPEED_BEHAVIOR_UNSPECIFIED": 0,
		"PORT_SPEED_BEHAVIOR_ANY_SPEED":   1,
		"PORT_SPEED_BEHAVIOR_SAME_SPEED":  2,
	}
)

func (x PortSpeedBehavior) Enum() *PortSpeedBehavior {
	p := new(PortSpeedBehavior)
	*p = x
	return p
}

func (x PortSpeedBehavior) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PortSpeedBehavior) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_forwarding_forwarding_port_proto_enumTypes[3].Descriptor()
}

func (PortSpeedBehavior) Type() protoreflect.EnumType {
	return &file_proto_forwarding_forwarding_port_proto_enumTypes[3]
}

func (x PortSpeedBehavior) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PortSpeedBehavior.Descriptor instead.
func (PortSpeedBehavior) EnumDescriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{3}
}

type PortDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortType PortType `protobuf:"varint,1,opt,name=port_type,json=portType,proto3,enum=forwarding.PortType" json:"port_type,omitempty"`
	PortId   *PortId  `protobuf:"bytes,2,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	// Types that are assignable to Port:
	//
	//	*PortDesc_Cpu
	//	*PortDesc_Kernel
	//	*PortDesc_Tap
	Port isPortDesc_Port `protobuf_oneof:"port"`
}

func (x *PortDesc) Reset() {
	*x = PortDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortDesc) ProtoMessage() {}

func (x *PortDesc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortDesc.ProtoReflect.Descriptor instead.
func (*PortDesc) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{0}
}

func (x *PortDesc) GetPortType() PortType {
	if x != nil {
		return x.PortType
	}
	return PortType_PORT_TYPE_UNSPECIFIED
}

func (x *PortDesc) GetPortId() *PortId {
	if x != nil {
		return x.PortId
	}
	return nil
}

func (m *PortDesc) GetPort() isPortDesc_Port {
	if m != nil {
		return m.Port
	}
	return nil
}

func (x *PortDesc) GetCpu() *CPUPortDesc {
	if x, ok := x.GetPort().(*PortDesc_Cpu); ok {
		return x.Cpu
	}
	return nil
}

func (x *PortDesc) GetKernel() *KernelPortDesc {
	if x, ok := x.GetPort().(*PortDesc_Kernel); ok {
		return x.Kernel
	}
	return nil
}

func (x *PortDesc) GetTap() *TAPPortDesc {
	if x, ok := x.GetPort().(*PortDesc_Tap); ok {
		return x.Tap
	}
	return nil
}

type isPortDesc_Port interface {
	isPortDesc_Port()
}

type PortDesc_Cpu struct {
	Cpu *CPUPortDesc `protobuf:"bytes,3,opt,name=cpu,proto3,oneof"`
}

type PortDesc_Kernel struct {
	Kernel *KernelPortDesc `protobuf:"bytes,4,opt,name=kernel,proto3,oneof"`
}

type PortDesc_Tap struct {
	Tap *TAPPortDesc `protobuf:"bytes,5,opt,name=tap,proto3,oneof"`
}

func (*PortDesc_Cpu) isPortDesc_Port() {}

func (*PortDesc_Kernel) isPortDesc_Port() {}

func (*PortDesc_Tap) isPortDesc_Port() {}

type CPUPortDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueId        string           `protobuf:"bytes,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	QueueLength    int32            `protobuf:"varint,2,opt,name=queue_length,json=queueLength,proto3" json:"queue_length,omitempty"`
	ExportFieldIds []*PacketFieldId `protobuf:"bytes,3,rep,name=export_field_ids,json=exportFieldIds,proto3" json:"export_field_ids,omitempty"`
}

func (x *CPUPortDesc) Reset() {
	*x = CPUPortDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPUPortDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUPortDesc) ProtoMessage() {}

func (x *CPUPortDesc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUPortDesc.ProtoReflect.Descriptor instead.
func (*CPUPortDesc) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{1}
}

func (x *CPUPortDesc) GetQueueId() string {
	if x != nil {
		return x.QueueId
	}
	return ""
}

func (x *CPUPortDesc) GetQueueLength() int32 {
	if x != nil {
		return x.QueueLength
	}
	return 0
}

func (x *CPUPortDesc) GetExportFieldIds() []*PacketFieldId {
	if x != nil {
		return x.ExportFieldIds
	}
	return nil
}

type KernelPortDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceName string `protobuf:"bytes,1,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
}

func (x *KernelPortDesc) Reset() {
	*x = KernelPortDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KernelPortDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelPortDesc) ProtoMessage() {}

func (x *KernelPortDesc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelPortDesc.ProtoReflect.Descriptor instead.
func (*KernelPortDesc) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{2}
}

func (x *KernelPortDesc) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type TAPPortDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceName string `protobuf:"bytes,1,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
}

func (x *TAPPortDesc) Reset() {
	*x = TAPPortDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAPPortDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAPPortDesc) ProtoMessage() {}

func (x *TAPPortDesc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAPPortDesc.ProtoReflect.Descriptor instead.
func (*TAPPortDesc) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{3}
}

func (x *TAPPortDesc) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type PortCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port      *PortDesc  `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	ContextId *ContextId `protobuf:"bytes,2,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
}

func (x *PortCreateRequest) Reset() {
	*x = PortCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortCreateRequest) ProtoMessage() {}

func (x *PortCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortCreateRequest.ProtoReflect.Descriptor instead.
func (*PortCreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{4}
}

func (x *PortCreateRequest) GetPort() *PortDesc {
	if x != nil {
		return x.Port
	}
	return nil
}

func (x *PortCreateRequest) GetContextId() *ContextId {
	if x != nil {
		return x.ContextId
	}
	return nil
}

type PortCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectIndex *ObjectIndex `protobuf:"bytes,2,opt,name=object_index,json=objectIndex,proto3" json:"object_index,omitempty"`
}

func (x *PortCreateReply) Reset() {
	*x = PortCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortCreateReply) ProtoMessage() {}

func (x *PortCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortCreateReply.ProtoReflect.Descriptor instead.
func (*PortCreateReply) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{5}
}

func (x *PortCreateReply) GetObjectIndex() *ObjectIndex {
	if x != nil {
		return x.ObjectIndex
	}
	return nil
}

type PortUpdateDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Port:
	//
	//	*PortUpdateDesc_Cpu
	//	*PortUpdateDesc_Aggregate
	//	*PortUpdateDesc_AggregateAdd
	//	*PortUpdateDesc_AggregateDel
	//	*PortUpdateDesc_AggregateAlgo
	//	*PortUpdateDesc_Kernel
	Port isPortUpdateDesc_Port `protobuf_oneof:"port"`
}

func (x *PortUpdateDesc) Reset() {
	*x = PortUpdateDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortUpdateDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortUpdateDesc) ProtoMessage() {}

func (x *PortUpdateDesc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortUpdateDesc.ProtoReflect.Descriptor instead.
func (*PortUpdateDesc) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{6}
}

func (m *PortUpdateDesc) GetPort() isPortUpdateDesc_Port {
	if m != nil {
		return m.Port
	}
	return nil
}

func (x *PortUpdateDesc) GetCpu() *CPUPortUpdateDesc {
	if x, ok := x.GetPort().(*PortUpdateDesc_Cpu); ok {
		return x.Cpu
	}
	return nil
}

func (x *PortUpdateDesc) GetAggregate() *AggregatePortUpdateDesc {
	if x, ok := x.GetPort().(*PortUpdateDesc_Aggregate); ok {
		return x.Aggregate
	}
	return nil
}

func (x *PortUpdateDesc) GetAggregateAdd() *AggregatePortAddMemberUpdateDesc {
	if x, ok := x.GetPort().(*PortUpdateDesc_AggregateAdd); ok {
		return x.AggregateAdd
	}
	return nil
}

func (x *PortUpdateDesc) GetAggregateDel() *AggregatePortRemoveMemberUpdateDesc {
	if x, ok := x.GetPort().(*PortUpdateDesc_AggregateDel); ok {
		return x.AggregateDel
	}
	return nil
}

func (x *PortUpdateDesc) GetAggregateAlgo() *AggregatePortAlgorithmUpdateDesc {
	if x, ok := x.GetPort().(*PortUpdateDesc_AggregateAlgo); ok {
		return x.AggregateAlgo
	}
	return nil
}

func (x *PortUpdateDesc) GetKernel() *KernelPortUpdateDesc {
	if x, ok := x.GetPort().(*PortUpdateDesc_Kernel); ok {
		return x.Kernel
	}
	return nil
}

type isPortUpdateDesc_Port interface {
	isPortUpdateDesc_Port()
}

type PortUpdateDesc_Cpu struct {
	Cpu *CPUPortUpdateDesc `protobuf:"bytes,1,opt,name=cpu,proto3,oneof"`
}

type PortUpdateDesc_Aggregate struct {
	Aggregate *AggregatePortUpdateDesc `protobuf:"bytes,2,opt,name=aggregate,proto3,oneof"`
}

type PortUpdateDesc_AggregateAdd struct {
	AggregateAdd *AggregatePortAddMemberUpdateDesc `protobuf:"bytes,3,opt,name=aggregate_add,json=aggregateAdd,proto3,oneof"`
}

type PortUpdateDesc_AggregateDel struct {
	AggregateDel *AggregatePortRemoveMemberUpdateDesc `protobuf:"bytes,4,opt,name=aggregate_del,json=aggregateDel,proto3,oneof"`
}

type PortUpdateDesc_AggregateAlgo struct {
	AggregateAlgo *AggregatePortAlgorithmUpdateDesc `protobuf:"bytes,5,opt,name=aggregate_algo,json=aggregateAlgo,proto3,oneof"`
}

type PortUpdateDesc_Kernel struct {
	Kernel *KernelPortUpdateDesc `protobuf:"bytes,6,opt,name=kernel,proto3,oneof"`
}

func (*PortUpdateDesc_Cpu) isPortUpdateDesc_Port() {}

func (*PortUpdateDesc_Aggregate) isPortUpdateDesc_Port() {}

func (*PortUpdateDesc_AggregateAdd) isPortUpdateDesc_Port() {}

func (*PortUpdateDesc_AggregateDel) isPortUpdateDesc_Port() {}

func (*PortUpdateDesc_AggregateAlgo) isPortUpdateDesc_Port() {}

func (*PortUpdateDesc_Kernel) isPortUpdateDesc_Port() {}

type PortUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId    *PortId         `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	ContextId *ContextId      `protobuf:"bytes,2,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
	Update    *PortUpdateDesc `protobuf:"bytes,3,opt,name=update,proto3" json:"update,omitempty"`
}

func (x *PortUpdateRequest) Reset() {
	*x = PortUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortUpdateRequest) ProtoMessage() {}

func (x *PortUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortUpdateRequest.ProtoReflect.Descriptor instead.
func (*PortUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{7}
}

func (x *PortUpdateRequest) GetPortId() *PortId {
	if x != nil {
		return x.PortId
	}
	return nil
}

func (x *PortUpdateRequest) GetContextId() *ContextId {
	if x != nil {
		return x.ContextId
	}
	return nil
}

func (x *PortUpdateRequest) GetUpdate() *PortUpdateDesc {
	if x != nil {
		return x.Update
	}
	return nil
}

type PortUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PortUpdateReply) Reset() {
	*x = PortUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortUpdateReply) ProtoMessage() {}

func (x *PortUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortUpdateReply.ProtoReflect.Descriptor instead.
func (*PortUpdateReply) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{8}
}

type CPUPortUpdateDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs  []*ActionDesc `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs []*ActionDesc `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
}

func (x *CPUPortUpdateDesc) Reset() {
	*x = CPUPortUpdateDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPUPortUpdateDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUPortUpdateDesc) ProtoMessage() {}

func (x *CPUPortUpdateDesc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUPortUpdateDesc.ProtoReflect.Descriptor instead.
func (*CPUPortUpdateDesc) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{9}
}

func (x *CPUPortUpdateDesc) GetInputs() []*ActionDesc {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *CPUPortUpdateDesc) GetOutputs() []*ActionDesc {
	if x != nil {
		return x.Outputs
	}
	return nil
}

type KernelPortUpdateDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs  []*ActionDesc `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs []*ActionDesc `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
}

func (x *KernelPortUpdateDesc) Reset() {
	*x = KernelPortUpdateDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KernelPortUpdateDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelPortUpdateDesc) ProtoMessage() {}

func (x *KernelPortUpdateDesc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelPortUpdateDesc.ProtoReflect.Descriptor instead.
func (*KernelPortUpdateDesc) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{10}
}

func (x *KernelPortUpdateDesc) GetInputs() []*ActionDesc {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *KernelPortUpdateDesc) GetOutputs() []*ActionDesc {
	if x != nil {
		return x.Outputs
	}
	return nil
}

type AggregateSelectAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId  *PortId       `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	Actions []*ActionDesc `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *AggregateSelectAction) Reset() {
	*x = AggregateSelectAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateSelectAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateSelectAction) ProtoMessage() {}

func (x *AggregateSelectAction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateSelectAction.ProtoReflect.Descriptor instead.
func (*AggregateSelectAction) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{11}
}

func (x *AggregateSelectAction) GetPortId() *PortId {
	if x != nil {
		return x.PortId
	}
	return nil
}

func (x *AggregateSelectAction) GetActions() []*ActionDesc {
	if x != nil {
		return x.Actions
	}
	return nil
}

type AggregatePortUpdateDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortIds       []*PortId                `protobuf:"bytes,1,rep,name=port_ids,json=portIds,proto3" json:"port_ids,omitempty"`
	Hash          AggregateHashAlgorithm   `protobuf:"varint,2,opt,name=hash,proto3,enum=forwarding.AggregateHashAlgorithm" json:"hash,omitempty"`
	FieldIds      []*PacketFieldId         `protobuf:"bytes,3,rep,name=field_ids,json=fieldIds,proto3" json:"field_ids,omitempty"`
	SelectActions []*AggregateSelectAction `protobuf:"bytes,4,rep,name=select_actions,json=selectActions,proto3" json:"select_actions,omitempty"`
}

func (x *AggregatePortUpdateDesc) Reset() {
	*x = AggregatePortUpdateDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatePortUpdateDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatePortUpdateDesc) ProtoMessage() {}

func (x *AggregatePortUpdateDesc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatePortUpdateDesc.ProtoReflect.Descriptor instead.
func (*AggregatePortUpdateDesc) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{12}
}

func (x *AggregatePortUpdateDesc) GetPortIds() []*PortId {
	if x != nil {
		return x.PortIds
	}
	return nil
}

func (x *AggregatePortUpdateDesc) GetHash() AggregateHashAlgorithm {
	if x != nil {
		return x.Hash
	}
	return AggregateHashAlgorithm_AGGREGATE_HASH_ALGORITHM_UNSPECIFIED
}

func (x *AggregatePortUpdateDesc) GetFieldIds() []*PacketFieldId {
	if x != nil {
		return x.FieldIds
	}
	return nil
}

func (x *AggregatePortUpdateDesc) GetSelectActions() []*AggregateSelectAction {
	if x != nil {
		return x.SelectActions
	}
	return nil
}

type AggregatePortAddMemberUpdateDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId        *PortId       `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	SelectActions []*ActionDesc `protobuf:"bytes,2,rep,name=select_actions,json=selectActions,proto3" json:"select_actions,omitempty"`
	InstanceCount uint32        `protobuf:"varint,3,opt,name=instance_count,json=instanceCount,proto3" json:"instance_count,omitempty"`
}

func (x *AggregatePortAddMemberUpdateDesc) Reset() {
	*x = AggregatePortAddMemberUpdateDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatePortAddMemberUpdateDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatePortAddMemberUpdateDesc) ProtoMessage() {}

func (x *AggregatePortAddMemberUpdateDesc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatePortAddMemberUpdateDesc.ProtoReflect.Descriptor instead.
func (*AggregatePortAddMemberUpdateDesc) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{13}
}

func (x *AggregatePortAddMemberUpdateDesc) GetPortId() *PortId {
	if x != nil {
		return x.PortId
	}
	return nil
}

func (x *AggregatePortAddMemberUpdateDesc) GetSelectActions() []*ActionDesc {
	if x != nil {
		return x.SelectActions
	}
	return nil
}

func (x *AggregatePortAddMemberUpdateDesc) GetInstanceCount() uint32 {
	if x != nil {
		return x.InstanceCount
	}
	return 0
}

type AggregatePortRemoveMemberUpdateDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId *PortId `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
}

func (x *AggregatePortRemoveMemberUpdateDesc) Reset() {
	*x = AggregatePortRemoveMemberUpdateDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatePortRemoveMemberUpdateDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatePortRemoveMemberUpdateDesc) ProtoMessage() {}

func (x *AggregatePortRemoveMemberUpdateDesc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatePortRemoveMemberUpdateDesc.ProtoReflect.Descriptor instead.
func (*AggregatePortRemoveMemberUpdateDesc) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{14}
}

func (x *AggregatePortRemoveMemberUpdateDesc) GetPortId() *PortId {
	if x != nil {
		return x.PortId
	}
	return nil
}

type AggregatePortAlgorithmUpdateDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash     AggregateHashAlgorithm `protobuf:"varint,1,opt,name=hash,proto3,enum=forwarding.AggregateHashAlgorithm" json:"hash,omitempty"`
	FieldIds []*PacketFieldId       `protobuf:"bytes,2,rep,name=field_ids,json=fieldIds,proto3" json:"field_ids,omitempty"`
}

func (x *AggregatePortAlgorithmUpdateDesc) Reset() {
	*x = AggregatePortAlgorithmUpdateDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatePortAlgorithmUpdateDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatePortAlgorithmUpdateDesc) ProtoMessage() {}

func (x *AggregatePortAlgorithmUpdateDesc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatePortAlgorithmUpdateDesc.ProtoReflect.Descriptor instead.
func (*AggregatePortAlgorithmUpdateDesc) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{15}
}

func (x *AggregatePortAlgorithmUpdateDesc) GetHash() AggregateHashAlgorithm {
	if x != nil {
		return x.Hash
	}
	return AggregateHashAlgorithm_AGGREGATE_HASH_ALGORITHM_UNSPECIFIED
}

func (x *AggregatePortAlgorithmUpdateDesc) GetFieldIds() []*PacketFieldId {
	if x != nil {
		return x.FieldIds
	}
	return nil
}

type PortSpeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kbps     uint64            `protobuf:"varint,1,opt,name=kbps,proto3" json:"kbps,omitempty"`
	Behavior PortSpeedBehavior `protobuf:"varint,2,opt,name=behavior,proto3,enum=forwarding.PortSpeedBehavior" json:"behavior,omitempty"`
}

func (x *PortSpeed) Reset() {
	*x = PortSpeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortSpeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortSpeed) ProtoMessage() {}

func (x *PortSpeed) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortSpeed.ProtoReflect.Descriptor instead.
func (*PortSpeed) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{16}
}

func (x *PortSpeed) GetKbps() uint64 {
	if x != nil {
		return x.Kbps
	}
	return 0
}

func (x *PortSpeed) GetBehavior() PortSpeedBehavior {
	if x != nil {
		return x.Behavior
	}
	return PortSpeedBehavior_PORT_SPEED_BEHAVIOR_UNSPECIFIED
}

type PortInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperStatus  PortState  `protobuf:"varint,1,opt,name=oper_status,json=operStatus,proto3,enum=forwarding.PortState" json:"oper_status,omitempty"`
	AdminStatus PortState  `protobuf:"varint,2,opt,name=admin_status,json=adminStatus,proto3,enum=forwarding.PortState" json:"admin_status,omitempty"`
	Speed       *PortSpeed `protobuf:"bytes,3,opt,name=speed,proto3" json:"speed,omitempty"`
}

func (x *PortInfo) Reset() {
	*x = PortInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortInfo) ProtoMessage() {}

func (x *PortInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortInfo.ProtoReflect.Descriptor instead.
func (*PortInfo) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{17}
}

func (x *PortInfo) GetOperStatus() PortState {
	if x != nil {
		return x.OperStatus
	}
	return PortState_PORT_STATE_UNSPECIFIED
}

func (x *PortInfo) GetAdminStatus() PortState {
	if x != nil {
		return x.AdminStatus
	}
	return PortState_PORT_STATE_UNSPECIFIED
}

func (x *PortInfo) GetSpeed() *PortSpeed {
	if x != nil {
		return x.Speed
	}
	return nil
}

type PortStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId    *PortId    `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	ContextId *ContextId `protobuf:"bytes,2,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
	Operation *PortInfo  `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *PortStateRequest) Reset() {
	*x = PortStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortStateRequest) ProtoMessage() {}

func (x *PortStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortStateRequest.ProtoReflect.Descriptor instead.
func (*PortStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{18}
}

func (x *PortStateRequest) GetPortId() *PortId {
	if x != nil {
		return x.PortId
	}
	return nil
}

func (x *PortStateRequest) GetContextId() *ContextId {
	if x != nil {
		return x.ContextId
	}
	return nil
}

func (x *PortStateRequest) GetOperation() *PortInfo {
	if x != nil {
		return x.Operation
	}
	return nil
}

type PortStateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *PortInfo `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PortStateReply) Reset() {
	*x = PortStateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortStateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortStateReply) ProtoMessage() {}

func (x *PortStateReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_port_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortStateReply.ProtoReflect.Descriptor instead.
func (*PortStateReply) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_port_proto_rawDescGZIP(), []int{19}
}

func (x *PortStateReply) GetStatus() *PortInfo {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_proto_forwarding_forwarding_port_proto protoreflect.FileDescriptor

var file_proto_forwarding_forwarding_port_proto_rawDesc = []byte{
	0x0a, 0x26, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x2f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x1a, 0x28, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x2f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x02, 0x0a, 0x08, 0x50, 0x6f, 0x72,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x31, 0x0a, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x52, 0x06, 0x70,
	0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e,
	0x43, 0x50, 0x55, 0x50, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x48, 0x00, 0x52, 0x03, 0x63,
	0x70, 0x75, 0x12, 0x34, 0x0a, 0x06, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e,
	0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x48, 0x00,
	0x52, 0x06, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x61, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x2e, 0x54, 0x41, 0x50, 0x50, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x48, 0x00,
	0x52, 0x03, 0x74, 0x61, 0x70, 0x42, 0x06, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x90, 0x01,
	0x0a, 0x0b, 0x43, 0x50, 0x55, 0x50, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x19, 0x0a,
	0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x43, 0x0a, 0x10, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64,
	0x52, 0x0e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x73,
	0x22, 0x31, 0x0a, 0x0e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x0b, 0x54, 0x41, 0x50, 0x50, 0x6f, 0x72, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x73, 0x0a, 0x11, 0x50, 0x6f, 0x72, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x0f, 0x50, 0x6f, 0x72, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3a, 0x0a, 0x0c, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x0b, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xd0, 0x03, 0x0a, 0x0e, 0x50, 0x6f, 0x72, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x31, 0x0a, 0x03, 0x63, 0x70,
	0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x50, 0x55, 0x50, 0x6f, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x48, 0x00, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x43, 0x0a,
	0x09, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x73, 0x63, 0x48, 0x00, 0x52, 0x09, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x12, 0x53, 0x0a, 0x0d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f,
	0x61, 0x64, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x12, 0x56, 0x0a, 0x0d, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x48,
	0x00, 0x52, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x12,
	0x55, 0x0a, 0x0e, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x67,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x73, 0x63, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x67, 0x6f, 0x12, 0x3a, 0x0a, 0x06, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x48, 0x00, 0x52, 0x06, 0x6b, 0x65, 0x72, 0x6e,
	0x65, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x11, 0x50,
	0x6f, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2b, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x6f, 0x72, 0x74, 0x49, 0x64, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x2e, 0x50, 0x6f, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x52,
	0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x50, 0x6f, 0x72, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x75, 0x0a, 0x11, 0x43, 0x50,
	0x55, 0x50, 0x6f, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x2e, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12,
	0x30, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x73, 0x22, 0x78, 0x0a, 0x14, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x2e, 0x0a, 0x06, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73,
	0x63, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x73, 0x63, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0x76, 0x0a, 0x15, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x82, 0x02, 0x0a, 0x17, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x2d, 0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x6f, 0x72, 0x74, 0x49, 0x64, 0x52, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x73, 0x12, 0x36,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x66,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x36, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x49, 0x64, 0x52, 0x08, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x73, 0x12, 0x48,
	0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x20, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x2b, 0x0a,
	0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x72, 0x74,
	0x49, 0x64, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0e, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x52, 0x0a, 0x23, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x52, 0x06, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x20, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x36, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x48, 0x61,
	0x73, 0x68, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x12, 0x36, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x52,
	0x08, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x73, 0x22, 0x5a, 0x0a, 0x09, 0x50, 0x6f, 0x72,
	0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x62, 0x70, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x6b, 0x62, 0x70, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x66,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x52, 0x08, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x22, 0xa9, 0x01, 0x0a, 0x08, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x36, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6f,
	0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x2e, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65,
	0x64, 0x22, 0xa9, 0x01, 0x0a, 0x10, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x52, 0x06, 0x70, 0x6f, 0x72,
	0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3e, 0x0a,
	0x0e, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x72,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x84, 0x01,
	0x0a, 0x08, 0x50, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x50, 0x55, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x01, 0x12, 0x1c, 0x0a,
	0x18, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x47, 0x47, 0x52, 0x45,
	0x47, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4b, 0x45, 0x52, 0x4e, 0x45, 0x4c, 0x10,
	0x03, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54,
	0x41, 0x50, 0x10, 0x04, 0x2a, 0xae, 0x01, 0x0a, 0x16, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12,
	0x28, 0x0a, 0x24, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x45, 0x5f, 0x48, 0x41, 0x53,
	0x48, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x41, 0x47, 0x47,
	0x52, 0x45, 0x47, 0x41, 0x54, 0x45, 0x5f, 0x48, 0x41, 0x53, 0x48, 0x5f, 0x41, 0x4c, 0x47, 0x4f,
	0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x43, 0x52, 0x43, 0x31, 0x36, 0x10, 0x02, 0x12, 0x22, 0x0a,
	0x1e, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x45, 0x5f, 0x48, 0x41, 0x53, 0x48, 0x5f,
	0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x43, 0x52, 0x43, 0x33, 0x32, 0x10,
	0x03, 0x12, 0x22, 0x0a, 0x1e, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x45, 0x5f, 0x48,
	0x41, 0x53, 0x48, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x46, 0x4c,
	0x4f, 0x4f, 0x44, 0x10, 0x05, 0x2a, 0x60, 0x0a, 0x09, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19,
	0x0a, 0x15, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x4e, 0x41,
	0x42, 0x4c, 0x45, 0x44, 0x5f, 0x55, 0x50, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x4f, 0x52,
	0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44,
	0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x03, 0x2a, 0x7f, 0x0a, 0x11, 0x50, 0x6f, 0x72, 0x74, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x1f,
	0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x44, 0x5f, 0x42, 0x45, 0x48, 0x41, 0x56,
	0x49, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x44, 0x5f,
	0x42, 0x45, 0x48, 0x41, 0x56, 0x49, 0x4f, 0x52, 0x5f, 0x41, 0x4e, 0x59, 0x5f, 0x53, 0x50, 0x45,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x50, 0x45,
	0x45, 0x44, 0x5f, 0x42, 0x45, 0x48, 0x41, 0x56, 0x49, 0x4f, 0x52, 0x5f, 0x53, 0x41, 0x4d, 0x45,
	0x5f, 0x53, 0x50, 0x45, 0x45, 0x44, 0x10, 0x02, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2f, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_forwarding_forwarding_port_proto_rawDescOnce sync.Once
	file_proto_forwarding_forwarding_port_proto_rawDescData = file_proto_forwarding_forwarding_port_proto_rawDesc
)

func file_proto_forwarding_forwarding_port_proto_rawDescGZIP() []byte {
	file_proto_forwarding_forwarding_port_proto_rawDescOnce.Do(func() {
		file_proto_forwarding_forwarding_port_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_forwarding_forwarding_port_proto_rawDescData)
	})
	return file_proto_forwarding_forwarding_port_proto_rawDescData
}

var file_proto_forwarding_forwarding_port_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_forwarding_forwarding_port_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_proto_forwarding_forwarding_port_proto_goTypes = []interface{}{
	(PortType)(0),                               // 0: forwarding.PortType
	(AggregateHashAlgorithm)(0),                 // 1: forwarding.AggregateHashAlgorithm
	(PortState)(0),                              // 2: forwarding.PortState
	(PortSpeedBehavior)(0),                      // 3: forwarding.PortSpeedBehavior
	(*PortDesc)(nil),                            // 4: forwarding.PortDesc
	(*CPUPortDesc)(nil),                         // 5: forwarding.CPUPortDesc
	(*KernelPortDesc)(nil),                      // 6: forwarding.KernelPortDesc
	(*TAPPortDesc)(nil),                         // 7: forwarding.TAPPortDesc
	(*PortCreateRequest)(nil),                   // 8: forwarding.PortCreateRequest
	(*PortCreateReply)(nil),                     // 9: forwarding.PortCreateReply
	(*PortUpdateDesc)(nil),                      // 10: forwarding.PortUpdateDesc
	(*PortUpdateRequest)(nil),                   // 11: forwarding.PortUpdateRequest
	(*PortUpdateReply)(nil),                     // 12: forwarding.PortUpdateReply
	(*CPUPortUpdateDesc)(nil),                   // 13: forwarding.CPUPortUpdateDesc
	(*KernelPortUpdateDesc)(nil),                // 14: forwarding.KernelPortUpdateDesc
	(*AggregateSelectAction)(nil),               // 15: forwarding.AggregateSelectAction
	(*AggregatePortUpdateDesc)(nil),             // 16: forwarding.AggregatePortUpdateDesc
	(*AggregatePortAddMemberUpdateDesc)(nil),    // 17: forwarding.AggregatePortAddMemberUpdateDesc
	(*AggregatePortRemoveMemberUpdateDesc)(nil), // 18: forwarding.AggregatePortRemoveMemberUpdateDesc
	(*AggregatePortAlgorithmUpdateDesc)(nil),    // 19: forwarding.AggregatePortAlgorithmUpdateDesc
	(*PortSpeed)(nil),                           // 20: forwarding.PortSpeed
	(*PortInfo)(nil),                            // 21: forwarding.PortInfo
	(*PortStateRequest)(nil),                    // 22: forwarding.PortStateRequest
	(*PortStateReply)(nil),                      // 23: forwarding.PortStateReply
	(*PortId)(nil),                              // 24: forwarding.PortId
	(*PacketFieldId)(nil),                       // 25: forwarding.PacketFieldId
	(*ContextId)(nil),                           // 26: forwarding.ContextId
	(*ObjectIndex)(nil),                         // 27: forwarding.ObjectIndex
	(*ActionDesc)(nil),                          // 28: forwarding.ActionDesc
}
var file_proto_forwarding_forwarding_port_proto_depIdxs = []int32{
	0,  // 0: forwarding.PortDesc.port_type:type_name -> forwarding.PortType
	24, // 1: forwarding.PortDesc.port_id:type_name -> forwarding.PortId
	5,  // 2: forwarding.PortDesc.cpu:type_name -> forwarding.CPUPortDesc
	6,  // 3: forwarding.PortDesc.kernel:type_name -> forwarding.KernelPortDesc
	7,  // 4: forwarding.PortDesc.tap:type_name -> forwarding.TAPPortDesc
	25, // 5: forwarding.CPUPortDesc.export_field_ids:type_name -> forwarding.PacketFieldId
	4,  // 6: forwarding.PortCreateRequest.port:type_name -> forwarding.PortDesc
	26, // 7: forwarding.PortCreateRequest.context_id:type_name -> forwarding.ContextId
	27, // 8: forwarding.PortCreateReply.object_index:type_name -> forwarding.ObjectIndex
	13, // 9: forwarding.PortUpdateDesc.cpu:type_name -> forwarding.CPUPortUpdateDesc
	16, // 10: forwarding.PortUpdateDesc.aggregate:type_name -> forwarding.AggregatePortUpdateDesc
	17, // 11: forwarding.PortUpdateDesc.aggregate_add:type_name -> forwarding.AggregatePortAddMemberUpdateDesc
	18, // 12: forwarding.PortUpdateDesc.aggregate_del:type_name -> forwarding.AggregatePortRemoveMemberUpdateDesc
	19, // 13: forwarding.PortUpdateDesc.aggregate_algo:type_name -> forwarding.AggregatePortAlgorithmUpdateDesc
	14, // 14: forwarding.PortUpdateDesc.kernel:type_name -> forwarding.KernelPortUpdateDesc
	24, // 15: forwarding.PortUpdateRequest.port_id:type_name -> forwarding.PortId
	26, // 16: forwarding.PortUpdateRequest.context_id:type_name -> forwarding.ContextId
	10, // 17: forwarding.PortUpdateRequest.update:type_name -> forwarding.PortUpdateDesc
	28, // 18: forwarding.CPUPortUpdateDesc.inputs:type_name -> forwarding.ActionDesc
	28, // 19: forwarding.CPUPortUpdateDesc.outputs:type_name -> forwarding.ActionDesc
	28, // 20: forwarding.KernelPortUpdateDesc.inputs:type_name -> forwarding.ActionDesc
	28, // 21: forwarding.KernelPortUpdateDesc.outputs:type_name -> forwarding.ActionDesc
	24, // 22: forwarding.AggregateSelectAction.port_id:type_name -> forwarding.PortId
	28, // 23: forwarding.AggregateSelectAction.actions:type_name -> forwarding.ActionDesc
	24, // 24: forwarding.AggregatePortUpdateDesc.port_ids:type_name -> forwarding.PortId
	1,  // 25: forwarding.AggregatePortUpdateDesc.hash:type_name -> forwarding.AggregateHashAlgorithm
	25, // 26: forwarding.AggregatePortUpdateDesc.field_ids:type_name -> forwarding.PacketFieldId
	15, // 27: forwarding.AggregatePortUpdateDesc.select_actions:type_name -> forwarding.AggregateSelectAction
	24, // 28: forwarding.AggregatePortAddMemberUpdateDesc.port_id:type_name -> forwarding.PortId
	28, // 29: forwarding.AggregatePortAddMemberUpdateDesc.select_actions:type_name -> forwarding.ActionDesc
	24, // 30: forwarding.AggregatePortRemoveMemberUpdateDesc.port_id:type_name -> forwarding.PortId
	1,  // 31: forwarding.AggregatePortAlgorithmUpdateDesc.hash:type_name -> forwarding.AggregateHashAlgorithm
	25, // 32: forwarding.AggregatePortAlgorithmUpdateDesc.field_ids:type_name -> forwarding.PacketFieldId
	3,  // 33: forwarding.PortSpeed.behavior:type_name -> forwarding.PortSpeedBehavior
	2,  // 34: forwarding.PortInfo.oper_status:type_name -> forwarding.PortState
	2,  // 35: forwarding.PortInfo.admin_status:type_name -> forwarding.PortState
	20, // 36: forwarding.PortInfo.speed:type_name -> forwarding.PortSpeed
	24, // 37: forwarding.PortStateRequest.port_id:type_name -> forwarding.PortId
	26, // 38: forwarding.PortStateRequest.context_id:type_name -> forwarding.ContextId
	21, // 39: forwarding.PortStateRequest.operation:type_name -> forwarding.PortInfo
	21, // 40: forwarding.PortStateReply.status:type_name -> forwarding.PortInfo
	41, // [41:41] is the sub-list for method output_type
	41, // [41:41] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_proto_forwarding_forwarding_port_proto_init() }
func file_proto_forwarding_forwarding_port_proto_init() {
	if File_proto_forwarding_forwarding_port_proto != nil {
		return
	}
	file_proto_forwarding_forwarding_action_proto_init()
	file_proto_forwarding_forwarding_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_forwarding_forwarding_port_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPUPortDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KernelPortDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAPPortDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortUpdateDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPUPortUpdateDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KernelPortUpdateDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateSelectAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatePortUpdateDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatePortAddMemberUpdateDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatePortRemoveMemberUpdateDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatePortAlgorithmUpdateDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortSpeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_port_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortStateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_forwarding_forwarding_port_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PortDesc_Cpu)(nil),
		(*PortDesc_Kernel)(nil),
		(*PortDesc_Tap)(nil),
	}
	file_proto_forwarding_forwarding_port_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*PortUpdateDesc_Cpu)(nil),
		(*PortUpdateDesc_Aggregate)(nil),
		(*PortUpdateDesc_AggregateAdd)(nil),
		(*PortUpdateDesc_AggregateDel)(nil),
		(*PortUpdateDesc_AggregateAlgo)(nil),
		(*PortUpdateDesc_Kernel)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_forwarding_forwarding_port_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_forwarding_forwarding_port_proto_goTypes,
		DependencyIndexes: file_proto_forwarding_forwarding_port_proto_depIdxs,
		EnumInfos:         file_proto_forwarding_forwarding_port_proto_enumTypes,
		MessageInfos:      file_proto_forwarding_forwarding_port_proto_msgTypes,
	}.Build()
	File_proto_forwarding_forwarding_port_proto = out.File
	file_proto_forwarding_forwarding_port_proto_rawDesc = nil
	file_proto_forwarding_forwarding_port_proto_goTypes = nil
	file_proto_forwarding_forwarding_port_proto_depIdxs = nil
}
