// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: proto/forwarding/forwarding_common.proto

package forwarding

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PortAction int32

const (
	PortAction_PORT_ACTION_UNSPECIFIED PortAction = 0
	PortAction_PORT_ACTION_INPUT       PortAction = 1
	PortAction_PORT_ACTION_OUTPUT      PortAction = 2
	PortAction_PORT_ACTION_WRITE       PortAction = 3
)

// Enum value maps for PortAction.
var (
	PortAction_name = map[int32]string{
		0: "PORT_ACTION_UNSPECIFIED",
		1: "PORT_ACTION_INPUT",
		2: "PORT_ACTION_OUTPUT",
		3: "PORT_ACTION_WRITE",
	}
	PortAction_value = map[string]int32{
		"PORT_ACTION_UNSPECIFIED": 0,
		"PORT_ACTION_INPUT":       1,
		"PORT_ACTION_OUTPUT":      2,
		"PORT_ACTION_WRITE":       3,
	}
)

func (x PortAction) Enum() *PortAction {
	p := new(PortAction)
	*p = x
	return p
}

func (x PortAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PortAction) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_forwarding_forwarding_common_proto_enumTypes[0].Descriptor()
}

func (PortAction) Type() protoreflect.EnumType {
	return &file_proto_forwarding_forwarding_common_proto_enumTypes[0]
}

func (x PortAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PortAction.Descriptor instead.
func (PortAction) EnumDescriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{0}
}

type PacketHeaderGroup int32

const (
	PacketHeaderGroup_PACKET_HEADER_GROUP_UNSPECIFIED PacketHeaderGroup = 0
	PacketHeaderGroup_PACKET_HEADER_GROUP_NONE        PacketHeaderGroup = 1
	PacketHeaderGroup_PACKET_HEADER_GROUP_PACKET      PacketHeaderGroup = 2
	PacketHeaderGroup_PACKET_HEADER_GROUP_L2          PacketHeaderGroup = 3
	PacketHeaderGroup_PACKET_HEADER_GROUP_L3          PacketHeaderGroup = 4
	PacketHeaderGroup_PACKET_HEADER_GROUP_L4          PacketHeaderGroup = 5
	PacketHeaderGroup_PACKET_HEADER_GROUP_PAYLOAD     PacketHeaderGroup = 6
	PacketHeaderGroup_PACKET_HEADER_GROUP_COUNT       PacketHeaderGroup = 20
)

// Enum value maps for PacketHeaderGroup.
var (
	PacketHeaderGroup_name = map[int32]string{
		0:  "PACKET_HEADER_GROUP_UNSPECIFIED",
		1:  "PACKET_HEADER_GROUP_NONE",
		2:  "PACKET_HEADER_GROUP_PACKET",
		3:  "PACKET_HEADER_GROUP_L2",
		4:  "PACKET_HEADER_GROUP_L3",
		5:  "PACKET_HEADER_GROUP_L4",
		6:  "PACKET_HEADER_GROUP_PAYLOAD",
		20: "PACKET_HEADER_GROUP_COUNT",
	}
	PacketHeaderGroup_value = map[string]int32{
		"PACKET_HEADER_GROUP_UNSPECIFIED": 0,
		"PACKET_HEADER_GROUP_NONE":        1,
		"PACKET_HEADER_GROUP_PACKET":      2,
		"PACKET_HEADER_GROUP_L2":          3,
		"PACKET_HEADER_GROUP_L3":          4,
		"PACKET_HEADER_GROUP_L4":          5,
		"PACKET_HEADER_GROUP_PAYLOAD":     6,
		"PACKET_HEADER_GROUP_COUNT":       20,
	}
)

func (x PacketHeaderGroup) Enum() *PacketHeaderGroup {
	p := new(PacketHeaderGroup)
	*p = x
	return p
}

func (x PacketHeaderGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PacketHeaderGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_forwarding_forwarding_common_proto_enumTypes[1].Descriptor()
}

func (PacketHeaderGroup) Type() protoreflect.EnumType {
	return &file_proto_forwarding_forwarding_common_proto_enumTypes[1]
}

func (x PacketHeaderGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PacketHeaderGroup.Descriptor instead.
func (PacketHeaderGroup) EnumDescriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{1}
}

type PacketHeaderId int32

const (
	PacketHeaderId_PACKET_HEADER_ID_UNSPECIFIED        PacketHeaderId = 0
	PacketHeaderId_PACKET_HEADER_ID_NONE               PacketHeaderId = 1
	PacketHeaderId_PACKET_HEADER_ID_METADATA           PacketHeaderId = 2
	PacketHeaderId_PACKET_HEADER_ID_ETHERNET           PacketHeaderId = 3
	PacketHeaderId_PACKET_HEADER_ID_ETHERNET_VLAN      PacketHeaderId = 4
	PacketHeaderId_PACKET_HEADER_ID_ETHERNET_1Q        PacketHeaderId = 5
	PacketHeaderId_PACKET_HEADER_ID_IP4                PacketHeaderId = 6
	PacketHeaderId_PACKET_HEADER_ID_IP6                PacketHeaderId = 7
	PacketHeaderId_PACKET_HEADER_ID_GRE                PacketHeaderId = 8
	PacketHeaderId_PACKET_HEADER_ID_TCP                PacketHeaderId = 9
	PacketHeaderId_PACKET_HEADER_ID_UDP                PacketHeaderId = 10
	PacketHeaderId_PACKET_HEADER_ID_ARP                PacketHeaderId = 11
	PacketHeaderId_PACKET_HEADER_ID_ICMP4              PacketHeaderId = 12
	PacketHeaderId_PACKET_HEADER_ID_OPAQUE             PacketHeaderId = 13
	PacketHeaderId_PACKET_HEADER_ID_ICMP6              PacketHeaderId = 14
	PacketHeaderId_PACKET_HEADER_ID_TUNNEL_6TO4_AUTO   PacketHeaderId = 15
	PacketHeaderId_PACKET_HEADER_ID_TUNNEL_6TO4_SECURE PacketHeaderId = 16
	PacketHeaderId_PACKET_HEADER_ID_IP                 PacketHeaderId = 19
	PacketHeaderId_PACKET_HEADER_ID_COUNT              PacketHeaderId = 1000
)

// Enum value maps for PacketHeaderId.
var (
	PacketHeaderId_name = map[int32]string{
		0:    "PACKET_HEADER_ID_UNSPECIFIED",
		1:    "PACKET_HEADER_ID_NONE",
		2:    "PACKET_HEADER_ID_METADATA",
		3:    "PACKET_HEADER_ID_ETHERNET",
		4:    "PACKET_HEADER_ID_ETHERNET_VLAN",
		5:    "PACKET_HEADER_ID_ETHERNET_1Q",
		6:    "PACKET_HEADER_ID_IP4",
		7:    "PACKET_HEADER_ID_IP6",
		8:    "PACKET_HEADER_ID_GRE",
		9:    "PACKET_HEADER_ID_TCP",
		10:   "PACKET_HEADER_ID_UDP",
		11:   "PACKET_HEADER_ID_ARP",
		12:   "PACKET_HEADER_ID_ICMP4",
		13:   "PACKET_HEADER_ID_OPAQUE",
		14:   "PACKET_HEADER_ID_ICMP6",
		15:   "PACKET_HEADER_ID_TUNNEL_6TO4_AUTO",
		16:   "PACKET_HEADER_ID_TUNNEL_6TO4_SECURE",
		19:   "PACKET_HEADER_ID_IP",
		1000: "PACKET_HEADER_ID_COUNT",
	}
	PacketHeaderId_value = map[string]int32{
		"PACKET_HEADER_ID_UNSPECIFIED":        0,
		"PACKET_HEADER_ID_NONE":               1,
		"PACKET_HEADER_ID_METADATA":           2,
		"PACKET_HEADER_ID_ETHERNET":           3,
		"PACKET_HEADER_ID_ETHERNET_VLAN":      4,
		"PACKET_HEADER_ID_ETHERNET_1Q":        5,
		"PACKET_HEADER_ID_IP4":                6,
		"PACKET_HEADER_ID_IP6":                7,
		"PACKET_HEADER_ID_GRE":                8,
		"PACKET_HEADER_ID_TCP":                9,
		"PACKET_HEADER_ID_UDP":                10,
		"PACKET_HEADER_ID_ARP":                11,
		"PACKET_HEADER_ID_ICMP4":              12,
		"PACKET_HEADER_ID_OPAQUE":             13,
		"PACKET_HEADER_ID_ICMP6":              14,
		"PACKET_HEADER_ID_TUNNEL_6TO4_AUTO":   15,
		"PACKET_HEADER_ID_TUNNEL_6TO4_SECURE": 16,
		"PACKET_HEADER_ID_IP":                 19,
		"PACKET_HEADER_ID_COUNT":              1000,
	}
)

func (x PacketHeaderId) Enum() *PacketHeaderId {
	p := new(PacketHeaderId)
	*p = x
	return p
}

func (x PacketHeaderId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PacketHeaderId) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_forwarding_forwarding_common_proto_enumTypes[2].Descriptor()
}

func (PacketHeaderId) Type() protoreflect.EnumType {
	return &file_proto_forwarding_forwarding_common_proto_enumTypes[2]
}

func (x PacketHeaderId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PacketHeaderId.Descriptor instead.
func (PacketHeaderId) EnumDescriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{2}
}

type PacketFieldNum int32

const (
	PacketFieldNum_PACKET_FIELD_NUM_UNSPECIFIED         PacketFieldNum = 0
	PacketFieldNum_PACKET_FIELD_NUM_NONE                PacketFieldNum = 1
	PacketFieldNum_PACKET_FIELD_NUM_ETHER_MAC_SRC       PacketFieldNum = 2
	PacketFieldNum_PACKET_FIELD_NUM_ETHER_MAC_DST       PacketFieldNum = 3
	PacketFieldNum_PACKET_FIELD_NUM_ETHER_TYPE          PacketFieldNum = 4
	PacketFieldNum_PACKET_FIELD_NUM_VLAN_TAG            PacketFieldNum = 5
	PacketFieldNum_PACKET_FIELD_NUM_VLAN_PRIORITY       PacketFieldNum = 6
	PacketFieldNum_PACKET_FIELD_NUM_IP_VERSION          PacketFieldNum = 7
	PacketFieldNum_PACKET_FIELD_NUM_IP_ADDR_SRC         PacketFieldNum = 8
	PacketFieldNum_PACKET_FIELD_NUM_IP_ADDR_DST         PacketFieldNum = 9
	PacketFieldNum_PACKET_FIELD_NUM_IP_HOP              PacketFieldNum = 10
	PacketFieldNum_PACKET_FIELD_NUM_IP_PROTO            PacketFieldNum = 11
	PacketFieldNum_PACKET_FIELD_NUM_IP_QOS              PacketFieldNum = 12
	PacketFieldNum_PACKET_FIELD_NUM_IP6_FLOW            PacketFieldNum = 13
	PacketFieldNum_PACKET_FIELD_NUM_PACKET_PORT_INPUT   PacketFieldNum = 14
	PacketFieldNum_PACKET_FIELD_NUM_PACKET_PORT_OUTPUT  PacketFieldNum = 15
	PacketFieldNum_PACKET_FIELD_NUM_PACKET_LENGTH       PacketFieldNum = 16
	PacketFieldNum_PACKET_FIELD_NUM_ICMP_TYPE           PacketFieldNum = 17
	PacketFieldNum_PACKET_FIELD_NUM_ICMP_CODE           PacketFieldNum = 18
	PacketFieldNum_PACKET_FIELD_NUM_L4_PORT_SRC         PacketFieldNum = 19
	PacketFieldNum_PACKET_FIELD_NUM_L4_PORT_DST         PacketFieldNum = 20
	PacketFieldNum_PACKET_FIELD_NUM_TCP_FLAGS           PacketFieldNum = 21
	PacketFieldNum_PACKET_FIELD_NUM_ARP_TPA             PacketFieldNum = 22
	PacketFieldNum_PACKET_FIELD_NUM_GRE_KEY             PacketFieldNum = 23
	PacketFieldNum_PACKET_FIELD_NUM_GRE_SEQUENCE        PacketFieldNum = 24
	PacketFieldNum_PACKET_FIELD_NUM_PACKET_VRF          PacketFieldNum = 25
	PacketFieldNum_PACKET_FIELD_NUM_ICMP6_ND_TARGET     PacketFieldNum = 26
	PacketFieldNum_PACKET_FIELD_NUM_ICMP6_ND_SLL        PacketFieldNum = 27
	PacketFieldNum_PACKET_FIELD_NUM_ICMP6_ND_TLL        PacketFieldNum = 28
	PacketFieldNum_PACKET_FIELD_NUM_PACKET_ATTRIBUTE_32 PacketFieldNum = 34
	PacketFieldNum_PACKET_FIELD_NUM_PACKET_ATTRIBUTE_16 PacketFieldNum = 46
	PacketFieldNum_PACKET_FIELD_NUM_PACKET_ATTRIBUTE_8  PacketFieldNum = 49
	PacketFieldNum_PACKET_FIELD_NUM_PACKET_ATTRIBUTE_24 PacketFieldNum = 50
	PacketFieldNum_PACKET_FIELD_NUM_ARP_TMAC            PacketFieldNum = 52
	PacketFieldNum_PACKET_FIELD_NUM_ARP_SMAC            PacketFieldNum = 53
	PacketFieldNum_PACKET_FIELD_NUM_ARP_SPA             PacketFieldNum = 54
	PacketFieldNum_PACKET_FIELD_NUM_NEXT_HOP_IP         PacketFieldNum = 56
	PacketFieldNum_PACKET_FIELD_NUM_COUNT               PacketFieldNum = 1000
)

// Enum value maps for PacketFieldNum.
var (
	PacketFieldNum_name = map[int32]string{
		0:    "PACKET_FIELD_NUM_UNSPECIFIED",
		1:    "PACKET_FIELD_NUM_NONE",
		2:    "PACKET_FIELD_NUM_ETHER_MAC_SRC",
		3:    "PACKET_FIELD_NUM_ETHER_MAC_DST",
		4:    "PACKET_FIELD_NUM_ETHER_TYPE",
		5:    "PACKET_FIELD_NUM_VLAN_TAG",
		6:    "PACKET_FIELD_NUM_VLAN_PRIORITY",
		7:    "PACKET_FIELD_NUM_IP_VERSION",
		8:    "PACKET_FIELD_NUM_IP_ADDR_SRC",
		9:    "PACKET_FIELD_NUM_IP_ADDR_DST",
		10:   "PACKET_FIELD_NUM_IP_HOP",
		11:   "PACKET_FIELD_NUM_IP_PROTO",
		12:   "PACKET_FIELD_NUM_IP_QOS",
		13:   "PACKET_FIELD_NUM_IP6_FLOW",
		14:   "PACKET_FIELD_NUM_PACKET_PORT_INPUT",
		15:   "PACKET_FIELD_NUM_PACKET_PORT_OUTPUT",
		16:   "PACKET_FIELD_NUM_PACKET_LENGTH",
		17:   "PACKET_FIELD_NUM_ICMP_TYPE",
		18:   "PACKET_FIELD_NUM_ICMP_CODE",
		19:   "PACKET_FIELD_NUM_L4_PORT_SRC",
		20:   "PACKET_FIELD_NUM_L4_PORT_DST",
		21:   "PACKET_FIELD_NUM_TCP_FLAGS",
		22:   "PACKET_FIELD_NUM_ARP_TPA",
		23:   "PACKET_FIELD_NUM_GRE_KEY",
		24:   "PACKET_FIELD_NUM_GRE_SEQUENCE",
		25:   "PACKET_FIELD_NUM_PACKET_VRF",
		26:   "PACKET_FIELD_NUM_ICMP6_ND_TARGET",
		27:   "PACKET_FIELD_NUM_ICMP6_ND_SLL",
		28:   "PACKET_FIELD_NUM_ICMP6_ND_TLL",
		34:   "PACKET_FIELD_NUM_PACKET_ATTRIBUTE_32",
		46:   "PACKET_FIELD_NUM_PACKET_ATTRIBUTE_16",
		49:   "PACKET_FIELD_NUM_PACKET_ATTRIBUTE_8",
		50:   "PACKET_FIELD_NUM_PACKET_ATTRIBUTE_24",
		52:   "PACKET_FIELD_NUM_ARP_TMAC",
		53:   "PACKET_FIELD_NUM_ARP_SMAC",
		54:   "PACKET_FIELD_NUM_ARP_SPA",
		56:   "PACKET_FIELD_NUM_NEXT_HOP_IP",
		1000: "PACKET_FIELD_NUM_COUNT",
	}
	PacketFieldNum_value = map[string]int32{
		"PACKET_FIELD_NUM_UNSPECIFIED":         0,
		"PACKET_FIELD_NUM_NONE":                1,
		"PACKET_FIELD_NUM_ETHER_MAC_SRC":       2,
		"PACKET_FIELD_NUM_ETHER_MAC_DST":       3,
		"PACKET_FIELD_NUM_ETHER_TYPE":          4,
		"PACKET_FIELD_NUM_VLAN_TAG":            5,
		"PACKET_FIELD_NUM_VLAN_PRIORITY":       6,
		"PACKET_FIELD_NUM_IP_VERSION":          7,
		"PACKET_FIELD_NUM_IP_ADDR_SRC":         8,
		"PACKET_FIELD_NUM_IP_ADDR_DST":         9,
		"PACKET_FIELD_NUM_IP_HOP":              10,
		"PACKET_FIELD_NUM_IP_PROTO":            11,
		"PACKET_FIELD_NUM_IP_QOS":              12,
		"PACKET_FIELD_NUM_IP6_FLOW":            13,
		"PACKET_FIELD_NUM_PACKET_PORT_INPUT":   14,
		"PACKET_FIELD_NUM_PACKET_PORT_OUTPUT":  15,
		"PACKET_FIELD_NUM_PACKET_LENGTH":       16,
		"PACKET_FIELD_NUM_ICMP_TYPE":           17,
		"PACKET_FIELD_NUM_ICMP_CODE":           18,
		"PACKET_FIELD_NUM_L4_PORT_SRC":         19,
		"PACKET_FIELD_NUM_L4_PORT_DST":         20,
		"PACKET_FIELD_NUM_TCP_FLAGS":           21,
		"PACKET_FIELD_NUM_ARP_TPA":             22,
		"PACKET_FIELD_NUM_GRE_KEY":             23,
		"PACKET_FIELD_NUM_GRE_SEQUENCE":        24,
		"PACKET_FIELD_NUM_PACKET_VRF":          25,
		"PACKET_FIELD_NUM_ICMP6_ND_TARGET":     26,
		"PACKET_FIELD_NUM_ICMP6_ND_SLL":        27,
		"PACKET_FIELD_NUM_ICMP6_ND_TLL":        28,
		"PACKET_FIELD_NUM_PACKET_ATTRIBUTE_32": 34,
		"PACKET_FIELD_NUM_PACKET_ATTRIBUTE_16": 46,
		"PACKET_FIELD_NUM_PACKET_ATTRIBUTE_8":  49,
		"PACKET_FIELD_NUM_PACKET_ATTRIBUTE_24": 50,
		"PACKET_FIELD_NUM_ARP_TMAC":            52,
		"PACKET_FIELD_NUM_ARP_SMAC":            53,
		"PACKET_FIELD_NUM_ARP_SPA":             54,
		"PACKET_FIELD_NUM_NEXT_HOP_IP":         56,
		"PACKET_FIELD_NUM_COUNT":               1000,
	}
)

func (x PacketFieldNum) Enum() *PacketFieldNum {
	p := new(PacketFieldNum)
	*p = x
	return p
}

func (x PacketFieldNum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PacketFieldNum) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_forwarding_forwarding_common_proto_enumTypes[3].Descriptor()
}

func (PacketFieldNum) Type() protoreflect.EnumType {
	return &file_proto_forwarding_forwarding_common_proto_enumTypes[3]
}

func (x PacketFieldNum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PacketFieldNum.Descriptor instead.
func (PacketFieldNum) EnumDescriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{3}
}

type CounterId int32

const (
	CounterId_COUNTER_ID_UNSPECIFIED           CounterId = 0
	CounterId_COUNTER_ID_RX_PACKETS            CounterId = 1
	CounterId_COUNTER_ID_RX_OCTETS             CounterId = 2
	CounterId_COUNTER_ID_RX_DROP_PACKETS       CounterId = 3
	CounterId_COUNTER_ID_RX_DROP_OCTETS        CounterId = 4
	CounterId_COUNTER_ID_RX_ERROR_PACKETS      CounterId = 5
	CounterId_COUNTER_ID_RX_ERROR_OCTETS       CounterId = 6
	CounterId_COUNTER_ID_TX_PACKETS            CounterId = 7
	CounterId_COUNTER_ID_TX_OCTETS             CounterId = 8
	CounterId_COUNTER_ID_TX_DROP_PACKETS       CounterId = 9
	CounterId_COUNTER_ID_TX_DROP_OCTETS        CounterId = 10
	CounterId_COUNTER_ID_TX_ERROR_PACKETS      CounterId = 11
	CounterId_COUNTER_ID_TX_ERROR_OCTETS       CounterId = 12
	CounterId_COUNTER_ID_RATELIMIT_PACKETS     CounterId = 13
	CounterId_COUNTER_ID_RATELIMIT_OCTETS      CounterId = 14
	CounterId_COUNTER_ID_DROP_PACKETS          CounterId = 15
	CounterId_COUNTER_ID_DROP_OCTETS           CounterId = 16
	CounterId_COUNTER_ID_ERROR_PACKETS         CounterId = 17
	CounterId_COUNTER_ID_ERROR_OCTETS          CounterId = 18
	CounterId_COUNTER_ID_RX_BAD_PACKETS        CounterId = 19
	CounterId_COUNTER_ID_RX_BAD_OCTETS         CounterId = 20
	CounterId_COUNTER_ID_RX_ADMIN_DROP_PACKETS CounterId = 21
	CounterId_COUNTER_ID_RX_ADMIN_DROP_OCTETS  CounterId = 22
	CounterId_COUNTER_ID_TX_ADMIN_DROP_PACKETS CounterId = 23
	CounterId_COUNTER_ID_TX_ADMIN_DROP_OCTETS  CounterId = 24
	CounterId_COUNTER_ID_MIRROR_PACKETS        CounterId = 25
	CounterId_COUNTER_ID_MIRROR_OCTETS         CounterId = 26
	CounterId_COUNTER_ID_MIRROR_ERROR_PACKETS  CounterId = 27
	CounterId_COUNTER_ID_MIRROR_ERROR_OCTETS   CounterId = 28
	CounterId_COUNTER_ID_ENCAP_ERROR_PACKETS   CounterId = 29
	CounterId_COUNTER_ID_ENCAP_ERROR_OCTETS    CounterId = 30
	CounterId_COUNTER_ID_DECAP_ERROR_PACKETS   CounterId = 31
	CounterId_COUNTER_ID_DECAP_ERROR_OCTETS    CounterId = 32
	CounterId_COUNTER_ID_FLOW_COUNTER_OCTETS   CounterId = 33
	CounterId_COUNTER_ID_FLOW_COUNTER_PACKETS  CounterId = 34
	CounterId_COUNTER_ID_RX_DEBUG_PACKETS      CounterId = 35
	CounterId_COUNTER_ID_RX_DEBUG_OCTETS       CounterId = 36
	CounterId_COUNTER_ID_MAX                   CounterId = 255
)

// Enum value maps for CounterId.
var (
	CounterId_name = map[int32]string{
		0:   "COUNTER_ID_UNSPECIFIED",
		1:   "COUNTER_ID_RX_PACKETS",
		2:   "COUNTER_ID_RX_OCTETS",
		3:   "COUNTER_ID_RX_DROP_PACKETS",
		4:   "COUNTER_ID_RX_DROP_OCTETS",
		5:   "COUNTER_ID_RX_ERROR_PACKETS",
		6:   "COUNTER_ID_RX_ERROR_OCTETS",
		7:   "COUNTER_ID_TX_PACKETS",
		8:   "COUNTER_ID_TX_OCTETS",
		9:   "COUNTER_ID_TX_DROP_PACKETS",
		10:  "COUNTER_ID_TX_DROP_OCTETS",
		11:  "COUNTER_ID_TX_ERROR_PACKETS",
		12:  "COUNTER_ID_TX_ERROR_OCTETS",
		13:  "COUNTER_ID_RATELIMIT_PACKETS",
		14:  "COUNTER_ID_RATELIMIT_OCTETS",
		15:  "COUNTER_ID_DROP_PACKETS",
		16:  "COUNTER_ID_DROP_OCTETS",
		17:  "COUNTER_ID_ERROR_PACKETS",
		18:  "COUNTER_ID_ERROR_OCTETS",
		19:  "COUNTER_ID_RX_BAD_PACKETS",
		20:  "COUNTER_ID_RX_BAD_OCTETS",
		21:  "COUNTER_ID_RX_ADMIN_DROP_PACKETS",
		22:  "COUNTER_ID_RX_ADMIN_DROP_OCTETS",
		23:  "COUNTER_ID_TX_ADMIN_DROP_PACKETS",
		24:  "COUNTER_ID_TX_ADMIN_DROP_OCTETS",
		25:  "COUNTER_ID_MIRROR_PACKETS",
		26:  "COUNTER_ID_MIRROR_OCTETS",
		27:  "COUNTER_ID_MIRROR_ERROR_PACKETS",
		28:  "COUNTER_ID_MIRROR_ERROR_OCTETS",
		29:  "COUNTER_ID_ENCAP_ERROR_PACKETS",
		30:  "COUNTER_ID_ENCAP_ERROR_OCTETS",
		31:  "COUNTER_ID_DECAP_ERROR_PACKETS",
		32:  "COUNTER_ID_DECAP_ERROR_OCTETS",
		33:  "COUNTER_ID_FLOW_COUNTER_OCTETS",
		34:  "COUNTER_ID_FLOW_COUNTER_PACKETS",
		35:  "COUNTER_ID_RX_DEBUG_PACKETS",
		36:  "COUNTER_ID_RX_DEBUG_OCTETS",
		255: "COUNTER_ID_MAX",
	}
	CounterId_value = map[string]int32{
		"COUNTER_ID_UNSPECIFIED":           0,
		"COUNTER_ID_RX_PACKETS":            1,
		"COUNTER_ID_RX_OCTETS":             2,
		"COUNTER_ID_RX_DROP_PACKETS":       3,
		"COUNTER_ID_RX_DROP_OCTETS":        4,
		"COUNTER_ID_RX_ERROR_PACKETS":      5,
		"COUNTER_ID_RX_ERROR_OCTETS":       6,
		"COUNTER_ID_TX_PACKETS":            7,
		"COUNTER_ID_TX_OCTETS":             8,
		"COUNTER_ID_TX_DROP_PACKETS":       9,
		"COUNTER_ID_TX_DROP_OCTETS":        10,
		"COUNTER_ID_TX_ERROR_PACKETS":      11,
		"COUNTER_ID_TX_ERROR_OCTETS":       12,
		"COUNTER_ID_RATELIMIT_PACKETS":     13,
		"COUNTER_ID_RATELIMIT_OCTETS":      14,
		"COUNTER_ID_DROP_PACKETS":          15,
		"COUNTER_ID_DROP_OCTETS":           16,
		"COUNTER_ID_ERROR_PACKETS":         17,
		"COUNTER_ID_ERROR_OCTETS":          18,
		"COUNTER_ID_RX_BAD_PACKETS":        19,
		"COUNTER_ID_RX_BAD_OCTETS":         20,
		"COUNTER_ID_RX_ADMIN_DROP_PACKETS": 21,
		"COUNTER_ID_RX_ADMIN_DROP_OCTETS":  22,
		"COUNTER_ID_TX_ADMIN_DROP_PACKETS": 23,
		"COUNTER_ID_TX_ADMIN_DROP_OCTETS":  24,
		"COUNTER_ID_MIRROR_PACKETS":        25,
		"COUNTER_ID_MIRROR_OCTETS":         26,
		"COUNTER_ID_MIRROR_ERROR_PACKETS":  27,
		"COUNTER_ID_MIRROR_ERROR_OCTETS":   28,
		"COUNTER_ID_ENCAP_ERROR_PACKETS":   29,
		"COUNTER_ID_ENCAP_ERROR_OCTETS":    30,
		"COUNTER_ID_DECAP_ERROR_PACKETS":   31,
		"COUNTER_ID_DECAP_ERROR_OCTETS":    32,
		"COUNTER_ID_FLOW_COUNTER_OCTETS":   33,
		"COUNTER_ID_FLOW_COUNTER_PACKETS":  34,
		"COUNTER_ID_RX_DEBUG_PACKETS":      35,
		"COUNTER_ID_RX_DEBUG_OCTETS":       36,
		"COUNTER_ID_MAX":                   255,
	}
)

func (x CounterId) Enum() *CounterId {
	p := new(CounterId)
	*p = x
	return p
}

func (x CounterId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CounterId) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_forwarding_forwarding_common_proto_enumTypes[4].Descriptor()
}

func (CounterId) Type() protoreflect.EnumType {
	return &file_proto_forwarding_forwarding_common_proto_enumTypes[4]
}

func (x CounterId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CounterId.Descriptor instead.
func (CounterId) EnumDescriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{4}
}

type ContextUpdateRequest_Operation int32

const (
	ContextUpdateRequest_OPERATION_UNSPECIFIED                 ContextUpdateRequest_Operation = 0
	ContextUpdateRequest_OPERATION_UPDATE_PACKET_ADDRESS       ContextUpdateRequest_Operation = 1
	ContextUpdateRequest_OPERATION_UPDATE_NOTIFICATION_ADDRESS ContextUpdateRequest_Operation = 2
)

// Enum value maps for ContextUpdateRequest_Operation.
var (
	ContextUpdateRequest_Operation_name = map[int32]string{
		0: "OPERATION_UNSPECIFIED",
		1: "OPERATION_UPDATE_PACKET_ADDRESS",
		2: "OPERATION_UPDATE_NOTIFICATION_ADDRESS",
	}
	ContextUpdateRequest_Operation_value = map[string]int32{
		"OPERATION_UNSPECIFIED":                 0,
		"OPERATION_UPDATE_PACKET_ADDRESS":       1,
		"OPERATION_UPDATE_NOTIFICATION_ADDRESS": 2,
	}
)

func (x ContextUpdateRequest_Operation) Enum() *ContextUpdateRequest_Operation {
	p := new(ContextUpdateRequest_Operation)
	*p = x
	return p
}

func (x ContextUpdateRequest_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContextUpdateRequest_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_forwarding_forwarding_common_proto_enumTypes[5].Descriptor()
}

func (ContextUpdateRequest_Operation) Type() protoreflect.EnumType {
	return &file_proto_forwarding_forwarding_common_proto_enumTypes[5]
}

func (x ContextUpdateRequest_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContextUpdateRequest_Operation.Descriptor instead.
func (ContextUpdateRequest_Operation) EnumDescriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{21, 0}
}

type ContextId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ContextId) Reset() {
	*x = ContextId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextId) ProtoMessage() {}

func (x *ContextId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextId.ProtoReflect.Descriptor instead.
func (*ContextId) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{0}
}

func (x *ContextId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Counter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    CounterId `protobuf:"varint,1,opt,name=id,proto3,enum=forwarding.CounterId" json:"id,omitempty"`
	Value uint64    `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Counter) Reset() {
	*x = Counter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Counter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Counter) ProtoMessage() {}

func (x *Counter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Counter.ProtoReflect.Descriptor instead.
func (*Counter) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{1}
}

func (x *Counter) GetId() CounterId {
	if x != nil {
		return x.Id
	}
	return CounterId_COUNTER_ID_UNSPECIFIED
}

func (x *Counter) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ObjectId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ObjectId) Reset() {
	*x = ObjectId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectId) ProtoMessage() {}

func (x *ObjectId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectId.ProtoReflect.Descriptor instead.
func (*ObjectId) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{2}
}

func (x *ObjectId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ObjectIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index uint64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *ObjectIndex) Reset() {
	*x = ObjectIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectIndex) ProtoMessage() {}

func (x *ObjectIndex) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectIndex.ProtoReflect.Descriptor instead.
func (*ObjectIndex) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{3}
}

func (x *ObjectIndex) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type SetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId *ObjectId `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *SetId) Reset() {
	*x = SetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetId) ProtoMessage() {}

func (x *SetId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetId.ProtoReflect.Descriptor instead.
func (*SetId) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{4}
}

func (x *SetId) GetObjectId() *ObjectId {
	if x != nil {
		return x.ObjectId
	}
	return nil
}

type PortId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId *ObjectId `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *PortId) Reset() {
	*x = PortId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortId) ProtoMessage() {}

func (x *PortId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortId.ProtoReflect.Descriptor instead.
func (*PortId) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{5}
}

func (x *PortId) GetObjectId() *ObjectId {
	if x != nil {
		return x.ObjectId
	}
	return nil
}

type TableId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId *ObjectId `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *TableId) Reset() {
	*x = TableId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableId) ProtoMessage() {}

func (x *TableId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableId.ProtoReflect.Descriptor instead.
func (*TableId) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{6}
}

func (x *TableId) GetObjectId() *ObjectId {
	if x != nil {
		return x.ObjectId
	}
	return nil
}

type PacketBytes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeaderGroup PacketHeaderGroup `protobuf:"varint,1,opt,name=header_group,json=headerGroup,proto3,enum=forwarding.PacketHeaderGroup" json:"header_group,omitempty"`
	Instance    uint32            `protobuf:"varint,2,opt,name=instance,proto3" json:"instance,omitempty"`
	Offset      uint32            `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Size        uint32            `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *PacketBytes) Reset() {
	*x = PacketBytes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketBytes) ProtoMessage() {}

func (x *PacketBytes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketBytes.ProtoReflect.Descriptor instead.
func (*PacketBytes) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{7}
}

func (x *PacketBytes) GetHeaderGroup() PacketHeaderGroup {
	if x != nil {
		return x.HeaderGroup
	}
	return PacketHeaderGroup_PACKET_HEADER_GROUP_UNSPECIFIED
}

func (x *PacketBytes) GetInstance() uint32 {
	if x != nil {
		return x.Instance
	}
	return 0
}

func (x *PacketBytes) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PacketBytes) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type PacketField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldNum PacketFieldNum `protobuf:"varint,1,opt,name=field_num,json=fieldNum,proto3,enum=forwarding.PacketFieldNum" json:"field_num,omitempty"`
	Instance uint32         `protobuf:"varint,2,opt,name=instance,proto3" json:"instance,omitempty"`
}

func (x *PacketField) Reset() {
	*x = PacketField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketField) ProtoMessage() {}

func (x *PacketField) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketField.ProtoReflect.Descriptor instead.
func (*PacketField) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{8}
}

func (x *PacketField) GetFieldNum() PacketFieldNum {
	if x != nil {
		return x.FieldNum
	}
	return PacketFieldNum_PACKET_FIELD_NUM_UNSPECIFIED
}

func (x *PacketField) GetInstance() uint32 {
	if x != nil {
		return x.Instance
	}
	return 0
}

type PacketFieldId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field *PacketField `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Bytes *PacketBytes `protobuf:"bytes,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *PacketFieldId) Reset() {
	*x = PacketFieldId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketFieldId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketFieldId) ProtoMessage() {}

func (x *PacketFieldId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketFieldId.ProtoReflect.Descriptor instead.
func (*PacketFieldId) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{9}
}

func (x *PacketFieldId) GetField() *PacketField {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *PacketFieldId) GetBytes() *PacketBytes {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type PacketFieldBytes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldId *PacketFieldId `protobuf:"bytes,1,opt,name=field_id,json=fieldId,proto3" json:"field_id,omitempty"`
	Bytes   []byte         `protobuf:"bytes,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *PacketFieldBytes) Reset() {
	*x = PacketFieldBytes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketFieldBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketFieldBytes) ProtoMessage() {}

func (x *PacketFieldBytes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketFieldBytes.ProtoReflect.Descriptor instead.
func (*PacketFieldBytes) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{10}
}

func (x *PacketFieldBytes) GetFieldId() *PacketFieldId {
	if x != nil {
		return x.FieldId
	}
	return nil
}

func (x *PacketFieldBytes) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type PacketFieldMaskedBytes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldId *PacketFieldId `protobuf:"bytes,1,opt,name=field_id,json=fieldId,proto3" json:"field_id,omitempty"`
	Bytes   []byte         `protobuf:"bytes,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Masks   []byte         `protobuf:"bytes,3,opt,name=masks,proto3" json:"masks,omitempty"`
}

func (x *PacketFieldMaskedBytes) Reset() {
	*x = PacketFieldMaskedBytes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketFieldMaskedBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketFieldMaskedBytes) ProtoMessage() {}

func (x *PacketFieldMaskedBytes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketFieldMaskedBytes.ProtoReflect.Descriptor instead.
func (*PacketFieldMaskedBytes) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{11}
}

func (x *PacketFieldMaskedBytes) GetFieldId() *PacketFieldId {
	if x != nil {
		return x.FieldId
	}
	return nil
}

func (x *PacketFieldMaskedBytes) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *PacketFieldMaskedBytes) GetMasks() []byte {
	if x != nil {
		return x.Masks
	}
	return nil
}

type PacketFieldSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldId *PacketFieldId `protobuf:"bytes,1,opt,name=field_id,json=fieldId,proto3" json:"field_id,omitempty"`
	SetId   *SetId         `protobuf:"bytes,2,opt,name=set_id,json=setId,proto3" json:"set_id,omitempty"`
}

func (x *PacketFieldSet) Reset() {
	*x = PacketFieldSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketFieldSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketFieldSet) ProtoMessage() {}

func (x *PacketFieldSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketFieldSet.ProtoReflect.Descriptor instead.
func (*PacketFieldSet) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{12}
}

func (x *PacketFieldSet) GetFieldId() *PacketFieldId {
	if x != nil {
		return x.FieldId
	}
	return nil
}

func (x *PacketFieldSet) GetSetId() *SetId {
	if x != nil {
		return x.SetId
	}
	return nil
}

type ObjectCountersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId  *ObjectId  `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	ContextId *ContextId `protobuf:"bytes,2,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
}

func (x *ObjectCountersRequest) Reset() {
	*x = ObjectCountersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectCountersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectCountersRequest) ProtoMessage() {}

func (x *ObjectCountersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectCountersRequest.ProtoReflect.Descriptor instead.
func (*ObjectCountersRequest) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{13}
}

func (x *ObjectCountersRequest) GetObjectId() *ObjectId {
	if x != nil {
		return x.ObjectId
	}
	return nil
}

func (x *ObjectCountersRequest) GetContextId() *ContextId {
	if x != nil {
		return x.ContextId
	}
	return nil
}

type ObjectCountersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Counters []*Counter `protobuf:"bytes,1,rep,name=counters,proto3" json:"counters,omitempty"`
}

func (x *ObjectCountersReply) Reset() {
	*x = ObjectCountersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectCountersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectCountersReply) ProtoMessage() {}

func (x *ObjectCountersReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectCountersReply.ProtoReflect.Descriptor instead.
func (*ObjectCountersReply) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{14}
}

func (x *ObjectCountersReply) GetCounters() []*Counter {
	if x != nil {
		return x.Counters
	}
	return nil
}

type ObjectDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId  *ObjectId  `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	ContextId *ContextId `protobuf:"bytes,2,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
}

func (x *ObjectDeleteRequest) Reset() {
	*x = ObjectDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectDeleteRequest) ProtoMessage() {}

func (x *ObjectDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectDeleteRequest.ProtoReflect.Descriptor instead.
func (*ObjectDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{15}
}

func (x *ObjectDeleteRequest) GetObjectId() *ObjectId {
	if x != nil {
		return x.ObjectId
	}
	return nil
}

func (x *ObjectDeleteRequest) GetContextId() *ContextId {
	if x != nil {
		return x.ContextId
	}
	return nil
}

type ObjectDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ObjectDeleteReply) Reset() {
	*x = ObjectDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectDeleteReply) ProtoMessage() {}

func (x *ObjectDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectDeleteReply.ProtoReflect.Descriptor instead.
func (*ObjectDeleteReply) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{16}
}

type ObjectListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextId *ContextId `protobuf:"bytes,2,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
}

func (x *ObjectListRequest) Reset() {
	*x = ObjectListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectListRequest) ProtoMessage() {}

func (x *ObjectListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectListRequest.ProtoReflect.Descriptor instead.
func (*ObjectListRequest) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{17}
}

func (x *ObjectListRequest) GetContextId() *ContextId {
	if x != nil {
		return x.ContextId
	}
	return nil
}

type ObjectListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects []*ObjectId `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
}

func (x *ObjectListReply) Reset() {
	*x = ObjectListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectListReply) ProtoMessage() {}

func (x *ObjectListReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectListReply.ProtoReflect.Descriptor instead.
func (*ObjectListReply) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{18}
}

func (x *ObjectListReply) GetObjects() []*ObjectId {
	if x != nil {
		return x.Objects
	}
	return nil
}

type ContextCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextId           *ContextId `protobuf:"bytes,1,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
	PacketAddress       string     `protobuf:"bytes,2,opt,name=packet_address,json=packetAddress,proto3" json:"packet_address,omitempty"`
	NotificationAddress string     `protobuf:"bytes,3,opt,name=notification_address,json=notificationAddress,proto3" json:"notification_address,omitempty"`
}

func (x *ContextCreateRequest) Reset() {
	*x = ContextCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextCreateRequest) ProtoMessage() {}

func (x *ContextCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextCreateRequest.ProtoReflect.Descriptor instead.
func (*ContextCreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{19}
}

func (x *ContextCreateRequest) GetContextId() *ContextId {
	if x != nil {
		return x.ContextId
	}
	return nil
}

func (x *ContextCreateRequest) GetPacketAddress() string {
	if x != nil {
		return x.PacketAddress
	}
	return ""
}

func (x *ContextCreateRequest) GetNotificationAddress() string {
	if x != nil {
		return x.NotificationAddress
	}
	return ""
}

type ContextCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ContextCreateReply) Reset() {
	*x = ContextCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextCreateReply) ProtoMessage() {}

func (x *ContextCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextCreateReply.ProtoReflect.Descriptor instead.
func (*ContextCreateReply) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{20}
}

type ContextUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextId           *ContextId                       `protobuf:"bytes,1,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
	PacketAddress       string                           `protobuf:"bytes,2,opt,name=packet_address,json=packetAddress,proto3" json:"packet_address,omitempty"`
	NotificationAddress string                           `protobuf:"bytes,3,opt,name=notification_address,json=notificationAddress,proto3" json:"notification_address,omitempty"`
	Operations          []ContextUpdateRequest_Operation `protobuf:"varint,4,rep,packed,name=operations,proto3,enum=forwarding.ContextUpdateRequest_Operation" json:"operations,omitempty"`
}

func (x *ContextUpdateRequest) Reset() {
	*x = ContextUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextUpdateRequest) ProtoMessage() {}

func (x *ContextUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextUpdateRequest.ProtoReflect.Descriptor instead.
func (*ContextUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{21}
}

func (x *ContextUpdateRequest) GetContextId() *ContextId {
	if x != nil {
		return x.ContextId
	}
	return nil
}

func (x *ContextUpdateRequest) GetPacketAddress() string {
	if x != nil {
		return x.PacketAddress
	}
	return ""
}

func (x *ContextUpdateRequest) GetNotificationAddress() string {
	if x != nil {
		return x.NotificationAddress
	}
	return ""
}

func (x *ContextUpdateRequest) GetOperations() []ContextUpdateRequest_Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type ContextUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ContextUpdateReply) Reset() {
	*x = ContextUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextUpdateReply) ProtoMessage() {}

func (x *ContextUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextUpdateReply.ProtoReflect.Descriptor instead.
func (*ContextUpdateReply) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{22}
}

type ContextDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextId *ContextId `protobuf:"bytes,1,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
}

func (x *ContextDeleteRequest) Reset() {
	*x = ContextDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextDeleteRequest) ProtoMessage() {}

func (x *ContextDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextDeleteRequest.ProtoReflect.Descriptor instead.
func (*ContextDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{23}
}

func (x *ContextDeleteRequest) GetContextId() *ContextId {
	if x != nil {
		return x.ContextId
	}
	return nil
}

type ContextDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ContextDeleteReply) Reset() {
	*x = ContextDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextDeleteReply) ProtoMessage() {}

func (x *ContextDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextDeleteReply.ProtoReflect.Descriptor instead.
func (*ContextDeleteReply) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{24}
}

type ContextAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextId           *ContextId `protobuf:"bytes,1,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
	PacketAddress       string     `protobuf:"bytes,2,opt,name=packet_address,json=packetAddress,proto3" json:"packet_address,omitempty"`
	NotificationAddress string     `protobuf:"bytes,3,opt,name=notification_address,json=notificationAddress,proto3" json:"notification_address,omitempty"`
}

func (x *ContextAttr) Reset() {
	*x = ContextAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextAttr) ProtoMessage() {}

func (x *ContextAttr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextAttr.ProtoReflect.Descriptor instead.
func (*ContextAttr) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{25}
}

func (x *ContextAttr) GetContextId() *ContextId {
	if x != nil {
		return x.ContextId
	}
	return nil
}

func (x *ContextAttr) GetPacketAddress() string {
	if x != nil {
		return x.PacketAddress
	}
	return ""
}

func (x *ContextAttr) GetNotificationAddress() string {
	if x != nil {
		return x.NotificationAddress
	}
	return ""
}

type ContextListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ContextListRequest) Reset() {
	*x = ContextListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextListRequest) ProtoMessage() {}

func (x *ContextListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextListRequest.ProtoReflect.Descriptor instead.
func (*ContextListRequest) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{26}
}

type ContextListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contexts []*ContextAttr `protobuf:"bytes,1,rep,name=contexts,proto3" json:"contexts,omitempty"`
}

func (x *ContextListReply) Reset() {
	*x = ContextListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextListReply) ProtoMessage() {}

func (x *ContextListReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextListReply.ProtoReflect.Descriptor instead.
func (*ContextListReply) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{27}
}

func (x *ContextListReply) GetContexts() []*ContextAttr {
	if x != nil {
		return x.Contexts
	}
	return nil
}

type SetCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextId *ContextId `protobuf:"bytes,1,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
	SetId     *SetId     `protobuf:"bytes,3,opt,name=set_id,json=setId,proto3" json:"set_id,omitempty"`
}

func (x *SetCreateRequest) Reset() {
	*x = SetCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCreateRequest) ProtoMessage() {}

func (x *SetCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCreateRequest.ProtoReflect.Descriptor instead.
func (*SetCreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{28}
}

func (x *SetCreateRequest) GetContextId() *ContextId {
	if x != nil {
		return x.ContextId
	}
	return nil
}

func (x *SetCreateRequest) GetSetId() *SetId {
	if x != nil {
		return x.SetId
	}
	return nil
}

type SetCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectIndex *ObjectIndex `protobuf:"bytes,2,opt,name=object_index,json=objectIndex,proto3" json:"object_index,omitempty"`
}

func (x *SetCreateReply) Reset() {
	*x = SetCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCreateReply) ProtoMessage() {}

func (x *SetCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCreateReply.ProtoReflect.Descriptor instead.
func (*SetCreateReply) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{29}
}

func (x *SetCreateReply) GetObjectIndex() *ObjectIndex {
	if x != nil {
		return x.ObjectIndex
	}
	return nil
}

type SetUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextId *ContextId `protobuf:"bytes,1,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
	SetId     *SetId     `protobuf:"bytes,2,opt,name=set_id,json=setId,proto3" json:"set_id,omitempty"`
	Bytes     [][]byte   `protobuf:"bytes,3,rep,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *SetUpdateRequest) Reset() {
	*x = SetUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUpdateRequest) ProtoMessage() {}

func (x *SetUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUpdateRequest.ProtoReflect.Descriptor instead.
func (*SetUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{30}
}

func (x *SetUpdateRequest) GetContextId() *ContextId {
	if x != nil {
		return x.ContextId
	}
	return nil
}

func (x *SetUpdateRequest) GetSetId() *SetId {
	if x != nil {
		return x.SetId
	}
	return nil
}

func (x *SetUpdateRequest) GetBytes() [][]byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type SetUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetUpdateReply) Reset() {
	*x = SetUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUpdateReply) ProtoMessage() {}

func (x *SetUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUpdateReply.ProtoReflect.Descriptor instead.
func (*SetUpdateReply) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{31}
}

type FlowCounterId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId *ObjectId `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *FlowCounterId) Reset() {
	*x = FlowCounterId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowCounterId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowCounterId) ProtoMessage() {}

func (x *FlowCounterId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowCounterId.ProtoReflect.Descriptor instead.
func (*FlowCounterId) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{32}
}

func (x *FlowCounterId) GetObjectId() *ObjectId {
	if x != nil {
		return x.ObjectId
	}
	return nil
}

type FlowCounter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *FlowCounterId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Octets  uint64         `protobuf:"varint,2,opt,name=octets,proto3" json:"octets,omitempty"`
	Packets uint64         `protobuf:"varint,3,opt,name=packets,proto3" json:"packets,omitempty"`
}

func (x *FlowCounter) Reset() {
	*x = FlowCounter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowCounter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowCounter) ProtoMessage() {}

func (x *FlowCounter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowCounter.ProtoReflect.Descriptor instead.
func (*FlowCounter) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{33}
}

func (x *FlowCounter) GetId() *FlowCounterId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *FlowCounter) GetOctets() uint64 {
	if x != nil {
		return x.Octets
	}
	return 0
}

func (x *FlowCounter) GetPackets() uint64 {
	if x != nil {
		return x.Packets
	}
	return 0
}

type FlowCounterCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextId *ContextId     `protobuf:"bytes,1,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
	Id        *FlowCounterId `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FlowCounterCreateRequest) Reset() {
	*x = FlowCounterCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowCounterCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowCounterCreateRequest) ProtoMessage() {}

func (x *FlowCounterCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowCounterCreateRequest.ProtoReflect.Descriptor instead.
func (*FlowCounterCreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{34}
}

func (x *FlowCounterCreateRequest) GetContextId() *ContextId {
	if x != nil {
		return x.ContextId
	}
	return nil
}

func (x *FlowCounterCreateRequest) GetId() *FlowCounterId {
	if x != nil {
		return x.Id
	}
	return nil
}

type FlowCounterCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FlowCounterCreateReply) Reset() {
	*x = FlowCounterCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowCounterCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowCounterCreateReply) ProtoMessage() {}

func (x *FlowCounterCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowCounterCreateReply.ProtoReflect.Descriptor instead.
func (*FlowCounterCreateReply) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{35}
}

type FlowCounterQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextId *ContextId       `protobuf:"bytes,1,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
	Ids       []*FlowCounterId `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *FlowCounterQueryRequest) Reset() {
	*x = FlowCounterQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowCounterQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowCounterQueryRequest) ProtoMessage() {}

func (x *FlowCounterQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowCounterQueryRequest.ProtoReflect.Descriptor instead.
func (*FlowCounterQueryRequest) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{36}
}

func (x *FlowCounterQueryRequest) GetContextId() *ContextId {
	if x != nil {
		return x.ContextId
	}
	return nil
}

func (x *FlowCounterQueryRequest) GetIds() []*FlowCounterId {
	if x != nil {
		return x.Ids
	}
	return nil
}

type FlowCounterQueryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Counters []*FlowCounter `protobuf:"bytes,1,rep,name=counters,proto3" json:"counters,omitempty"`
}

func (x *FlowCounterQueryReply) Reset() {
	*x = FlowCounterQueryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowCounterQueryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowCounterQueryReply) ProtoMessage() {}

func (x *FlowCounterQueryReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_forwarding_forwarding_common_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowCounterQueryReply.ProtoReflect.Descriptor instead.
func (*FlowCounterQueryReply) Descriptor() ([]byte, []int) {
	return file_proto_forwarding_forwarding_common_proto_rawDescGZIP(), []int{37}
}

func (x *FlowCounterQueryReply) GetCounters() []*FlowCounter {
	if x != nil {
		return x.Counters
	}
	return nil
}

var File_proto_forwarding_forwarding_common_proto protoreflect.FileDescriptor

var file_proto_forwarding_forwarding_common_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x2f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x1b, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x25,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1a, 0x0a, 0x08, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x0b, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3a, 0x0a, 0x05,
	0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x08,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x06, 0x50, 0x6f, 0x72, 0x74,
	0x49, 0x64, 0x12, 0x31, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x08, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x07, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x31, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0c, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x62, 0x0a,
	0x0b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x37, 0x0a, 0x09,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x52, 0x08, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x22, 0x6d, 0x0a, 0x0d, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x2d, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x22, 0x5e, 0x0a, 0x10, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49,
	0x64, 0x52, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x22, 0x7a, 0x0a, 0x16, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x73, 0x6b, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x52, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x70, 0x0a, 0x0e,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x65, 0x74, 0x12, 0x34,
	0x0a, 0x08, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x52, 0x07, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x64, 0x52, 0x05, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x80,
	0x01, 0x0a, 0x15, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x22, 0x46, 0x0a, 0x13, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52,
	0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x22, 0x7e, 0x0a, 0x13, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x31, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x49,
	0x0a, 0x11, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x0f, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x07,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0xa6, 0x01, 0x0a,
	0x14, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xea, 0x02, 0x0a, 0x14,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x31, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x4a, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x76, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x15, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x4f, 0x50, 0x45, 0x52,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x41, 0x43,
	0x4b, 0x45, 0x54, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x29, 0x0a,
	0x25, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41,
	0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x4c,
	0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x9d, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x31, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x41, 0x74, 0x74, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x73, 0x22, 0x72, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x73,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x64, 0x52, 0x05,
	0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3a, 0x0a, 0x0c, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x88, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x06, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x74, 0x49,
	0x64, 0x52, 0x05, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22, 0x10,
	0x0a, 0x0e, 0x53, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x42, 0x0a, 0x0d, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x31, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x0b, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x6c, 0x6f,
	0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x63, 0x74, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x6f, 0x63, 0x74, 0x65, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x22, 0x7b, 0x0a, 0x18, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x6c, 0x6f, 0x77,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a,
	0x16, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x7c, 0x0a, 0x17, 0x46, 0x6c, 0x6f, 0x77, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x4c, 0x0a, 0x15, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33,
	0x0a, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x6c,
	0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x73, 0x2a, 0x6f, 0x0a, 0x0a, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x15, 0x0a,
	0x11, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x57, 0x52, 0x49,
	0x54, 0x45, 0x10, 0x03, 0x2a, 0x8a, 0x02, 0x0a, 0x11, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x23, 0x0a, 0x1f, 0x50, 0x41,
	0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55,
	0x50, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1c, 0x0a, 0x18, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52,
	0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x1e, 0x0a,
	0x1a, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x10, 0x02, 0x12, 0x1a, 0x0a,
	0x16, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4c, 0x32, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x41, 0x43,
	0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x5f, 0x4c, 0x33, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f,
	0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4c, 0x34, 0x10,
	0x05, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44,
	0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44,
	0x10, 0x06, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41,
	0x44, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10,
	0x14, 0x2a, 0xc8, 0x04, 0x0a, 0x0e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48,
	0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54,
	0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x01, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44,
	0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x10, 0x02,
	0x12, 0x1d, 0x0a, 0x19, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45,
	0x52, 0x5f, 0x49, 0x44, 0x5f, 0x45, 0x54, 0x48, 0x45, 0x52, 0x4e, 0x45, 0x54, 0x10, 0x03, 0x12,
	0x22, 0x0a, 0x1e, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52,
	0x5f, 0x49, 0x44, 0x5f, 0x45, 0x54, 0x48, 0x45, 0x52, 0x4e, 0x45, 0x54, 0x5f, 0x56, 0x4c, 0x41,
	0x4e, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45,
	0x41, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x45, 0x54, 0x48, 0x45, 0x52, 0x4e, 0x45, 0x54,
	0x5f, 0x31, 0x51, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f,
	0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x49, 0x50, 0x34, 0x10, 0x06, 0x12,
	0x18, 0x0a, 0x14, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52,
	0x5f, 0x49, 0x44, 0x5f, 0x49, 0x50, 0x36, 0x10, 0x07, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x41, 0x43,
	0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x47, 0x52,
	0x45, 0x10, 0x08, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45,
	0x41, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x54, 0x43, 0x50, 0x10, 0x09, 0x12, 0x18, 0x0a,
	0x14, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x49,
	0x44, 0x5f, 0x55, 0x44, 0x50, 0x10, 0x0a, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x41, 0x43, 0x4b, 0x45,
	0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x41, 0x52, 0x50, 0x10,
	0x0b, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44,
	0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x49, 0x43, 0x4d, 0x50, 0x34, 0x10, 0x0c, 0x12, 0x1b, 0x0a,
	0x17, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x49,
	0x44, 0x5f, 0x4f, 0x50, 0x41, 0x51, 0x55, 0x45, 0x10, 0x0d, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x41,
	0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x49,
	0x43, 0x4d, 0x50, 0x36, 0x10, 0x0e, 0x12, 0x25, 0x0a, 0x21, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54,
	0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x54, 0x55, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x36, 0x54, 0x4f, 0x34, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x10, 0x0f, 0x12, 0x27, 0x0a,
	0x23, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x49,
	0x44, 0x5f, 0x54, 0x55, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x36, 0x54, 0x4f, 0x34, 0x5f, 0x53, 0x45,
	0x43, 0x55, 0x52, 0x45, 0x10, 0x10, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54,
	0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x49, 0x50, 0x10, 0x13, 0x12,
	0x1b, 0x0a, 0x16, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52,
	0x5f, 0x49, 0x44, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0xe8, 0x07, 0x2a, 0x9d, 0x0a, 0x0a,
	0x0e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x12,
	0x20, 0x0a, 0x1c, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x4e, 0x55, 0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e,
	0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d,
	0x5f, 0x45, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x53, 0x52, 0x43, 0x10, 0x02,
	0x12, 0x22, 0x0a, 0x1e, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44,
	0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x45, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x44,
	0x53, 0x54, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x45, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f,
	0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x54,
	0x41, 0x47, 0x10, 0x05, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x5f, 0x50, 0x52,
	0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x10, 0x06, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x41, 0x43, 0x4b,
	0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x49, 0x50, 0x5f,
	0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x07, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x41, 0x43,
	0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x49, 0x50,
	0x5f, 0x41, 0x44, 0x44, 0x52, 0x5f, 0x53, 0x52, 0x43, 0x10, 0x08, 0x12, 0x20, 0x0a, 0x1c, 0x50,
	0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f,
	0x49, 0x50, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x5f, 0x44, 0x53, 0x54, 0x10, 0x09, 0x12, 0x1b, 0x0a,
	0x17, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55,
	0x4d, 0x5f, 0x49, 0x50, 0x5f, 0x48, 0x4f, 0x50, 0x10, 0x0a, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x41,
	0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x49,
	0x50, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x10, 0x0b, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x41, 0x43,
	0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x49, 0x50,
	0x5f, 0x51, 0x4f, 0x53, 0x10, 0x0c, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54,
	0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x49, 0x50, 0x36, 0x5f, 0x46,
	0x4c, 0x4f, 0x57, 0x10, 0x0d, 0x12, 0x26, 0x0a, 0x22, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f,
	0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54,
	0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x0e, 0x12, 0x27, 0x0a,
	0x23, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55,
	0x4d, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4f, 0x55,
	0x54, 0x50, 0x55, 0x54, 0x10, 0x0f, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54,
	0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45,
	0x54, 0x5f, 0x4c, 0x45, 0x4e, 0x47, 0x54, 0x48, 0x10, 0x10, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x41,
	0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x49,
	0x43, 0x4d, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x11, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x41,
	0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x49,
	0x43, 0x4d, 0x50, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x12, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x41,
	0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x4c,
	0x34, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x52, 0x43, 0x10, 0x13, 0x12, 0x20, 0x0a, 0x1c,
	0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d,
	0x5f, 0x4c, 0x34, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x44, 0x53, 0x54, 0x10, 0x14, 0x12, 0x1e,
	0x0a, 0x1a, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e,
	0x55, 0x4d, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x53, 0x10, 0x15, 0x12, 0x1c,
	0x0a, 0x18, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e,
	0x55, 0x4d, 0x5f, 0x41, 0x52, 0x50, 0x5f, 0x54, 0x50, 0x41, 0x10, 0x16, 0x12, 0x1c, 0x0a, 0x18,
	0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d,
	0x5f, 0x47, 0x52, 0x45, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x17, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x41,
	0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x47,
	0x52, 0x45, 0x5f, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x18, 0x12, 0x1f, 0x0a,
	0x1b, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55,
	0x4d, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x56, 0x52, 0x46, 0x10, 0x19, 0x12, 0x24,
	0x0a, 0x20, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e,
	0x55, 0x4d, 0x5f, 0x49, 0x43, 0x4d, 0x50, 0x36, 0x5f, 0x4e, 0x44, 0x5f, 0x54, 0x41, 0x52, 0x47,
	0x45, 0x54, 0x10, 0x1a, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x49, 0x43, 0x4d, 0x50, 0x36, 0x5f, 0x4e,
	0x44, 0x5f, 0x53, 0x4c, 0x4c, 0x10, 0x1b, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x41, 0x43, 0x4b, 0x45,
	0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x49, 0x43, 0x4d, 0x50,
	0x36, 0x5f, 0x4e, 0x44, 0x5f, 0x54, 0x4c, 0x4c, 0x10, 0x1c, 0x12, 0x28, 0x0a, 0x24, 0x50, 0x41,
	0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x50,
	0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x45, 0x5f,
	0x33, 0x32, 0x10, 0x22, 0x12, 0x28, 0x0a, 0x24, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f,
	0x41, 0x54, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x45, 0x5f, 0x31, 0x36, 0x10, 0x2e, 0x12, 0x27,
	0x0a, 0x23, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e,
	0x55, 0x4d, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x49, 0x42,
	0x55, 0x54, 0x45, 0x5f, 0x38, 0x10, 0x31, 0x12, 0x28, 0x0a, 0x24, 0x50, 0x41, 0x43, 0x4b, 0x45,
	0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x50, 0x41, 0x43, 0x4b,
	0x45, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x45, 0x5f, 0x32, 0x34, 0x10,
	0x32, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x41, 0x52, 0x50, 0x5f, 0x54, 0x4d, 0x41, 0x43, 0x10, 0x34,
	0x12, 0x1d, 0x0a, 0x19, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44,
	0x5f, 0x4e, 0x55, 0x4d, 0x5f, 0x41, 0x52, 0x50, 0x5f, 0x53, 0x4d, 0x41, 0x43, 0x10, 0x35, 0x12,
	0x1c, 0x0a, 0x18, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x4e, 0x55, 0x4d, 0x5f, 0x41, 0x52, 0x50, 0x5f, 0x53, 0x50, 0x41, 0x10, 0x36, 0x12, 0x20, 0x0a,
	0x1c, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55,
	0x4d, 0x5f, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x48, 0x4f, 0x50, 0x5f, 0x49, 0x50, 0x10, 0x38, 0x12,
	0x1b, 0x0a, 0x16, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x4e, 0x55, 0x4d, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0xe8, 0x07, 0x2a, 0xce, 0x09, 0x0a,
	0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45,
	0x52, 0x5f, 0x49, 0x44, 0x5f, 0x52, 0x58, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10,
	0x01, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f,
	0x52, 0x58, 0x5f, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x52, 0x58, 0x5f, 0x44, 0x52, 0x4f,
	0x50, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x52, 0x58, 0x5f, 0x44, 0x52, 0x4f,
	0x50, 0x5f, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x10, 0x04, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x52, 0x58, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x05, 0x12, 0x1e, 0x0a, 0x1a, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x52, 0x58, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x54, 0x58, 0x5f, 0x50, 0x41, 0x43,
	0x4b, 0x45, 0x54, 0x53, 0x10, 0x07, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45,
	0x52, 0x5f, 0x49, 0x44, 0x5f, 0x54, 0x58, 0x5f, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x10, 0x08,
	0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x54,
	0x58, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x09,
	0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x54,
	0x58, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x10, 0x0a, 0x12,
	0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x54, 0x58,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x0b,
	0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x54,
	0x58, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x10, 0x0c,
	0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x52,
	0x41, 0x54, 0x45, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53,
	0x10, 0x0d, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44,
	0x5f, 0x52, 0x41, 0x54, 0x45, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x4f, 0x43, 0x54, 0x45, 0x54,
	0x53, 0x10, 0x0e, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49,
	0x44, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x0f,
	0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x44,
	0x52, 0x4f, 0x50, 0x5f, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x10, 0x10, 0x12, 0x1c, 0x0a, 0x18,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x11, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4f,
	0x43, 0x54, 0x45, 0x54, 0x53, 0x10, 0x12, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x52, 0x58, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x50, 0x41, 0x43,
	0x4b, 0x45, 0x54, 0x53, 0x10, 0x13, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45,
	0x52, 0x5f, 0x49, 0x44, 0x5f, 0x52, 0x58, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x4f, 0x43, 0x54, 0x45,
	0x54, 0x53, 0x10, 0x14, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f,
	0x49, 0x44, 0x5f, 0x52, 0x58, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x44, 0x52, 0x4f, 0x50,
	0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x15, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x52, 0x58, 0x5f, 0x41, 0x44, 0x4d, 0x49,
	0x4e, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x10, 0x16, 0x12,
	0x24, 0x0a, 0x20, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x54, 0x58,
	0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x50, 0x41, 0x43, 0x4b,
	0x45, 0x54, 0x53, 0x10, 0x17, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52,
	0x5f, 0x49, 0x44, 0x5f, 0x54, 0x58, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x44, 0x52, 0x4f,
	0x50, 0x5f, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x10, 0x18, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x4d, 0x49, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x19, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x4d, 0x49, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4f,
	0x43, 0x54, 0x45, 0x54, 0x53, 0x10, 0x1a, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x4d, 0x49, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x1b, 0x12, 0x22, 0x0a, 0x1e,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x4d, 0x49, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x10, 0x1c,
	0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x45,
	0x4e, 0x43, 0x41, 0x50, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45,
	0x54, 0x53, 0x10, 0x1d, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f,
	0x49, 0x44, 0x5f, 0x45, 0x4e, 0x43, 0x41, 0x50, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4f,
	0x43, 0x54, 0x45, 0x54, 0x53, 0x10, 0x1e, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x44, 0x45, 0x43, 0x41, 0x50, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x1f, 0x12, 0x21, 0x0a, 0x1d, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x44, 0x45, 0x43, 0x41, 0x50, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x10, 0x20, 0x12, 0x22,
	0x0a, 0x1e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x46, 0x4c, 0x4f,
	0x57, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x53,
	0x10, 0x21, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x44,
	0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x50, 0x41,
	0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x22, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x52, 0x58, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x5f, 0x50,
	0x41, 0x43, 0x4b, 0x45, 0x54, 0x53, 0x10, 0x23, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x52, 0x58, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x5f,
	0x4f, 0x43, 0x54, 0x45, 0x54, 0x53, 0x10, 0x24, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0xff, 0x01, 0x42, 0x30, 0x5a,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_forwarding_forwarding_common_proto_rawDescOnce sync.Once
	file_proto_forwarding_forwarding_common_proto_rawDescData = file_proto_forwarding_forwarding_common_proto_rawDesc
)

func file_proto_forwarding_forwarding_common_proto_rawDescGZIP() []byte {
	file_proto_forwarding_forwarding_common_proto_rawDescOnce.Do(func() {
		file_proto_forwarding_forwarding_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_forwarding_forwarding_common_proto_rawDescData)
	})
	return file_proto_forwarding_forwarding_common_proto_rawDescData
}

var file_proto_forwarding_forwarding_common_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_proto_forwarding_forwarding_common_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_proto_forwarding_forwarding_common_proto_goTypes = []interface{}{
	(PortAction)(0),                     // 0: forwarding.PortAction
	(PacketHeaderGroup)(0),              // 1: forwarding.PacketHeaderGroup
	(PacketHeaderId)(0),                 // 2: forwarding.PacketHeaderId
	(PacketFieldNum)(0),                 // 3: forwarding.PacketFieldNum
	(CounterId)(0),                      // 4: forwarding.CounterId
	(ContextUpdateRequest_Operation)(0), // 5: forwarding.ContextUpdateRequest.Operation
	(*ContextId)(nil),                   // 6: forwarding.ContextId
	(*Counter)(nil),                     // 7: forwarding.Counter
	(*ObjectId)(nil),                    // 8: forwarding.ObjectId
	(*ObjectIndex)(nil),                 // 9: forwarding.ObjectIndex
	(*SetId)(nil),                       // 10: forwarding.SetId
	(*PortId)(nil),                      // 11: forwarding.PortId
	(*TableId)(nil),                     // 12: forwarding.TableId
	(*PacketBytes)(nil),                 // 13: forwarding.PacketBytes
	(*PacketField)(nil),                 // 14: forwarding.PacketField
	(*PacketFieldId)(nil),               // 15: forwarding.PacketFieldId
	(*PacketFieldBytes)(nil),            // 16: forwarding.PacketFieldBytes
	(*PacketFieldMaskedBytes)(nil),      // 17: forwarding.PacketFieldMaskedBytes
	(*PacketFieldSet)(nil),              // 18: forwarding.PacketFieldSet
	(*ObjectCountersRequest)(nil),       // 19: forwarding.ObjectCountersRequest
	(*ObjectCountersReply)(nil),         // 20: forwarding.ObjectCountersReply
	(*ObjectDeleteRequest)(nil),         // 21: forwarding.ObjectDeleteRequest
	(*ObjectDeleteReply)(nil),           // 22: forwarding.ObjectDeleteReply
	(*ObjectListRequest)(nil),           // 23: forwarding.ObjectListRequest
	(*ObjectListReply)(nil),             // 24: forwarding.ObjectListReply
	(*ContextCreateRequest)(nil),        // 25: forwarding.ContextCreateRequest
	(*ContextCreateReply)(nil),          // 26: forwarding.ContextCreateReply
	(*ContextUpdateRequest)(nil),        // 27: forwarding.ContextUpdateRequest
	(*ContextUpdateReply)(nil),          // 28: forwarding.ContextUpdateReply
	(*ContextDeleteRequest)(nil),        // 29: forwarding.ContextDeleteRequest
	(*ContextDeleteReply)(nil),          // 30: forwarding.ContextDeleteReply
	(*ContextAttr)(nil),                 // 31: forwarding.ContextAttr
	(*ContextListRequest)(nil),          // 32: forwarding.ContextListRequest
	(*ContextListReply)(nil),            // 33: forwarding.ContextListReply
	(*SetCreateRequest)(nil),            // 34: forwarding.SetCreateRequest
	(*SetCreateReply)(nil),              // 35: forwarding.SetCreateReply
	(*SetUpdateRequest)(nil),            // 36: forwarding.SetUpdateRequest
	(*SetUpdateReply)(nil),              // 37: forwarding.SetUpdateReply
	(*FlowCounterId)(nil),               // 38: forwarding.FlowCounterId
	(*FlowCounter)(nil),                 // 39: forwarding.FlowCounter
	(*FlowCounterCreateRequest)(nil),    // 40: forwarding.FlowCounterCreateRequest
	(*FlowCounterCreateReply)(nil),      // 41: forwarding.FlowCounterCreateReply
	(*FlowCounterQueryRequest)(nil),     // 42: forwarding.FlowCounterQueryRequest
	(*FlowCounterQueryReply)(nil),       // 43: forwarding.FlowCounterQueryReply
}
var file_proto_forwarding_forwarding_common_proto_depIdxs = []int32{
	4,  // 0: forwarding.Counter.id:type_name -> forwarding.CounterId
	8,  // 1: forwarding.SetId.object_id:type_name -> forwarding.ObjectId
	8,  // 2: forwarding.PortId.object_id:type_name -> forwarding.ObjectId
	8,  // 3: forwarding.TableId.object_id:type_name -> forwarding.ObjectId
	1,  // 4: forwarding.PacketBytes.header_group:type_name -> forwarding.PacketHeaderGroup
	3,  // 5: forwarding.PacketField.field_num:type_name -> forwarding.PacketFieldNum
	14, // 6: forwarding.PacketFieldId.field:type_name -> forwarding.PacketField
	13, // 7: forwarding.PacketFieldId.bytes:type_name -> forwarding.PacketBytes
	15, // 8: forwarding.PacketFieldBytes.field_id:type_name -> forwarding.PacketFieldId
	15, // 9: forwarding.PacketFieldMaskedBytes.field_id:type_name -> forwarding.PacketFieldId
	15, // 10: forwarding.PacketFieldSet.field_id:type_name -> forwarding.PacketFieldId
	10, // 11: forwarding.PacketFieldSet.set_id:type_name -> forwarding.SetId
	8,  // 12: forwarding.ObjectCountersRequest.object_id:type_name -> forwarding.ObjectId
	6,  // 13: forwarding.ObjectCountersRequest.context_id:type_name -> forwarding.ContextId
	7,  // 14: forwarding.ObjectCountersReply.counters:type_name -> forwarding.Counter
	8,  // 15: forwarding.ObjectDeleteRequest.object_id:type_name -> forwarding.ObjectId
	6,  // 16: forwarding.ObjectDeleteRequest.context_id:type_name -> forwarding.ContextId
	6,  // 17: forwarding.ObjectListRequest.context_id:type_name -> forwarding.ContextId
	8,  // 18: forwarding.ObjectListReply.objects:type_name -> forwarding.ObjectId
	6,  // 19: forwarding.ContextCreateRequest.context_id:type_name -> forwarding.ContextId
	6,  // 20: forwarding.ContextUpdateRequest.context_id:type_name -> forwarding.ContextId
	5,  // 21: forwarding.ContextUpdateRequest.operations:type_name -> forwarding.ContextUpdateRequest.Operation
	6,  // 22: forwarding.ContextDeleteRequest.context_id:type_name -> forwarding.ContextId
	6,  // 23: forwarding.ContextAttr.context_id:type_name -> forwarding.ContextId
	31, // 24: forwarding.ContextListReply.contexts:type_name -> forwarding.ContextAttr
	6,  // 25: forwarding.SetCreateRequest.context_id:type_name -> forwarding.ContextId
	10, // 26: forwarding.SetCreateRequest.set_id:type_name -> forwarding.SetId
	9,  // 27: forwarding.SetCreateReply.object_index:type_name -> forwarding.ObjectIndex
	6,  // 28: forwarding.SetUpdateRequest.context_id:type_name -> forwarding.ContextId
	10, // 29: forwarding.SetUpdateRequest.set_id:type_name -> forwarding.SetId
	8,  // 30: forwarding.FlowCounterId.object_id:type_name -> forwarding.ObjectId
	38, // 31: forwarding.FlowCounter.id:type_name -> forwarding.FlowCounterId
	6,  // 32: forwarding.FlowCounterCreateRequest.context_id:type_name -> forwarding.ContextId
	38, // 33: forwarding.FlowCounterCreateRequest.id:type_name -> forwarding.FlowCounterId
	6,  // 34: forwarding.FlowCounterQueryRequest.context_id:type_name -> forwarding.ContextId
	38, // 35: forwarding.FlowCounterQueryRequest.ids:type_name -> forwarding.FlowCounterId
	39, // 36: forwarding.FlowCounterQueryReply.counters:type_name -> forwarding.FlowCounter
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_proto_forwarding_forwarding_common_proto_init() }
func file_proto_forwarding_forwarding_common_proto_init() {
	if File_proto_forwarding_forwarding_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_forwarding_forwarding_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Counter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketBytes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketFieldId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketFieldBytes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketFieldMaskedBytes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketFieldSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectCountersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectCountersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowCounterId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowCounter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowCounterCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowCounterCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowCounterQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_forwarding_forwarding_common_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowCounterQueryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_forwarding_forwarding_common_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_forwarding_forwarding_common_proto_goTypes,
		DependencyIndexes: file_proto_forwarding_forwarding_common_proto_depIdxs,
		EnumInfos:         file_proto_forwarding_forwarding_common_proto_enumTypes,
		MessageInfos:      file_proto_forwarding_forwarding_common_proto_msgTypes,
	}.Build()
	File_proto_forwarding_forwarding_common_proto = out.File
	file_proto_forwarding_forwarding_common_proto_rawDesc = nil
	file_proto_forwarding_forwarding_common_proto_goTypes = nil
	file_proto_forwarding_forwarding_common_proto_depIdxs = nil
}
