// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: dataplane.proto

package dataplane

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PortState int32

const (
	PortState_PORT_STATE_UNSPECIFIED PortState = 0
	PortState_PORT_STATE_DOWN        PortState = 1
	PortState_PORT_STATE_UP          PortState = 2
)

// Enum value maps for PortState.
var (
	PortState_name = map[int32]string{
		0: "PORT_STATE_UNSPECIFIED",
		1: "PORT_STATE_DOWN",
		2: "PORT_STATE_UP",
	}
	PortState_value = map[string]int32{
		"PORT_STATE_UNSPECIFIED": 0,
		"PORT_STATE_DOWN":        1,
		"PORT_STATE_UP":          2,
	}
)

func (x PortState) Enum() *PortState {
	p := new(PortState)
	*p = x
	return p
}

func (x PortState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PortState) Descriptor() protoreflect.EnumDescriptor {
	return file_dataplane_proto_enumTypes[0].Descriptor()
}

func (PortState) Type() protoreflect.EnumType {
	return &file_dataplane_proto_enumTypes[0]
}

func (x PortState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PortState.Descriptor instead.
func (PortState) EnumDescriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{0}
}

type PuntProtocol int32

const (
	PuntProtocol_PUNT_PROTOCOL_UNSPECIFIED PuntProtocol = 0
	PuntProtocol_PUNT_PROTOCOL_BGP         PuntProtocol = 1
	PuntProtocol_PUNT_PROTOCOL_ISO         PuntProtocol = 2
)

// Enum value maps for PuntProtocol.
var (
	PuntProtocol_name = map[int32]string{
		0: "PUNT_PROTOCOL_UNSPECIFIED",
		1: "PUNT_PROTOCOL_BGP",
		2: "PUNT_PROTOCOL_ISO",
	}
	PuntProtocol_value = map[string]int32{
		"PUNT_PROTOCOL_UNSPECIFIED": 0,
		"PUNT_PROTOCOL_BGP":         1,
		"PUNT_PROTOCOL_ISO":         2,
	}
)

func (x PuntProtocol) Enum() *PuntProtocol {
	p := new(PuntProtocol)
	*p = x
	return p
}

func (x PuntProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PuntProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_dataplane_proto_enumTypes[1].Descriptor()
}

func (PuntProtocol) Type() protoreflect.EnumType {
	return &file_dataplane_proto_enumTypes[1]
}

func (x PuntProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PuntProtocol.Descriptor instead.
func (PuntProtocol) EnumDescriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{1}
}

type UpdatePortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Hwaddr string       `protobuf:"bytes,2,opt,name=hwaddr,proto3" json:"hwaddr,omitempty"`
	Ipv4   []*IPNetwork `protobuf:"bytes,3,rep,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6   []*IPNetwork `protobuf:"bytes,4,rep,name=ipv6,proto3" json:"ipv6,omitempty"`
}

func (x *UpdatePortRequest) Reset() {
	*x = UpdatePortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePortRequest) ProtoMessage() {}

func (x *UpdatePortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePortRequest.ProtoReflect.Descriptor instead.
func (*UpdatePortRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{0}
}

func (x *UpdatePortRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePortRequest) GetHwaddr() string {
	if x != nil {
		return x.Hwaddr
	}
	return ""
}

func (x *UpdatePortRequest) GetIpv4() []*IPNetwork {
	if x != nil {
		return x.Ipv4
	}
	return nil
}

func (x *UpdatePortRequest) GetIpv6() []*IPNetwork {
	if x != nil {
		return x.Ipv6
	}
	return nil
}

type UpdatePortResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePortResponse) Reset() {
	*x = UpdatePortResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePortResponse) ProtoMessage() {}

func (x *UpdatePortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePortResponse.ProtoReflect.Descriptor instead.
func (*UpdatePortResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{1}
}

type SetPortStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	AdminState PortState `protobuf:"varint,2,opt,name=admin_state,json=adminState,proto3,enum=lemming.dataplane.PortState" json:"admin_state,omitempty"`
}

func (x *SetPortStateRequest) Reset() {
	*x = SetPortStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPortStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPortStateRequest) ProtoMessage() {}

func (x *SetPortStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPortStateRequest.ProtoReflect.Descriptor instead.
func (*SetPortStateRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{2}
}

func (x *SetPortStateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetPortStateRequest) GetAdminState() PortState {
	if x != nil {
		return x.AdminState
	}
	return PortState_PORT_STATE_UNSPECIFIED
}

type SetPortStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetPortStateResponse) Reset() {
	*x = SetPortStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPortStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPortStateResponse) ProtoMessage() {}

func (x *SetPortStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPortStateResponse.ProtoReflect.Descriptor instead.
func (*SetPortStateResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{3}
}

type SubscribePortStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribePortStateRequest) Reset() {
	*x = SubscribePortStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribePortStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribePortStateRequest) ProtoMessage() {}

func (x *SubscribePortStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribePortStateRequest.ProtoReflect.Descriptor instead.
func (*SubscribePortStateRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{4}
}

type IPNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip        string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	PrefixLen uint64 `protobuf:"varint,3,opt,name=prefix_len,json=prefixLen,proto3" json:"prefix_len,omitempty"`
}

func (x *IPNetwork) Reset() {
	*x = IPNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPNetwork) ProtoMessage() {}

func (x *IPNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPNetwork.ProtoReflect.Descriptor instead.
func (*IPNetwork) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{5}
}

func (x *IPNetwork) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *IPNetwork) GetPrefixLen() uint64 {
	if x != nil {
		return x.PrefixLen
	}
	return 0
}

type SubscribePortStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	AdminState PortState    `protobuf:"varint,2,opt,name=admin_state,json=adminState,proto3,enum=lemming.dataplane.PortState" json:"admin_state,omitempty"`
	Network    []*IPNetwork `protobuf:"bytes,3,rep,name=network,proto3" json:"network,omitempty"`
}

func (x *SubscribePortStateResponse) Reset() {
	*x = SubscribePortStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribePortStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribePortStateResponse) ProtoMessage() {}

func (x *SubscribePortStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribePortStateResponse.ProtoReflect.Descriptor instead.
func (*SubscribePortStateResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{6}
}

func (x *SubscribePortStateResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubscribePortStateResponse) GetAdminState() PortState {
	if x != nil {
		return x.AdminState
	}
	return PortState_PORT_STATE_UNSPECIFIED
}

func (x *SubscribePortStateResponse) GetNetwork() []*IPNetwork {
	if x != nil {
		return x.Network
	}
	return nil
}

type NextHop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port   string `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	Ip     string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Weight uint64 `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *NextHop) Reset() {
	*x = NextHop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextHop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextHop) ProtoMessage() {}

func (x *NextHop) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextHop.ProtoReflect.Descriptor instead.
func (*NextHop) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{7}
}

func (x *NextHop) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *NextHop) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *NextHop) GetWeight() uint64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type InsertRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vrf     uint64     `protobuf:"varint,1,opt,name=vrf,proto3" json:"vrf,omitempty"`
	Prefix  string     `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	NextHop []*NextHop `protobuf:"bytes,3,rep,name=next_hop,json=nextHop,proto3" json:"next_hop,omitempty"`
}

func (x *InsertRouteRequest) Reset() {
	*x = InsertRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertRouteRequest) ProtoMessage() {}

func (x *InsertRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertRouteRequest.ProtoReflect.Descriptor instead.
func (*InsertRouteRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{8}
}

func (x *InsertRouteRequest) GetVrf() uint64 {
	if x != nil {
		return x.Vrf
	}
	return 0
}

func (x *InsertRouteRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *InsertRouteRequest) GetNextHop() []*NextHop {
	if x != nil {
		return x.NextHop
	}
	return nil
}

type InsertRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InsertRouteResponse) Reset() {
	*x = InsertRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertRouteResponse) ProtoMessage() {}

func (x *InsertRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertRouteResponse.ProtoReflect.Descriptor instead.
func (*InsertRouteResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{9}
}

type DeleteRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix string `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Vrf    uint64 `protobuf:"varint,2,opt,name=vrf,proto3" json:"vrf,omitempty"`
}

func (x *DeleteRouteRequest) Reset() {
	*x = DeleteRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRouteRequest) ProtoMessage() {}

func (x *DeleteRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRouteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRouteRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteRouteRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *DeleteRouteRequest) GetVrf() uint64 {
	if x != nil {
		return x.Vrf
	}
	return 0
}

type DeleteRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRouteResponse) Reset() {
	*x = DeleteRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRouteResponse) ProtoMessage() {}

func (x *DeleteRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRouteResponse.ProtoReflect.Descriptor instead.
func (*DeleteRouteResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{11}
}

type AddNeighborRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip     string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Hwaddr string `protobuf:"bytes,2,opt,name=hwaddr,proto3" json:"hwaddr,omitempty"`
}

func (x *AddNeighborRequest) Reset() {
	*x = AddNeighborRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNeighborRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNeighborRequest) ProtoMessage() {}

func (x *AddNeighborRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNeighborRequest.ProtoReflect.Descriptor instead.
func (*AddNeighborRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{12}
}

func (x *AddNeighborRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *AddNeighborRequest) GetHwaddr() string {
	if x != nil {
		return x.Hwaddr
	}
	return ""
}

type AddNeighborResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddNeighborResponse) Reset() {
	*x = AddNeighborResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNeighborResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNeighborResponse) ProtoMessage() {}

func (x *AddNeighborResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNeighborResponse.ProtoReflect.Descriptor instead.
func (*AddNeighborResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{13}
}

type DeleteNeighborRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *DeleteNeighborRequest) Reset() {
	*x = DeleteNeighborRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNeighborRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNeighborRequest) ProtoMessage() {}

func (x *DeleteNeighborRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNeighborRequest.ProtoReflect.Descriptor instead.
func (*DeleteNeighborRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteNeighborRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type DeleteNeighborResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteNeighborResponse) Reset() {
	*x = DeleteNeighborResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNeighborResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNeighborResponse) ProtoMessage() {}

func (x *DeleteNeighborResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNeighborResponse.ProtoReflect.Descriptor instead.
func (*DeleteNeighborResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{15}
}

type AddPuntRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port         string       `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	PuntProtocol PuntProtocol `protobuf:"varint,2,opt,name=punt_protocol,json=puntProtocol,proto3,enum=lemming.dataplane.PuntProtocol" json:"punt_protocol,omitempty"`
}

func (x *AddPuntRuleRequest) Reset() {
	*x = AddPuntRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPuntRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPuntRuleRequest) ProtoMessage() {}

func (x *AddPuntRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPuntRuleRequest.ProtoReflect.Descriptor instead.
func (*AddPuntRuleRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{16}
}

func (x *AddPuntRuleRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *AddPuntRuleRequest) GetPuntProtocol() PuntProtocol {
	if x != nil {
		return x.PuntProtocol
	}
	return PuntProtocol_PUNT_PROTOCOL_UNSPECIFIED
}

type AddPuntRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddPuntRuleResponse) Reset() {
	*x = AddPuntRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPuntRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPuntRuleResponse) ProtoMessage() {}

func (x *AddPuntRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPuntRuleResponse.ProtoReflect.Descriptor instead.
func (*AddPuntRuleResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{17}
}

type DeletePuntRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port         string       `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	PuntProtocol PuntProtocol `protobuf:"varint,2,opt,name=punt_protocol,json=puntProtocol,proto3,enum=lemming.dataplane.PuntProtocol" json:"punt_protocol,omitempty"`
}

func (x *DeletePuntRuleRequest) Reset() {
	*x = DeletePuntRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePuntRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePuntRuleRequest) ProtoMessage() {}

func (x *DeletePuntRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePuntRuleRequest.ProtoReflect.Descriptor instead.
func (*DeletePuntRuleRequest) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{18}
}

func (x *DeletePuntRuleRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *DeletePuntRuleRequest) GetPuntProtocol() PuntProtocol {
	if x != nil {
		return x.PuntProtocol
	}
	return PuntProtocol_PUNT_PROTOCOL_UNSPECIFIED
}

type DeletePuntRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePuntRuleResponse) Reset() {
	*x = DeletePuntRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dataplane_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePuntRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePuntRuleResponse) ProtoMessage() {}

func (x *DeletePuntRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataplane_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePuntRuleResponse.ProtoReflect.Descriptor instead.
func (*DeletePuntRuleResponse) Descriptor() ([]byte, []int) {
	return file_dataplane_proto_rawDescGZIP(), []int{19}
}

var File_dataplane_proto protoreflect.FileDescriptor

var file_dataplane_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x11, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x77, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x77, 0x61, 0x64, 0x64, 0x72, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x34, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x49, 0x50, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x52, 0x04, 0x69, 0x70, 0x76, 0x34, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x36,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x49, 0x50, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x04, 0x69, 0x70, 0x76, 0x36, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x68, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x65,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x3a, 0x0a, 0x09, 0x49, 0x50, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x6e, 0x22, 0xa7, 0x01, 0x0a, 0x1a,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d,
	0x0a, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x49, 0x50, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x45, 0x0a, 0x07, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x75, 0x0a, 0x12,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x72, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x76, 0x72, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x35, 0x0a, 0x08,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74,
	0x48, 0x6f, 0x70, 0x22, 0x15, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x72, 0x66, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x76, 0x72, 0x66, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3c, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x77, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x77, 0x61, 0x64, 0x64, 0x72, 0x22,
	0x15, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22,
	0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6e, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x50, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x44, 0x0a, 0x0d, 0x70, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6c, 0x65, 0x6d,
	0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x50,
	0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x0c, 0x70, 0x75, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x64, 0x64,
	0x50, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x71, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x44, 0x0a,
	0x0d, 0x70, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x50, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x0c, 0x70, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x6e,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x4f, 0x0a,
	0x09, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x50, 0x10, 0x02, 0x2a, 0x5b,
	0x0a, 0x0c, 0x50, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1d,
	0x0a, 0x19, 0x50, 0x55, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x50, 0x55, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x42,
	0x47, 0x50, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x55, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x49, 0x53, 0x4f, 0x10, 0x02, 0x32, 0x8d, 0x07, 0x0a, 0x03,
	0x48, 0x41, 0x4c, 0x12, 0x5b, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x24, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x61, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x26, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69,
	0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x6c, 0x65, 0x6d, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e,
	0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5e, 0x0a, 0x0b, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x6c, 0x65, 0x6d, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x6c, 0x65, 0x6d, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0b, 0x41, 0x64,
	0x64, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x12, 0x25, 0x2e, 0x6c, 0x65, 0x6d, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x12, 0x28, 0x2e, 0x6c,
	0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x50, 0x75, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x12, 0x25, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x75, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6c, 0x65, 0x6d, 0x6d,
	0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x50, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x6e,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x28, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x42, 0x2f, 0x5a, 0x2d, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6c, 0x65, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dataplane_proto_rawDescOnce sync.Once
	file_dataplane_proto_rawDescData = file_dataplane_proto_rawDesc
)

func file_dataplane_proto_rawDescGZIP() []byte {
	file_dataplane_proto_rawDescOnce.Do(func() {
		file_dataplane_proto_rawDescData = protoimpl.X.CompressGZIP(file_dataplane_proto_rawDescData)
	})
	return file_dataplane_proto_rawDescData
}

var file_dataplane_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_dataplane_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_dataplane_proto_goTypes = []interface{}{
	(PortState)(0),                     // 0: lemming.dataplane.PortState
	(PuntProtocol)(0),                  // 1: lemming.dataplane.PuntProtocol
	(*UpdatePortRequest)(nil),          // 2: lemming.dataplane.UpdatePortRequest
	(*UpdatePortResponse)(nil),         // 3: lemming.dataplane.UpdatePortResponse
	(*SetPortStateRequest)(nil),        // 4: lemming.dataplane.SetPortStateRequest
	(*SetPortStateResponse)(nil),       // 5: lemming.dataplane.SetPortStateResponse
	(*SubscribePortStateRequest)(nil),  // 6: lemming.dataplane.SubscribePortStateRequest
	(*IPNetwork)(nil),                  // 7: lemming.dataplane.IPNetwork
	(*SubscribePortStateResponse)(nil), // 8: lemming.dataplane.SubscribePortStateResponse
	(*NextHop)(nil),                    // 9: lemming.dataplane.NextHop
	(*InsertRouteRequest)(nil),         // 10: lemming.dataplane.InsertRouteRequest
	(*InsertRouteResponse)(nil),        // 11: lemming.dataplane.InsertRouteResponse
	(*DeleteRouteRequest)(nil),         // 12: lemming.dataplane.DeleteRouteRequest
	(*DeleteRouteResponse)(nil),        // 13: lemming.dataplane.DeleteRouteResponse
	(*AddNeighborRequest)(nil),         // 14: lemming.dataplane.AddNeighborRequest
	(*AddNeighborResponse)(nil),        // 15: lemming.dataplane.AddNeighborResponse
	(*DeleteNeighborRequest)(nil),      // 16: lemming.dataplane.DeleteNeighborRequest
	(*DeleteNeighborResponse)(nil),     // 17: lemming.dataplane.DeleteNeighborResponse
	(*AddPuntRuleRequest)(nil),         // 18: lemming.dataplane.AddPuntRuleRequest
	(*AddPuntRuleResponse)(nil),        // 19: lemming.dataplane.AddPuntRuleResponse
	(*DeletePuntRuleRequest)(nil),      // 20: lemming.dataplane.DeletePuntRuleRequest
	(*DeletePuntRuleResponse)(nil),     // 21: lemming.dataplane.DeletePuntRuleResponse
}
var file_dataplane_proto_depIdxs = []int32{
	7,  // 0: lemming.dataplane.UpdatePortRequest.ipv4:type_name -> lemming.dataplane.IPNetwork
	7,  // 1: lemming.dataplane.UpdatePortRequest.ipv6:type_name -> lemming.dataplane.IPNetwork
	0,  // 2: lemming.dataplane.SetPortStateRequest.admin_state:type_name -> lemming.dataplane.PortState
	0,  // 3: lemming.dataplane.SubscribePortStateResponse.admin_state:type_name -> lemming.dataplane.PortState
	7,  // 4: lemming.dataplane.SubscribePortStateResponse.network:type_name -> lemming.dataplane.IPNetwork
	9,  // 5: lemming.dataplane.InsertRouteRequest.next_hop:type_name -> lemming.dataplane.NextHop
	1,  // 6: lemming.dataplane.AddPuntRuleRequest.punt_protocol:type_name -> lemming.dataplane.PuntProtocol
	1,  // 7: lemming.dataplane.DeletePuntRuleRequest.punt_protocol:type_name -> lemming.dataplane.PuntProtocol
	2,  // 8: lemming.dataplane.HAL.UpdatePort:input_type -> lemming.dataplane.UpdatePortRequest
	4,  // 9: lemming.dataplane.HAL.SetPortState:input_type -> lemming.dataplane.SetPortStateRequest
	6,  // 10: lemming.dataplane.HAL.SubscribePortState:input_type -> lemming.dataplane.SubscribePortStateRequest
	10, // 11: lemming.dataplane.HAL.InsertRoute:input_type -> lemming.dataplane.InsertRouteRequest
	12, // 12: lemming.dataplane.HAL.DeleteRoute:input_type -> lemming.dataplane.DeleteRouteRequest
	14, // 13: lemming.dataplane.HAL.AddNeighbor:input_type -> lemming.dataplane.AddNeighborRequest
	16, // 14: lemming.dataplane.HAL.DeleteNeighbor:input_type -> lemming.dataplane.DeleteNeighborRequest
	18, // 15: lemming.dataplane.HAL.AddPuntRule:input_type -> lemming.dataplane.AddPuntRuleRequest
	20, // 16: lemming.dataplane.HAL.DeletePuntRule:input_type -> lemming.dataplane.DeletePuntRuleRequest
	3,  // 17: lemming.dataplane.HAL.UpdatePort:output_type -> lemming.dataplane.UpdatePortResponse
	5,  // 18: lemming.dataplane.HAL.SetPortState:output_type -> lemming.dataplane.SetPortStateResponse
	8,  // 19: lemming.dataplane.HAL.SubscribePortState:output_type -> lemming.dataplane.SubscribePortStateResponse
	11, // 20: lemming.dataplane.HAL.InsertRoute:output_type -> lemming.dataplane.InsertRouteResponse
	13, // 21: lemming.dataplane.HAL.DeleteRoute:output_type -> lemming.dataplane.DeleteRouteResponse
	15, // 22: lemming.dataplane.HAL.AddNeighbor:output_type -> lemming.dataplane.AddNeighborResponse
	17, // 23: lemming.dataplane.HAL.DeleteNeighbor:output_type -> lemming.dataplane.DeleteNeighborResponse
	19, // 24: lemming.dataplane.HAL.AddPuntRule:output_type -> lemming.dataplane.AddPuntRuleResponse
	20, // 25: lemming.dataplane.HAL.DeletePuntRule:output_type -> lemming.dataplane.DeletePuntRuleRequest
	17, // [17:26] is the sub-list for method output_type
	8,  // [8:17] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_dataplane_proto_init() }
func file_dataplane_proto_init() {
	if File_dataplane_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dataplane_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePortResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPortStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPortStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribePortStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribePortStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextHop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNeighborRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNeighborResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNeighborRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNeighborResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPuntRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPuntRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePuntRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dataplane_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePuntRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dataplane_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dataplane_proto_goTypes,
		DependencyIndexes: file_dataplane_proto_depIdxs,
		EnumInfos:         file_dataplane_proto_enumTypes,
		MessageInfos:      file_dataplane_proto_msgTypes,
	}.Build()
	File_dataplane_proto = out.File
	file_dataplane_proto_rawDesc = nil
	file_dataplane_proto_goTypes = nil
	file_dataplane_proto_depIdxs = nil
}
