load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "sysrib",
    srcs = [
        "connected.go",
        "logger.go",
        "server.go",
        "server_zapi.go",
        "static.go",
        "sysrib.go",
        "util.go",
        "zapi.go",
    ],
    importpath = "github.com/openconfig/lemming/sysrib",
    visibility = ["//visibility:public"],
    deps = [
        "//dataplane/dplanerc",
        "//gnmi/fakedevice",
        "//gnmi/gnmiclient",
        "//gnmi/oc",
        "//gnmi/oc/ocpath",
        "//internal/debug",
        "//proto/dataplane",
        "//proto/routing",
        "//proto/sysrib",
        "@com_github_golang_glog//:glog",
        "@com_github_google_go_cmp//cmp",
        "@com_github_kentik_patricia//:patricia",
        "@com_github_kentik_patricia//generics_tree",
        "@com_github_openconfig_gnmi//proto/gnmi",
        "@com_github_openconfig_gribigo//afthelper",
        "@com_github_openconfig_ygnmi//ygnmi",
        "@com_github_openconfig_ygot//ytypes",
        "@com_github_osrg_gobgp_v3//pkg/log",
        "@com_github_osrg_gobgp_v3//pkg/zebra",
        "@com_github_sirupsen_logrus//:logrus",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
    ],
)

go_test(
    name = "sysrib_test",
    size = "medium",
    timeout = "long",
    srcs = [
        "server_test.go",
        "static_connected_test.go",
        "sysrib_test.go",
        "zapi_test.go",
    ],
    embed = [":sysrib"],
    deps = [
        "//gnmi",
        "//gnmi/fakedevice",
        "//gnmi/gnmiclient",
        "//gnmi/oc",
        "//gnmi/oc/ocpath",
        "//proto/dataplane",
        "//proto/routing",
        "//proto/sysrib",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@com_github_openconfig_gnmi//proto/gnmi",
        "@com_github_openconfig_gribigo//afthelper",
        "@com_github_openconfig_ygnmi//schemaless",
        "@com_github_openconfig_ygnmi//ygnmi",
        "@com_github_openconfig_ygot//ygot",
        "@com_github_osrg_gobgp_v3//pkg/zebra",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//credentials/local",
        "@org_golang_google_protobuf//testing/protocmp",
    ],
)
